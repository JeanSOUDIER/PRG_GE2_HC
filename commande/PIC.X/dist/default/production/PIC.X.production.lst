

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 25 10:36:17 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 1.45
    48                           ; Generated 16/11/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F1619 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011C                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  028C                     	;# 
   204  028D                     	;# 
   205  028E                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0298                     	;# 
   212  0298                     	;# 
   213  0299                     	;# 
   214  029A                     	;# 
   215  029B                     	;# 
   216  029E                     	;# 
   217  030C                     	;# 
   218  030D                     	;# 
   219  030E                     	;# 
   220  038C                     	;# 
   221  038D                     	;# 
   222  038E                     	;# 
   223  0391                     	;# 
   224  0392                     	;# 
   225  0393                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  0397                     	;# 
   230  0398                     	;# 
   231  0399                     	;# 
   232  040E                     	;# 
   233  0413                     	;# 
   234  0413                     	;# 
   235  0414                     	;# 
   236  0414                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  0418                     	;# 
   241  041A                     	;# 
   242  041A                     	;# 
   243  041B                     	;# 
   244  041B                     	;# 
   245  041C                     	;# 
   246  041D                     	;# 
   247  041E                     	;# 
   248  041F                     	;# 
   249  0493                     	;# 
   250  0494                     	;# 
   251  0495                     	;# 
   252  0496                     	;# 
   253  049A                     	;# 
   254  049B                     	;# 
   255  049C                     	;# 
   256  049D                     	;# 
   257  058C                     	;# 
   258  058C                     	;# 
   259  058D                     	;# 
   260  058E                     	;# 
   261  058E                     	;# 
   262  058F                     	;# 
   263  0590                     	;# 
   264  0590                     	;# 
   265  0591                     	;# 
   266  0592                     	;# 
   267  0592                     	;# 
   268  0593                     	;# 
   269  0594                     	;# 
   270  0594                     	;# 
   271  0595                     	;# 
   272  0596                     	;# 
   273  0596                     	;# 
   274  0597                     	;# 
   275  0598                     	;# 
   276  0599                     	;# 
   277  059A                     	;# 
   278  059B                     	;# 
   279  059B                     	;# 
   280  059C                     	;# 
   281  059D                     	;# 
   282  060C                     	;# 
   283  060C                     	;# 
   284  060D                     	;# 
   285  060E                     	;# 
   286  060F                     	;# 
   287  060F                     	;# 
   288  0610                     	;# 
   289  0611                     	;# 
   290  0612                     	;# 
   291  0613                     	;# 
   292  0614                     	;# 
   293  0617                     	;# 
   294  0618                     	;# 
   295  0619                     	;# 
   296  061A                     	;# 
   297  061B                     	;# 
   298  061C                     	;# 
   299  0691                     	;# 
   300  0692                     	;# 
   301  0693                     	;# 
   302  0694                     	;# 
   303  0695                     	;# 
   304  0696                     	;# 
   305  0697                     	;# 
   306  0699                     	;# 
   307  069A                     	;# 
   308  0711                     	;# 
   309  0712                     	;# 
   310  0713                     	;# 
   311  0714                     	;# 
   312  0715                     	;# 
   313  0718                     	;# 
   314  0718                     	;# 
   315  0719                     	;# 
   316  071A                     	;# 
   317  071A                     	;# 
   318  071B                     	;# 
   319  071C                     	;# 
   320  071D                     	;# 
   321  0791                     	;# 
   322  0791                     	;# 
   323  0792                     	;# 
   324  0793                     	;# 
   325  0793                     	;# 
   326  0794                     	;# 
   327  0795                     	;# 
   328  0795                     	;# 
   329  0796                     	;# 
   330  0797                     	;# 
   331  0797                     	;# 
   332  0798                     	;# 
   333  0799                     	;# 
   334  079A                     	;# 
   335  080C                     	;# 
   336  080C                     	;# 
   337  080D                     	;# 
   338  080E                     	;# 
   339  080E                     	;# 
   340  080F                     	;# 
   341  0810                     	;# 
   342  0810                     	;# 
   343  0811                     	;# 
   344  0812                     	;# 
   345  0812                     	;# 
   346  0813                     	;# 
   347  0814                     	;# 
   348  0815                     	;# 
   349  0816                     	;# 
   350  0817                     	;# 
   351  0818                     	;# 
   352  0819                     	;# 
   353  081A                     	;# 
   354  081A                     	;# 
   355  081B                     	;# 
   356  081C                     	;# 
   357  081C                     	;# 
   358  081D                     	;# 
   359  088C                     	;# 
   360  088D                     	;# 
   361  088E                     	;# 
   362  088F                     	;# 
   363  088F                     	;# 
   364  0890                     	;# 
   365  0891                     	;# 
   366  0892                     	;# 
   367  0893                     	;# 
   368  0893                     	;# 
   369  0894                     	;# 
   370  0895                     	;# 
   371  0896                     	;# 
   372  0897                     	;# 
   373  0897                     	;# 
   374  0898                     	;# 
   375  0899                     	;# 
   376  0D8C                     	;# 
   377  0D8C                     	;# 
   378  0D8D                     	;# 
   379  0D8E                     	;# 
   380  0D8F                     	;# 
   381  0D8F                     	;# 
   382  0D90                     	;# 
   383  0D91                     	;# 
   384  0D92                     	;# 
   385  0D92                     	;# 
   386  0D93                     	;# 
   387  0D94                     	;# 
   388  0D95                     	;# 
   389  0D95                     	;# 
   390  0D96                     	;# 
   391  0D97                     	;# 
   392  0D98                     	;# 
   393  0D99                     	;# 
   394  0D9A                     	;# 
   395  0D9B                     	;# 
   396  0D9C                     	;# 
   397  0D9D                     	;# 
   398  0D9E                     	;# 
   399  0D9E                     	;# 
   400  0D9F                     	;# 
   401  0DA0                     	;# 
   402  0DA1                     	;# 
   403  0DA1                     	;# 
   404  0DA2                     	;# 
   405  0DA3                     	;# 
   406  0DA4                     	;# 
   407  0DA4                     	;# 
   408  0DA5                     	;# 
   409  0DA6                     	;# 
   410  0DA7                     	;# 
   411  0DA7                     	;# 
   412  0DA8                     	;# 
   413  0DA9                     	;# 
   414  0DAA                     	;# 
   415  0DAB                     	;# 
   416  0DAC                     	;# 
   417  0DAD                     	;# 
   418  0DAE                     	;# 
   419  0DAF                     	;# 
   420  0E0F                     	;# 
   421  0E10                     	;# 
   422  0E11                     	;# 
   423  0E12                     	;# 
   424  0E13                     	;# 
   425  0E14                     	;# 
   426  0E15                     	;# 
   427  0E16                     	;# 
   428  0E17                     	;# 
   429  0E18                     	;# 
   430  0E19                     	;# 
   431  0E1A                     	;# 
   432  0E1B                     	;# 
   433  0E1C                     	;# 
   434  0E1D                     	;# 
   435  0E1E                     	;# 
   436  0E1F                     	;# 
   437  0E20                     	;# 
   438  0E21                     	;# 
   439  0E22                     	;# 
   440  0E23                     	;# 
   441  0E24                     	;# 
   442  0E25                     	;# 
   443  0E26                     	;# 
   444  0E27                     	;# 
   445  0E28                     	;# 
   446  0E29                     	;# 
   447  0E2A                     	;# 
   448  0E2B                     	;# 
   449  0E2C                     	;# 
   450  0E2D                     	;# 
   451  0E2E                     	;# 
   452  0E90                     	;# 
   453  0E91                     	;# 
   454  0E92                     	;# 
   455  0E94                     	;# 
   456  0E95                     	;# 
   457  0E9C                     	;# 
   458  0E9D                     	;# 
   459  0E9E                     	;# 
   460  0E9F                     	;# 
   461  0EA0                     	;# 
   462  0EA1                     	;# 
   463  0EA2                     	;# 
   464  0EA3                     	;# 
   465  0EA4                     	;# 
   466  0EA5                     	;# 
   467  0EA6                     	;# 
   468  0EA7                     	;# 
   469  0F0F                     	;# 
   470  0F10                     	;# 
   471  0F11                     	;# 
   472  0F12                     	;# 
   473  0F13                     	;# 
   474  0F14                     	;# 
   475  0F15                     	;# 
   476  0F16                     	;# 
   477  0F17                     	;# 
   478  0F18                     	;# 
   479  0F19                     	;# 
   480  0F1A                     	;# 
   481  0F1B                     	;# 
   482  0F1C                     	;# 
   483  0F1D                     	;# 
   484  0F1E                     	;# 
   485  0F1F                     	;# 
   486  0F20                     	;# 
   487  0F21                     	;# 
   488  0F22                     	;# 
   489  0F23                     	;# 
   490  0F24                     	;# 
   491  0F25                     	;# 
   492  0F26                     	;# 
   493  0F27                     	;# 
   494  0F28                     	;# 
   495  0F29                     	;# 
   496  0F2A                     	;# 
   497  0F2B                     	;# 
   498  0F2C                     	;# 
   499  0F2D                     	;# 
   500  0F2E                     	;# 
   501  0F2F                     	;# 
   502  0F30                     	;# 
   503  0F31                     	;# 
   504  0F32                     	;# 
   505  0F33                     	;# 
   506  0F34                     	;# 
   507  0F35                     	;# 
   508  0F36                     	;# 
   509  0F37                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000D                     	;# 
   535  000E                     	;# 
   536  0010                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0013                     	;# 
   540  0014                     	;# 
   541  0015                     	;# 
   542  0016                     	;# 
   543  0016                     	;# 
   544  0017                     	;# 
   545  0018                     	;# 
   546  0019                     	;# 
   547  001A                     	;# 
   548  001A                     	;# 
   549  001B                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  001D                     	;# 
   553  001E                     	;# 
   554  001F                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0090                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0093                     	;# 
   562  0094                     	;# 
   563  0095                     	;# 
   564  0096                     	;# 
   565  0098                     	;# 
   566  0099                     	;# 
   567  009A                     	;# 
   568  009B                     	;# 
   569  009B                     	;# 
   570  009C                     	;# 
   571  009D                     	;# 
   572  009E                     	;# 
   573  009F                     	;# 
   574  010C                     	;# 
   575  010D                     	;# 
   576  010E                     	;# 
   577  0111                     	;# 
   578  0112                     	;# 
   579  0113                     	;# 
   580  0114                     	;# 
   581  0115                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  0118                     	;# 
   585  0119                     	;# 
   586  011C                     	;# 
   587  018C                     	;# 
   588  018D                     	;# 
   589  018E                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0197                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  0199                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019A                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019C                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019D                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  020C                     	;# 
   625  020D                     	;# 
   626  020E                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  028C                     	;# 
   644  028D                     	;# 
   645  028E                     	;# 
   646  0291                     	;# 
   647  0291                     	;# 
   648  0292                     	;# 
   649  0293                     	;# 
   650  0294                     	;# 
   651  0298                     	;# 
   652  0298                     	;# 
   653  0299                     	;# 
   654  029A                     	;# 
   655  029B                     	;# 
   656  029E                     	;# 
   657  030C                     	;# 
   658  030D                     	;# 
   659  030E                     	;# 
   660  038C                     	;# 
   661  038D                     	;# 
   662  038E                     	;# 
   663  0391                     	;# 
   664  0392                     	;# 
   665  0393                     	;# 
   666  0394                     	;# 
   667  0395                     	;# 
   668  0396                     	;# 
   669  0397                     	;# 
   670  0398                     	;# 
   671  0399                     	;# 
   672  040E                     	;# 
   673  0413                     	;# 
   674  0413                     	;# 
   675  0414                     	;# 
   676  0414                     	;# 
   677  0415                     	;# 
   678  0416                     	;# 
   679  0417                     	;# 
   680  0418                     	;# 
   681  041A                     	;# 
   682  041A                     	;# 
   683  041B                     	;# 
   684  041B                     	;# 
   685  041C                     	;# 
   686  041D                     	;# 
   687  041E                     	;# 
   688  041F                     	;# 
   689  0493                     	;# 
   690  0494                     	;# 
   691  0495                     	;# 
   692  0496                     	;# 
   693  049A                     	;# 
   694  049B                     	;# 
   695  049C                     	;# 
   696  049D                     	;# 
   697  058C                     	;# 
   698  058C                     	;# 
   699  058D                     	;# 
   700  058E                     	;# 
   701  058E                     	;# 
   702  058F                     	;# 
   703  0590                     	;# 
   704  0590                     	;# 
   705  0591                     	;# 
   706  0592                     	;# 
   707  0592                     	;# 
   708  0593                     	;# 
   709  0594                     	;# 
   710  0594                     	;# 
   711  0595                     	;# 
   712  0596                     	;# 
   713  0596                     	;# 
   714  0597                     	;# 
   715  0598                     	;# 
   716  0599                     	;# 
   717  059A                     	;# 
   718  059B                     	;# 
   719  059B                     	;# 
   720  059C                     	;# 
   721  059D                     	;# 
   722  060C                     	;# 
   723  060C                     	;# 
   724  060D                     	;# 
   725  060E                     	;# 
   726  060F                     	;# 
   727  060F                     	;# 
   728  0610                     	;# 
   729  0611                     	;# 
   730  0612                     	;# 
   731  0613                     	;# 
   732  0614                     	;# 
   733  0617                     	;# 
   734  0618                     	;# 
   735  0619                     	;# 
   736  061A                     	;# 
   737  061B                     	;# 
   738  061C                     	;# 
   739  0691                     	;# 
   740  0692                     	;# 
   741  0693                     	;# 
   742  0694                     	;# 
   743  0695                     	;# 
   744  0696                     	;# 
   745  0697                     	;# 
   746  0699                     	;# 
   747  069A                     	;# 
   748  0711                     	;# 
   749  0712                     	;# 
   750  0713                     	;# 
   751  0714                     	;# 
   752  0715                     	;# 
   753  0718                     	;# 
   754  0718                     	;# 
   755  0719                     	;# 
   756  071A                     	;# 
   757  071A                     	;# 
   758  071B                     	;# 
   759  071C                     	;# 
   760  071D                     	;# 
   761  0791                     	;# 
   762  0791                     	;# 
   763  0792                     	;# 
   764  0793                     	;# 
   765  0793                     	;# 
   766  0794                     	;# 
   767  0795                     	;# 
   768  0795                     	;# 
   769  0796                     	;# 
   770  0797                     	;# 
   771  0797                     	;# 
   772  0798                     	;# 
   773  0799                     	;# 
   774  079A                     	;# 
   775  080C                     	;# 
   776  080C                     	;# 
   777  080D                     	;# 
   778  080E                     	;# 
   779  080E                     	;# 
   780  080F                     	;# 
   781  0810                     	;# 
   782  0810                     	;# 
   783  0811                     	;# 
   784  0812                     	;# 
   785  0812                     	;# 
   786  0813                     	;# 
   787  0814                     	;# 
   788  0815                     	;# 
   789  0816                     	;# 
   790  0817                     	;# 
   791  0818                     	;# 
   792  0819                     	;# 
   793  081A                     	;# 
   794  081A                     	;# 
   795  081B                     	;# 
   796  081C                     	;# 
   797  081C                     	;# 
   798  081D                     	;# 
   799  088C                     	;# 
   800  088D                     	;# 
   801  088E                     	;# 
   802  088F                     	;# 
   803  088F                     	;# 
   804  0890                     	;# 
   805  0891                     	;# 
   806  0892                     	;# 
   807  0893                     	;# 
   808  0893                     	;# 
   809  0894                     	;# 
   810  0895                     	;# 
   811  0896                     	;# 
   812  0897                     	;# 
   813  0897                     	;# 
   814  0898                     	;# 
   815  0899                     	;# 
   816  0D8C                     	;# 
   817  0D8C                     	;# 
   818  0D8D                     	;# 
   819  0D8E                     	;# 
   820  0D8F                     	;# 
   821  0D8F                     	;# 
   822  0D90                     	;# 
   823  0D91                     	;# 
   824  0D92                     	;# 
   825  0D92                     	;# 
   826  0D93                     	;# 
   827  0D94                     	;# 
   828  0D95                     	;# 
   829  0D95                     	;# 
   830  0D96                     	;# 
   831  0D97                     	;# 
   832  0D98                     	;# 
   833  0D99                     	;# 
   834  0D9A                     	;# 
   835  0D9B                     	;# 
   836  0D9C                     	;# 
   837  0D9D                     	;# 
   838  0D9E                     	;# 
   839  0D9E                     	;# 
   840  0D9F                     	;# 
   841  0DA0                     	;# 
   842  0DA1                     	;# 
   843  0DA1                     	;# 
   844  0DA2                     	;# 
   845  0DA3                     	;# 
   846  0DA4                     	;# 
   847  0DA4                     	;# 
   848  0DA5                     	;# 
   849  0DA6                     	;# 
   850  0DA7                     	;# 
   851  0DA7                     	;# 
   852  0DA8                     	;# 
   853  0DA9                     	;# 
   854  0DAA                     	;# 
   855  0DAB                     	;# 
   856  0DAC                     	;# 
   857  0DAD                     	;# 
   858  0DAE                     	;# 
   859  0DAF                     	;# 
   860  0E0F                     	;# 
   861  0E10                     	;# 
   862  0E11                     	;# 
   863  0E12                     	;# 
   864  0E13                     	;# 
   865  0E14                     	;# 
   866  0E15                     	;# 
   867  0E16                     	;# 
   868  0E17                     	;# 
   869  0E18                     	;# 
   870  0E19                     	;# 
   871  0E1A                     	;# 
   872  0E1B                     	;# 
   873  0E1C                     	;# 
   874  0E1D                     	;# 
   875  0E1E                     	;# 
   876  0E1F                     	;# 
   877  0E20                     	;# 
   878  0E21                     	;# 
   879  0E22                     	;# 
   880  0E23                     	;# 
   881  0E24                     	;# 
   882  0E25                     	;# 
   883  0E26                     	;# 
   884  0E27                     	;# 
   885  0E28                     	;# 
   886  0E29                     	;# 
   887  0E2A                     	;# 
   888  0E2B                     	;# 
   889  0E2C                     	;# 
   890  0E2D                     	;# 
   891  0E2E                     	;# 
   892  0E90                     	;# 
   893  0E91                     	;# 
   894  0E92                     	;# 
   895  0E94                     	;# 
   896  0E95                     	;# 
   897  0E9C                     	;# 
   898  0E9D                     	;# 
   899  0E9E                     	;# 
   900  0E9F                     	;# 
   901  0EA0                     	;# 
   902  0EA1                     	;# 
   903  0EA2                     	;# 
   904  0EA3                     	;# 
   905  0EA4                     	;# 
   906  0EA5                     	;# 
   907  0EA6                     	;# 
   908  0EA7                     	;# 
   909  0F0F                     	;# 
   910  0F10                     	;# 
   911  0F11                     	;# 
   912  0F12                     	;# 
   913  0F13                     	;# 
   914  0F14                     	;# 
   915  0F15                     	;# 
   916  0F16                     	;# 
   917  0F17                     	;# 
   918  0F18                     	;# 
   919  0F19                     	;# 
   920  0F1A                     	;# 
   921  0F1B                     	;# 
   922  0F1C                     	;# 
   923  0F1D                     	;# 
   924  0F1E                     	;# 
   925  0F1F                     	;# 
   926  0F20                     	;# 
   927  0F21                     	;# 
   928  0F22                     	;# 
   929  0F23                     	;# 
   930  0F24                     	;# 
   931  0F25                     	;# 
   932  0F26                     	;# 
   933  0F27                     	;# 
   934  0F28                     	;# 
   935  0F29                     	;# 
   936  0F2A                     	;# 
   937  0F2B                     	;# 
   938  0F2C                     	;# 
   939  0F2D                     	;# 
   940  0F2E                     	;# 
   941  0F2F                     	;# 
   942  0F30                     	;# 
   943  0F31                     	;# 
   944  0F32                     	;# 
   945  0F33                     	;# 
   946  0F34                     	;# 
   947  0F35                     	;# 
   948  0F36                     	;# 
   949  0F37                     	;# 
   950  0FE4                     	;# 
   951  0FE5                     	;# 
   952  0FE6                     	;# 
   953  0FE7                     	;# 
   954  0FE8                     	;# 
   955  0FE9                     	;# 
   956  0FEA                     	;# 
   957  0FEB                     	;# 
   958  0FED                     	;# 
   959  0FEE                     	;# 
   960  0FEF                     	;# 
   961  0000                     	;# 
   962  0001                     	;# 
   963  0002                     	;# 
   964  0003                     	;# 
   965  0004                     	;# 
   966  0005                     	;# 
   967  0006                     	;# 
   968  0007                     	;# 
   969  0008                     	;# 
   970  0009                     	;# 
   971  000A                     	;# 
   972  000B                     	;# 
   973  000C                     	;# 
   974  000D                     	;# 
   975  000E                     	;# 
   976  0010                     	;# 
   977  0011                     	;# 
   978  0012                     	;# 
   979  0013                     	;# 
   980  0014                     	;# 
   981  0015                     	;# 
   982  0016                     	;# 
   983  0016                     	;# 
   984  0017                     	;# 
   985  0018                     	;# 
   986  0019                     	;# 
   987  001A                     	;# 
   988  001A                     	;# 
   989  001B                     	;# 
   990  001B                     	;# 
   991  001C                     	;# 
   992  001D                     	;# 
   993  001E                     	;# 
   994  001F                     	;# 
   995  008C                     	;# 
   996  008D                     	;# 
   997  008E                     	;# 
   998  0090                     	;# 
   999  0091                     	;# 
  1000  0092                     	;# 
  1001  0093                     	;# 
  1002  0094                     	;# 
  1003  0095                     	;# 
  1004  0096                     	;# 
  1005  0098                     	;# 
  1006  0099                     	;# 
  1007  009A                     	;# 
  1008  009B                     	;# 
  1009  009B                     	;# 
  1010  009C                     	;# 
  1011  009D                     	;# 
  1012  009E                     	;# 
  1013  009F                     	;# 
  1014  010C                     	;# 
  1015  010D                     	;# 
  1016  010E                     	;# 
  1017  0111                     	;# 
  1018  0112                     	;# 
  1019  0113                     	;# 
  1020  0114                     	;# 
  1021  0115                     	;# 
  1022  0116                     	;# 
  1023  0117                     	;# 
  1024  0118                     	;# 
  1025  0119                     	;# 
  1026  011C                     	;# 
  1027  018C                     	;# 
  1028  018D                     	;# 
  1029  018E                     	;# 
  1030  0191                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  0193                     	;# 
  1034  0193                     	;# 
  1035  0194                     	;# 
  1036  0195                     	;# 
  1037  0196                     	;# 
  1038  0197                     	;# 
  1039  0199                     	;# 
  1040  0199                     	;# 
  1041  0199                     	;# 
  1042  019A                     	;# 
  1043  019A                     	;# 
  1044  019A                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019C                     	;# 
  1051  019C                     	;# 
  1052  019C                     	;# 
  1053  019D                     	;# 
  1054  019D                     	;# 
  1055  019D                     	;# 
  1056  019E                     	;# 
  1057  019E                     	;# 
  1058  019E                     	;# 
  1059  019F                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  019F                     	;# 
  1064  020C                     	;# 
  1065  020D                     	;# 
  1066  020E                     	;# 
  1067  0211                     	;# 
  1068  0211                     	;# 
  1069  0212                     	;# 
  1070  0212                     	;# 
  1071  0213                     	;# 
  1072  0213                     	;# 
  1073  0214                     	;# 
  1074  0214                     	;# 
  1075  0215                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0216                     	;# 
  1080  0216                     	;# 
  1081  0217                     	;# 
  1082  0217                     	;# 
  1083  028C                     	;# 
  1084  028D                     	;# 
  1085  028E                     	;# 
  1086  0291                     	;# 
  1087  0291                     	;# 
  1088  0292                     	;# 
  1089  0293                     	;# 
  1090  0294                     	;# 
  1091  0298                     	;# 
  1092  0298                     	;# 
  1093  0299                     	;# 
  1094  029A                     	;# 
  1095  029B                     	;# 
  1096  029E                     	;# 
  1097  030C                     	;# 
  1098  030D                     	;# 
  1099  030E                     	;# 
  1100  038C                     	;# 
  1101  038D                     	;# 
  1102  038E                     	;# 
  1103  0391                     	;# 
  1104  0392                     	;# 
  1105  0393                     	;# 
  1106  0394                     	;# 
  1107  0395                     	;# 
  1108  0396                     	;# 
  1109  0397                     	;# 
  1110  0398                     	;# 
  1111  0399                     	;# 
  1112  040E                     	;# 
  1113  0413                     	;# 
  1114  0413                     	;# 
  1115  0414                     	;# 
  1116  0414                     	;# 
  1117  0415                     	;# 
  1118  0416                     	;# 
  1119  0417                     	;# 
  1120  0418                     	;# 
  1121  041A                     	;# 
  1122  041A                     	;# 
  1123  041B                     	;# 
  1124  041B                     	;# 
  1125  041C                     	;# 
  1126  041D                     	;# 
  1127  041E                     	;# 
  1128  041F                     	;# 
  1129  0493                     	;# 
  1130  0494                     	;# 
  1131  0495                     	;# 
  1132  0496                     	;# 
  1133  049A                     	;# 
  1134  049B                     	;# 
  1135  049C                     	;# 
  1136  049D                     	;# 
  1137  058C                     	;# 
  1138  058C                     	;# 
  1139  058D                     	;# 
  1140  058E                     	;# 
  1141  058E                     	;# 
  1142  058F                     	;# 
  1143  0590                     	;# 
  1144  0590                     	;# 
  1145  0591                     	;# 
  1146  0592                     	;# 
  1147  0592                     	;# 
  1148  0593                     	;# 
  1149  0594                     	;# 
  1150  0594                     	;# 
  1151  0595                     	;# 
  1152  0596                     	;# 
  1153  0596                     	;# 
  1154  0597                     	;# 
  1155  0598                     	;# 
  1156  0599                     	;# 
  1157  059A                     	;# 
  1158  059B                     	;# 
  1159  059B                     	;# 
  1160  059C                     	;# 
  1161  059D                     	;# 
  1162  060C                     	;# 
  1163  060C                     	;# 
  1164  060D                     	;# 
  1165  060E                     	;# 
  1166  060F                     	;# 
  1167  060F                     	;# 
  1168  0610                     	;# 
  1169  0611                     	;# 
  1170  0612                     	;# 
  1171  0613                     	;# 
  1172  0614                     	;# 
  1173  0617                     	;# 
  1174  0618                     	;# 
  1175  0619                     	;# 
  1176  061A                     	;# 
  1177  061B                     	;# 
  1178  061C                     	;# 
  1179  0691                     	;# 
  1180  0692                     	;# 
  1181  0693                     	;# 
  1182  0694                     	;# 
  1183  0695                     	;# 
  1184  0696                     	;# 
  1185  0697                     	;# 
  1186  0699                     	;# 
  1187  069A                     	;# 
  1188  0711                     	;# 
  1189  0712                     	;# 
  1190  0713                     	;# 
  1191  0714                     	;# 
  1192  0715                     	;# 
  1193  0718                     	;# 
  1194  0718                     	;# 
  1195  0719                     	;# 
  1196  071A                     	;# 
  1197  071A                     	;# 
  1198  071B                     	;# 
  1199  071C                     	;# 
  1200  071D                     	;# 
  1201  0791                     	;# 
  1202  0791                     	;# 
  1203  0792                     	;# 
  1204  0793                     	;# 
  1205  0793                     	;# 
  1206  0794                     	;# 
  1207  0795                     	;# 
  1208  0795                     	;# 
  1209  0796                     	;# 
  1210  0797                     	;# 
  1211  0797                     	;# 
  1212  0798                     	;# 
  1213  0799                     	;# 
  1214  079A                     	;# 
  1215  080C                     	;# 
  1216  080C                     	;# 
  1217  080D                     	;# 
  1218  080E                     	;# 
  1219  080E                     	;# 
  1220  080F                     	;# 
  1221  0810                     	;# 
  1222  0810                     	;# 
  1223  0811                     	;# 
  1224  0812                     	;# 
  1225  0812                     	;# 
  1226  0813                     	;# 
  1227  0814                     	;# 
  1228  0815                     	;# 
  1229  0816                     	;# 
  1230  0817                     	;# 
  1231  0818                     	;# 
  1232  0819                     	;# 
  1233  081A                     	;# 
  1234  081A                     	;# 
  1235  081B                     	;# 
  1236  081C                     	;# 
  1237  081C                     	;# 
  1238  081D                     	;# 
  1239  088C                     	;# 
  1240  088D                     	;# 
  1241  088E                     	;# 
  1242  088F                     	;# 
  1243  088F                     	;# 
  1244  0890                     	;# 
  1245  0891                     	;# 
  1246  0892                     	;# 
  1247  0893                     	;# 
  1248  0893                     	;# 
  1249  0894                     	;# 
  1250  0895                     	;# 
  1251  0896                     	;# 
  1252  0897                     	;# 
  1253  0897                     	;# 
  1254  0898                     	;# 
  1255  0899                     	;# 
  1256  0D8C                     	;# 
  1257  0D8C                     	;# 
  1258  0D8D                     	;# 
  1259  0D8E                     	;# 
  1260  0D8F                     	;# 
  1261  0D8F                     	;# 
  1262  0D90                     	;# 
  1263  0D91                     	;# 
  1264  0D92                     	;# 
  1265  0D92                     	;# 
  1266  0D93                     	;# 
  1267  0D94                     	;# 
  1268  0D95                     	;# 
  1269  0D95                     	;# 
  1270  0D96                     	;# 
  1271  0D97                     	;# 
  1272  0D98                     	;# 
  1273  0D99                     	;# 
  1274  0D9A                     	;# 
  1275  0D9B                     	;# 
  1276  0D9C                     	;# 
  1277  0D9D                     	;# 
  1278  0D9E                     	;# 
  1279  0D9E                     	;# 
  1280  0D9F                     	;# 
  1281  0DA0                     	;# 
  1282  0DA1                     	;# 
  1283  0DA1                     	;# 
  1284  0DA2                     	;# 
  1285  0DA3                     	;# 
  1286  0DA4                     	;# 
  1287  0DA4                     	;# 
  1288  0DA5                     	;# 
  1289  0DA6                     	;# 
  1290  0DA7                     	;# 
  1291  0DA7                     	;# 
  1292  0DA8                     	;# 
  1293  0DA9                     	;# 
  1294  0DAA                     	;# 
  1295  0DAB                     	;# 
  1296  0DAC                     	;# 
  1297  0DAD                     	;# 
  1298  0DAE                     	;# 
  1299  0DAF                     	;# 
  1300  0E0F                     	;# 
  1301  0E10                     	;# 
  1302  0E11                     	;# 
  1303  0E12                     	;# 
  1304  0E13                     	;# 
  1305  0E14                     	;# 
  1306  0E15                     	;# 
  1307  0E16                     	;# 
  1308  0E17                     	;# 
  1309  0E18                     	;# 
  1310  0E19                     	;# 
  1311  0E1A                     	;# 
  1312  0E1B                     	;# 
  1313  0E1C                     	;# 
  1314  0E1D                     	;# 
  1315  0E1E                     	;# 
  1316  0E1F                     	;# 
  1317  0E20                     	;# 
  1318  0E21                     	;# 
  1319  0E22                     	;# 
  1320  0E23                     	;# 
  1321  0E24                     	;# 
  1322  0E25                     	;# 
  1323  0E26                     	;# 
  1324  0E27                     	;# 
  1325  0E28                     	;# 
  1326  0E29                     	;# 
  1327  0E2A                     	;# 
  1328  0E2B                     	;# 
  1329  0E2C                     	;# 
  1330  0E2D                     	;# 
  1331  0E2E                     	;# 
  1332  0E90                     	;# 
  1333  0E91                     	;# 
  1334  0E92                     	;# 
  1335  0E94                     	;# 
  1336  0E95                     	;# 
  1337  0E9C                     	;# 
  1338  0E9D                     	;# 
  1339  0E9E                     	;# 
  1340  0E9F                     	;# 
  1341  0EA0                     	;# 
  1342  0EA1                     	;# 
  1343  0EA2                     	;# 
  1344  0EA3                     	;# 
  1345  0EA4                     	;# 
  1346  0EA5                     	;# 
  1347  0EA6                     	;# 
  1348  0EA7                     	;# 
  1349  0F0F                     	;# 
  1350  0F10                     	;# 
  1351  0F11                     	;# 
  1352  0F12                     	;# 
  1353  0F13                     	;# 
  1354  0F14                     	;# 
  1355  0F15                     	;# 
  1356  0F16                     	;# 
  1357  0F17                     	;# 
  1358  0F18                     	;# 
  1359  0F19                     	;# 
  1360  0F1A                     	;# 
  1361  0F1B                     	;# 
  1362  0F1C                     	;# 
  1363  0F1D                     	;# 
  1364  0F1E                     	;# 
  1365  0F1F                     	;# 
  1366  0F20                     	;# 
  1367  0F21                     	;# 
  1368  0F22                     	;# 
  1369  0F23                     	;# 
  1370  0F24                     	;# 
  1371  0F25                     	;# 
  1372  0F26                     	;# 
  1373  0F27                     	;# 
  1374  0F28                     	;# 
  1375  0F29                     	;# 
  1376  0F2A                     	;# 
  1377  0F2B                     	;# 
  1378  0F2C                     	;# 
  1379  0F2D                     	;# 
  1380  0F2E                     	;# 
  1381  0F2F                     	;# 
  1382  0F30                     	;# 
  1383  0F31                     	;# 
  1384  0F32                     	;# 
  1385  0F33                     	;# 
  1386  0F34                     	;# 
  1387  0F35                     	;# 
  1388  0F36                     	;# 
  1389  0F37                     	;# 
  1390  0FE4                     	;# 
  1391  0FE5                     	;# 
  1392  0FE6                     	;# 
  1393  0FE7                     	;# 
  1394  0FE8                     	;# 
  1395  0FE9                     	;# 
  1396  0FEA                     	;# 
  1397  0FEB                     	;# 
  1398  0FED                     	;# 
  1399  0FEE                     	;# 
  1400  0FEF                     	;# 
  1401  0000                     	;# 
  1402  0001                     	;# 
  1403  0002                     	;# 
  1404  0003                     	;# 
  1405  0004                     	;# 
  1406  0005                     	;# 
  1407  0006                     	;# 
  1408  0007                     	;# 
  1409  0008                     	;# 
  1410  0009                     	;# 
  1411  000A                     	;# 
  1412  000B                     	;# 
  1413  000C                     	;# 
  1414  000D                     	;# 
  1415  000E                     	;# 
  1416  0010                     	;# 
  1417  0011                     	;# 
  1418  0012                     	;# 
  1419  0013                     	;# 
  1420  0014                     	;# 
  1421  0015                     	;# 
  1422  0016                     	;# 
  1423  0016                     	;# 
  1424  0017                     	;# 
  1425  0018                     	;# 
  1426  0019                     	;# 
  1427  001A                     	;# 
  1428  001A                     	;# 
  1429  001B                     	;# 
  1430  001B                     	;# 
  1431  001C                     	;# 
  1432  001D                     	;# 
  1433  001E                     	;# 
  1434  001F                     	;# 
  1435  008C                     	;# 
  1436  008D                     	;# 
  1437  008E                     	;# 
  1438  0090                     	;# 
  1439  0091                     	;# 
  1440  0092                     	;# 
  1441  0093                     	;# 
  1442  0094                     	;# 
  1443  0095                     	;# 
  1444  0096                     	;# 
  1445  0098                     	;# 
  1446  0099                     	;# 
  1447  009A                     	;# 
  1448  009B                     	;# 
  1449  009B                     	;# 
  1450  009C                     	;# 
  1451  009D                     	;# 
  1452  009E                     	;# 
  1453  009F                     	;# 
  1454  010C                     	;# 
  1455  010D                     	;# 
  1456  010E                     	;# 
  1457  0111                     	;# 
  1458  0112                     	;# 
  1459  0113                     	;# 
  1460  0114                     	;# 
  1461  0115                     	;# 
  1462  0116                     	;# 
  1463  0117                     	;# 
  1464  0118                     	;# 
  1465  0119                     	;# 
  1466  011C                     	;# 
  1467  018C                     	;# 
  1468  018D                     	;# 
  1469  018E                     	;# 
  1470  0191                     	;# 
  1471  0191                     	;# 
  1472  0192                     	;# 
  1473  0193                     	;# 
  1474  0193                     	;# 
  1475  0194                     	;# 
  1476  0195                     	;# 
  1477  0196                     	;# 
  1478  0197                     	;# 
  1479  0199                     	;# 
  1480  0199                     	;# 
  1481  0199                     	;# 
  1482  019A                     	;# 
  1483  019A                     	;# 
  1484  019A                     	;# 
  1485  019B                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019B                     	;# 
  1490  019C                     	;# 
  1491  019C                     	;# 
  1492  019C                     	;# 
  1493  019D                     	;# 
  1494  019D                     	;# 
  1495  019D                     	;# 
  1496  019E                     	;# 
  1497  019E                     	;# 
  1498  019E                     	;# 
  1499  019F                     	;# 
  1500  019F                     	;# 
  1501  019F                     	;# 
  1502  019F                     	;# 
  1503  019F                     	;# 
  1504  020C                     	;# 
  1505  020D                     	;# 
  1506  020E                     	;# 
  1507  0211                     	;# 
  1508  0211                     	;# 
  1509  0212                     	;# 
  1510  0212                     	;# 
  1511  0213                     	;# 
  1512  0213                     	;# 
  1513  0214                     	;# 
  1514  0214                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0216                     	;# 
  1520  0216                     	;# 
  1521  0217                     	;# 
  1522  0217                     	;# 
  1523  028C                     	;# 
  1524  028D                     	;# 
  1525  028E                     	;# 
  1526  0291                     	;# 
  1527  0291                     	;# 
  1528  0292                     	;# 
  1529  0293                     	;# 
  1530  0294                     	;# 
  1531  0298                     	;# 
  1532  0298                     	;# 
  1533  0299                     	;# 
  1534  029A                     	;# 
  1535  029B                     	;# 
  1536  029E                     	;# 
  1537  030C                     	;# 
  1538  030D                     	;# 
  1539  030E                     	;# 
  1540  038C                     	;# 
  1541  038D                     	;# 
  1542  038E                     	;# 
  1543  0391                     	;# 
  1544  0392                     	;# 
  1545  0393                     	;# 
  1546  0394                     	;# 
  1547  0395                     	;# 
  1548  0396                     	;# 
  1549  0397                     	;# 
  1550  0398                     	;# 
  1551  0399                     	;# 
  1552  040E                     	;# 
  1553  0413                     	;# 
  1554  0413                     	;# 
  1555  0414                     	;# 
  1556  0414                     	;# 
  1557  0415                     	;# 
  1558  0416                     	;# 
  1559  0417                     	;# 
  1560  0418                     	;# 
  1561  041A                     	;# 
  1562  041A                     	;# 
  1563  041B                     	;# 
  1564  041B                     	;# 
  1565  041C                     	;# 
  1566  041D                     	;# 
  1567  041E                     	;# 
  1568  041F                     	;# 
  1569  0493                     	;# 
  1570  0494                     	;# 
  1571  0495                     	;# 
  1572  0496                     	;# 
  1573  049A                     	;# 
  1574  049B                     	;# 
  1575  049C                     	;# 
  1576  049D                     	;# 
  1577  058C                     	;# 
  1578  058C                     	;# 
  1579  058D                     	;# 
  1580  058E                     	;# 
  1581  058E                     	;# 
  1582  058F                     	;# 
  1583  0590                     	;# 
  1584  0590                     	;# 
  1585  0591                     	;# 
  1586  0592                     	;# 
  1587  0592                     	;# 
  1588  0593                     	;# 
  1589  0594                     	;# 
  1590  0594                     	;# 
  1591  0595                     	;# 
  1592  0596                     	;# 
  1593  0596                     	;# 
  1594  0597                     	;# 
  1595  0598                     	;# 
  1596  0599                     	;# 
  1597  059A                     	;# 
  1598  059B                     	;# 
  1599  059B                     	;# 
  1600  059C                     	;# 
  1601  059D                     	;# 
  1602  060C                     	;# 
  1603  060C                     	;# 
  1604  060D                     	;# 
  1605  060E                     	;# 
  1606  060F                     	;# 
  1607  060F                     	;# 
  1608  0610                     	;# 
  1609  0611                     	;# 
  1610  0612                     	;# 
  1611  0613                     	;# 
  1612  0614                     	;# 
  1613  0617                     	;# 
  1614  0618                     	;# 
  1615  0619                     	;# 
  1616  061A                     	;# 
  1617  061B                     	;# 
  1618  061C                     	;# 
  1619  0691                     	;# 
  1620  0692                     	;# 
  1621  0693                     	;# 
  1622  0694                     	;# 
  1623  0695                     	;# 
  1624  0696                     	;# 
  1625  0697                     	;# 
  1626  0699                     	;# 
  1627  069A                     	;# 
  1628  0711                     	;# 
  1629  0712                     	;# 
  1630  0713                     	;# 
  1631  0714                     	;# 
  1632  0715                     	;# 
  1633  0718                     	;# 
  1634  0718                     	;# 
  1635  0719                     	;# 
  1636  071A                     	;# 
  1637  071A                     	;# 
  1638  071B                     	;# 
  1639  071C                     	;# 
  1640  071D                     	;# 
  1641  0791                     	;# 
  1642  0791                     	;# 
  1643  0792                     	;# 
  1644  0793                     	;# 
  1645  0793                     	;# 
  1646  0794                     	;# 
  1647  0795                     	;# 
  1648  0795                     	;# 
  1649  0796                     	;# 
  1650  0797                     	;# 
  1651  0797                     	;# 
  1652  0798                     	;# 
  1653  0799                     	;# 
  1654  079A                     	;# 
  1655  080C                     	;# 
  1656  080C                     	;# 
  1657  080D                     	;# 
  1658  080E                     	;# 
  1659  080E                     	;# 
  1660  080F                     	;# 
  1661  0810                     	;# 
  1662  0810                     	;# 
  1663  0811                     	;# 
  1664  0812                     	;# 
  1665  0812                     	;# 
  1666  0813                     	;# 
  1667  0814                     	;# 
  1668  0815                     	;# 
  1669  0816                     	;# 
  1670  0817                     	;# 
  1671  0818                     	;# 
  1672  0819                     	;# 
  1673  081A                     	;# 
  1674  081A                     	;# 
  1675  081B                     	;# 
  1676  081C                     	;# 
  1677  081C                     	;# 
  1678  081D                     	;# 
  1679  088C                     	;# 
  1680  088D                     	;# 
  1681  088E                     	;# 
  1682  088F                     	;# 
  1683  088F                     	;# 
  1684  0890                     	;# 
  1685  0891                     	;# 
  1686  0892                     	;# 
  1687  0893                     	;# 
  1688  0893                     	;# 
  1689  0894                     	;# 
  1690  0895                     	;# 
  1691  0896                     	;# 
  1692  0897                     	;# 
  1693  0897                     	;# 
  1694  0898                     	;# 
  1695  0899                     	;# 
  1696  0D8C                     	;# 
  1697  0D8C                     	;# 
  1698  0D8D                     	;# 
  1699  0D8E                     	;# 
  1700  0D8F                     	;# 
  1701  0D8F                     	;# 
  1702  0D90                     	;# 
  1703  0D91                     	;# 
  1704  0D92                     	;# 
  1705  0D92                     	;# 
  1706  0D93                     	;# 
  1707  0D94                     	;# 
  1708  0D95                     	;# 
  1709  0D95                     	;# 
  1710  0D96                     	;# 
  1711  0D97                     	;# 
  1712  0D98                     	;# 
  1713  0D99                     	;# 
  1714  0D9A                     	;# 
  1715  0D9B                     	;# 
  1716  0D9C                     	;# 
  1717  0D9D                     	;# 
  1718  0D9E                     	;# 
  1719  0D9E                     	;# 
  1720  0D9F                     	;# 
  1721  0DA0                     	;# 
  1722  0DA1                     	;# 
  1723  0DA1                     	;# 
  1724  0DA2                     	;# 
  1725  0DA3                     	;# 
  1726  0DA4                     	;# 
  1727  0DA4                     	;# 
  1728  0DA5                     	;# 
  1729  0DA6                     	;# 
  1730  0DA7                     	;# 
  1731  0DA7                     	;# 
  1732  0DA8                     	;# 
  1733  0DA9                     	;# 
  1734  0DAA                     	;# 
  1735  0DAB                     	;# 
  1736  0DAC                     	;# 
  1737  0DAD                     	;# 
  1738  0DAE                     	;# 
  1739  0DAF                     	;# 
  1740  0E0F                     	;# 
  1741  0E10                     	;# 
  1742  0E11                     	;# 
  1743  0E12                     	;# 
  1744  0E13                     	;# 
  1745  0E14                     	;# 
  1746  0E15                     	;# 
  1747  0E16                     	;# 
  1748  0E17                     	;# 
  1749  0E18                     	;# 
  1750  0E19                     	;# 
  1751  0E1A                     	;# 
  1752  0E1B                     	;# 
  1753  0E1C                     	;# 
  1754  0E1D                     	;# 
  1755  0E1E                     	;# 
  1756  0E1F                     	;# 
  1757  0E20                     	;# 
  1758  0E21                     	;# 
  1759  0E22                     	;# 
  1760  0E23                     	;# 
  1761  0E24                     	;# 
  1762  0E25                     	;# 
  1763  0E26                     	;# 
  1764  0E27                     	;# 
  1765  0E28                     	;# 
  1766  0E29                     	;# 
  1767  0E2A                     	;# 
  1768  0E2B                     	;# 
  1769  0E2C                     	;# 
  1770  0E2D                     	;# 
  1771  0E2E                     	;# 
  1772  0E90                     	;# 
  1773  0E91                     	;# 
  1774  0E92                     	;# 
  1775  0E94                     	;# 
  1776  0E95                     	;# 
  1777  0E9C                     	;# 
  1778  0E9D                     	;# 
  1779  0E9E                     	;# 
  1780  0E9F                     	;# 
  1781  0EA0                     	;# 
  1782  0EA1                     	;# 
  1783  0EA2                     	;# 
  1784  0EA3                     	;# 
  1785  0EA4                     	;# 
  1786  0EA5                     	;# 
  1787  0EA6                     	;# 
  1788  0EA7                     	;# 
  1789  0F0F                     	;# 
  1790  0F10                     	;# 
  1791  0F11                     	;# 
  1792  0F12                     	;# 
  1793  0F13                     	;# 
  1794  0F14                     	;# 
  1795  0F15                     	;# 
  1796  0F16                     	;# 
  1797  0F17                     	;# 
  1798  0F18                     	;# 
  1799  0F19                     	;# 
  1800  0F1A                     	;# 
  1801  0F1B                     	;# 
  1802  0F1C                     	;# 
  1803  0F1D                     	;# 
  1804  0F1E                     	;# 
  1805  0F1F                     	;# 
  1806  0F20                     	;# 
  1807  0F21                     	;# 
  1808  0F22                     	;# 
  1809  0F23                     	;# 
  1810  0F24                     	;# 
  1811  0F25                     	;# 
  1812  0F26                     	;# 
  1813  0F27                     	;# 
  1814  0F28                     	;# 
  1815  0F29                     	;# 
  1816  0F2A                     	;# 
  1817  0F2B                     	;# 
  1818  0F2C                     	;# 
  1819  0F2D                     	;# 
  1820  0F2E                     	;# 
  1821  0F2F                     	;# 
  1822  0F30                     	;# 
  1823  0F31                     	;# 
  1824  0F32                     	;# 
  1825  0F33                     	;# 
  1826  0F34                     	;# 
  1827  0F35                     	;# 
  1828  0F36                     	;# 
  1829  0F37                     	;# 
  1830  0FE4                     	;# 
  1831  0FE5                     	;# 
  1832  0FE6                     	;# 
  1833  0FE7                     	;# 
  1834  0FE8                     	;# 
  1835  0FE9                     	;# 
  1836  0FEA                     	;# 
  1837  0FEB                     	;# 
  1838  0FED                     	;# 
  1839  0FEE                     	;# 
  1840  0FEF                     	;# 
  1841  0000                     	;# 
  1842  0001                     	;# 
  1843  0002                     	;# 
  1844  0003                     	;# 
  1845  0004                     	;# 
  1846  0005                     	;# 
  1847  0006                     	;# 
  1848  0007                     	;# 
  1849  0008                     	;# 
  1850  0009                     	;# 
  1851  000A                     	;# 
  1852  000B                     	;# 
  1853  000C                     	;# 
  1854  000D                     	;# 
  1855  000E                     	;# 
  1856  0010                     	;# 
  1857  0011                     	;# 
  1858  0012                     	;# 
  1859  0013                     	;# 
  1860  0014                     	;# 
  1861  0015                     	;# 
  1862  0016                     	;# 
  1863  0016                     	;# 
  1864  0017                     	;# 
  1865  0018                     	;# 
  1866  0019                     	;# 
  1867  001A                     	;# 
  1868  001A                     	;# 
  1869  001B                     	;# 
  1870  001B                     	;# 
  1871  001C                     	;# 
  1872  001D                     	;# 
  1873  001E                     	;# 
  1874  001F                     	;# 
  1875  008C                     	;# 
  1876  008D                     	;# 
  1877  008E                     	;# 
  1878  0090                     	;# 
  1879  0091                     	;# 
  1880  0092                     	;# 
  1881  0093                     	;# 
  1882  0094                     	;# 
  1883  0095                     	;# 
  1884  0096                     	;# 
  1885  0098                     	;# 
  1886  0099                     	;# 
  1887  009A                     	;# 
  1888  009B                     	;# 
  1889  009B                     	;# 
  1890  009C                     	;# 
  1891  009D                     	;# 
  1892  009E                     	;# 
  1893  009F                     	;# 
  1894  010C                     	;# 
  1895  010D                     	;# 
  1896  010E                     	;# 
  1897  0111                     	;# 
  1898  0112                     	;# 
  1899  0113                     	;# 
  1900  0114                     	;# 
  1901  0115                     	;# 
  1902  0116                     	;# 
  1903  0117                     	;# 
  1904  0118                     	;# 
  1905  0119                     	;# 
  1906  011C                     	;# 
  1907  018C                     	;# 
  1908  018D                     	;# 
  1909  018E                     	;# 
  1910  0191                     	;# 
  1911  0191                     	;# 
  1912  0192                     	;# 
  1913  0193                     	;# 
  1914  0193                     	;# 
  1915  0194                     	;# 
  1916  0195                     	;# 
  1917  0196                     	;# 
  1918  0197                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019A                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019C                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019D                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  020C                     	;# 
  1945  020D                     	;# 
  1946  020E                     	;# 
  1947  0211                     	;# 
  1948  0211                     	;# 
  1949  0212                     	;# 
  1950  0212                     	;# 
  1951  0213                     	;# 
  1952  0213                     	;# 
  1953  0214                     	;# 
  1954  0214                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0216                     	;# 
  1960  0216                     	;# 
  1961  0217                     	;# 
  1962  0217                     	;# 
  1963  028C                     	;# 
  1964  028D                     	;# 
  1965  028E                     	;# 
  1966  0291                     	;# 
  1967  0291                     	;# 
  1968  0292                     	;# 
  1969  0293                     	;# 
  1970  0294                     	;# 
  1971  0298                     	;# 
  1972  0298                     	;# 
  1973  0299                     	;# 
  1974  029A                     	;# 
  1975  029B                     	;# 
  1976  029E                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  038C                     	;# 
  1981  038D                     	;# 
  1982  038E                     	;# 
  1983  0391                     	;# 
  1984  0392                     	;# 
  1985  0393                     	;# 
  1986  0394                     	;# 
  1987  0395                     	;# 
  1988  0396                     	;# 
  1989  0397                     	;# 
  1990  0398                     	;# 
  1991  0399                     	;# 
  1992  040E                     	;# 
  1993  0413                     	;# 
  1994  0413                     	;# 
  1995  0414                     	;# 
  1996  0414                     	;# 
  1997  0415                     	;# 
  1998  0416                     	;# 
  1999  0417                     	;# 
  2000  0418                     	;# 
  2001  041A                     	;# 
  2002  041A                     	;# 
  2003  041B                     	;# 
  2004  041B                     	;# 
  2005  041C                     	;# 
  2006  041D                     	;# 
  2007  041E                     	;# 
  2008  041F                     	;# 
  2009  0493                     	;# 
  2010  0494                     	;# 
  2011  0495                     	;# 
  2012  0496                     	;# 
  2013  049A                     	;# 
  2014  049B                     	;# 
  2015  049C                     	;# 
  2016  049D                     	;# 
  2017  058C                     	;# 
  2018  058C                     	;# 
  2019  058D                     	;# 
  2020  058E                     	;# 
  2021  058E                     	;# 
  2022  058F                     	;# 
  2023  0590                     	;# 
  2024  0590                     	;# 
  2025  0591                     	;# 
  2026  0592                     	;# 
  2027  0592                     	;# 
  2028  0593                     	;# 
  2029  0594                     	;# 
  2030  0594                     	;# 
  2031  0595                     	;# 
  2032  0596                     	;# 
  2033  0596                     	;# 
  2034  0597                     	;# 
  2035  0598                     	;# 
  2036  0599                     	;# 
  2037  059A                     	;# 
  2038  059B                     	;# 
  2039  059B                     	;# 
  2040  059C                     	;# 
  2041  059D                     	;# 
  2042  060C                     	;# 
  2043  060C                     	;# 
  2044  060D                     	;# 
  2045  060E                     	;# 
  2046  060F                     	;# 
  2047  060F                     	;# 
  2048  0610                     	;# 
  2049  0611                     	;# 
  2050  0612                     	;# 
  2051  0613                     	;# 
  2052  0614                     	;# 
  2053  0617                     	;# 
  2054  0618                     	;# 
  2055  0619                     	;# 
  2056  061A                     	;# 
  2057  061B                     	;# 
  2058  061C                     	;# 
  2059  0691                     	;# 
  2060  0692                     	;# 
  2061  0693                     	;# 
  2062  0694                     	;# 
  2063  0695                     	;# 
  2064  0696                     	;# 
  2065  0697                     	;# 
  2066  0699                     	;# 
  2067  069A                     	;# 
  2068  0711                     	;# 
  2069  0712                     	;# 
  2070  0713                     	;# 
  2071  0714                     	;# 
  2072  0715                     	;# 
  2073  0718                     	;# 
  2074  0718                     	;# 
  2075  0719                     	;# 
  2076  071A                     	;# 
  2077  071A                     	;# 
  2078  071B                     	;# 
  2079  071C                     	;# 
  2080  071D                     	;# 
  2081  0791                     	;# 
  2082  0791                     	;# 
  2083  0792                     	;# 
  2084  0793                     	;# 
  2085  0793                     	;# 
  2086  0794                     	;# 
  2087  0795                     	;# 
  2088  0795                     	;# 
  2089  0796                     	;# 
  2090  0797                     	;# 
  2091  0797                     	;# 
  2092  0798                     	;# 
  2093  0799                     	;# 
  2094  079A                     	;# 
  2095  080C                     	;# 
  2096  080C                     	;# 
  2097  080D                     	;# 
  2098  080E                     	;# 
  2099  080E                     	;# 
  2100  080F                     	;# 
  2101  0810                     	;# 
  2102  0810                     	;# 
  2103  0811                     	;# 
  2104  0812                     	;# 
  2105  0812                     	;# 
  2106  0813                     	;# 
  2107  0814                     	;# 
  2108  0815                     	;# 
  2109  0816                     	;# 
  2110  0817                     	;# 
  2111  0818                     	;# 
  2112  0819                     	;# 
  2113  081A                     	;# 
  2114  081A                     	;# 
  2115  081B                     	;# 
  2116  081C                     	;# 
  2117  081C                     	;# 
  2118  081D                     	;# 
  2119  088C                     	;# 
  2120  088D                     	;# 
  2121  088E                     	;# 
  2122  088F                     	;# 
  2123  088F                     	;# 
  2124  0890                     	;# 
  2125  0891                     	;# 
  2126  0892                     	;# 
  2127  0893                     	;# 
  2128  0893                     	;# 
  2129  0894                     	;# 
  2130  0895                     	;# 
  2131  0896                     	;# 
  2132  0897                     	;# 
  2133  0897                     	;# 
  2134  0898                     	;# 
  2135  0899                     	;# 
  2136  0D8C                     	;# 
  2137  0D8C                     	;# 
  2138  0D8D                     	;# 
  2139  0D8E                     	;# 
  2140  0D8F                     	;# 
  2141  0D8F                     	;# 
  2142  0D90                     	;# 
  2143  0D91                     	;# 
  2144  0D92                     	;# 
  2145  0D92                     	;# 
  2146  0D93                     	;# 
  2147  0D94                     	;# 
  2148  0D95                     	;# 
  2149  0D95                     	;# 
  2150  0D96                     	;# 
  2151  0D97                     	;# 
  2152  0D98                     	;# 
  2153  0D99                     	;# 
  2154  0D9A                     	;# 
  2155  0D9B                     	;# 
  2156  0D9C                     	;# 
  2157  0D9D                     	;# 
  2158  0D9E                     	;# 
  2159  0D9E                     	;# 
  2160  0D9F                     	;# 
  2161  0DA0                     	;# 
  2162  0DA1                     	;# 
  2163  0DA1                     	;# 
  2164  0DA2                     	;# 
  2165  0DA3                     	;# 
  2166  0DA4                     	;# 
  2167  0DA4                     	;# 
  2168  0DA5                     	;# 
  2169  0DA6                     	;# 
  2170  0DA7                     	;# 
  2171  0DA7                     	;# 
  2172  0DA8                     	;# 
  2173  0DA9                     	;# 
  2174  0DAA                     	;# 
  2175  0DAB                     	;# 
  2176  0DAC                     	;# 
  2177  0DAD                     	;# 
  2178  0DAE                     	;# 
  2179  0DAF                     	;# 
  2180  0E0F                     	;# 
  2181  0E10                     	;# 
  2182  0E11                     	;# 
  2183  0E12                     	;# 
  2184  0E13                     	;# 
  2185  0E14                     	;# 
  2186  0E15                     	;# 
  2187  0E16                     	;# 
  2188  0E17                     	;# 
  2189  0E18                     	;# 
  2190  0E19                     	;# 
  2191  0E1A                     	;# 
  2192  0E1B                     	;# 
  2193  0E1C                     	;# 
  2194  0E1D                     	;# 
  2195  0E1E                     	;# 
  2196  0E1F                     	;# 
  2197  0E20                     	;# 
  2198  0E21                     	;# 
  2199  0E22                     	;# 
  2200  0E23                     	;# 
  2201  0E24                     	;# 
  2202  0E25                     	;# 
  2203  0E26                     	;# 
  2204  0E27                     	;# 
  2205  0E28                     	;# 
  2206  0E29                     	;# 
  2207  0E2A                     	;# 
  2208  0E2B                     	;# 
  2209  0E2C                     	;# 
  2210  0E2D                     	;# 
  2211  0E2E                     	;# 
  2212  0E90                     	;# 
  2213  0E91                     	;# 
  2214  0E92                     	;# 
  2215  0E94                     	;# 
  2216  0E95                     	;# 
  2217  0E9C                     	;# 
  2218  0E9D                     	;# 
  2219  0E9E                     	;# 
  2220  0E9F                     	;# 
  2221  0EA0                     	;# 
  2222  0EA1                     	;# 
  2223  0EA2                     	;# 
  2224  0EA3                     	;# 
  2225  0EA4                     	;# 
  2226  0EA5                     	;# 
  2227  0EA6                     	;# 
  2228  0EA7                     	;# 
  2229  0F0F                     	;# 
  2230  0F10                     	;# 
  2231  0F11                     	;# 
  2232  0F12                     	;# 
  2233  0F13                     	;# 
  2234  0F14                     	;# 
  2235  0F15                     	;# 
  2236  0F16                     	;# 
  2237  0F17                     	;# 
  2238  0F18                     	;# 
  2239  0F19                     	;# 
  2240  0F1A                     	;# 
  2241  0F1B                     	;# 
  2242  0F1C                     	;# 
  2243  0F1D                     	;# 
  2244  0F1E                     	;# 
  2245  0F1F                     	;# 
  2246  0F20                     	;# 
  2247  0F21                     	;# 
  2248  0F22                     	;# 
  2249  0F23                     	;# 
  2250  0F24                     	;# 
  2251  0F25                     	;# 
  2252  0F26                     	;# 
  2253  0F27                     	;# 
  2254  0F28                     	;# 
  2255  0F29                     	;# 
  2256  0F2A                     	;# 
  2257  0F2B                     	;# 
  2258  0F2C                     	;# 
  2259  0F2D                     	;# 
  2260  0F2E                     	;# 
  2261  0F2F                     	;# 
  2262  0F30                     	;# 
  2263  0F31                     	;# 
  2264  0F32                     	;# 
  2265  0F33                     	;# 
  2266  0F34                     	;# 
  2267  0F35                     	;# 
  2268  0F36                     	;# 
  2269  0F37                     	;# 
  2270  0FE4                     	;# 
  2271  0FE5                     	;# 
  2272  0FE6                     	;# 
  2273  0FE7                     	;# 
  2274  0FE8                     	;# 
  2275  0FE9                     	;# 
  2276  0FEA                     	;# 
  2277  0FEB                     	;# 
  2278  0FED                     	;# 
  2279  0FEE                     	;# 
  2280  0FEF                     	;# 
  2281  0000                     	;# 
  2282  0001                     	;# 
  2283  0002                     	;# 
  2284  0003                     	;# 
  2285  0004                     	;# 
  2286  0005                     	;# 
  2287  0006                     	;# 
  2288  0007                     	;# 
  2289  0008                     	;# 
  2290  0009                     	;# 
  2291  000A                     	;# 
  2292  000B                     	;# 
  2293  000C                     	;# 
  2294  000D                     	;# 
  2295  000E                     	;# 
  2296  0010                     	;# 
  2297  0011                     	;# 
  2298  0012                     	;# 
  2299  0013                     	;# 
  2300  0014                     	;# 
  2301  0015                     	;# 
  2302  0016                     	;# 
  2303  0016                     	;# 
  2304  0017                     	;# 
  2305  0018                     	;# 
  2306  0019                     	;# 
  2307  001A                     	;# 
  2308  001A                     	;# 
  2309  001B                     	;# 
  2310  001B                     	;# 
  2311  001C                     	;# 
  2312  001D                     	;# 
  2313  001E                     	;# 
  2314  001F                     	;# 
  2315  008C                     	;# 
  2316  008D                     	;# 
  2317  008E                     	;# 
  2318  0090                     	;# 
  2319  0091                     	;# 
  2320  0092                     	;# 
  2321  0093                     	;# 
  2322  0094                     	;# 
  2323  0095                     	;# 
  2324  0096                     	;# 
  2325  0098                     	;# 
  2326  0099                     	;# 
  2327  009A                     	;# 
  2328  009B                     	;# 
  2329  009B                     	;# 
  2330  009C                     	;# 
  2331  009D                     	;# 
  2332  009E                     	;# 
  2333  009F                     	;# 
  2334  010C                     	;# 
  2335  010D                     	;# 
  2336  010E                     	;# 
  2337  0111                     	;# 
  2338  0112                     	;# 
  2339  0113                     	;# 
  2340  0114                     	;# 
  2341  0115                     	;# 
  2342  0116                     	;# 
  2343  0117                     	;# 
  2344  0118                     	;# 
  2345  0119                     	;# 
  2346  011C                     	;# 
  2347  018C                     	;# 
  2348  018D                     	;# 
  2349  018E                     	;# 
  2350  0191                     	;# 
  2351  0191                     	;# 
  2352  0192                     	;# 
  2353  0193                     	;# 
  2354  0193                     	;# 
  2355  0194                     	;# 
  2356  0195                     	;# 
  2357  0196                     	;# 
  2358  0197                     	;# 
  2359  0199                     	;# 
  2360  0199                     	;# 
  2361  0199                     	;# 
  2362  019A                     	;# 
  2363  019A                     	;# 
  2364  019A                     	;# 
  2365  019B                     	;# 
  2366  019B                     	;# 
  2367  019B                     	;# 
  2368  019B                     	;# 
  2369  019B                     	;# 
  2370  019C                     	;# 
  2371  019C                     	;# 
  2372  019C                     	;# 
  2373  019D                     	;# 
  2374  019D                     	;# 
  2375  019D                     	;# 
  2376  019E                     	;# 
  2377  019E                     	;# 
  2378  019E                     	;# 
  2379  019F                     	;# 
  2380  019F                     	;# 
  2381  019F                     	;# 
  2382  019F                     	;# 
  2383  019F                     	;# 
  2384  020C                     	;# 
  2385  020D                     	;# 
  2386  020E                     	;# 
  2387  0211                     	;# 
  2388  0211                     	;# 
  2389  0212                     	;# 
  2390  0212                     	;# 
  2391  0213                     	;# 
  2392  0213                     	;# 
  2393  0214                     	;# 
  2394  0214                     	;# 
  2395  0215                     	;# 
  2396  0215                     	;# 
  2397  0215                     	;# 
  2398  0215                     	;# 
  2399  0216                     	;# 
  2400  0216                     	;# 
  2401  0217                     	;# 
  2402  0217                     	;# 
  2403  028C                     	;# 
  2404  028D                     	;# 
  2405  028E                     	;# 
  2406  0291                     	;# 
  2407  0291                     	;# 
  2408  0292                     	;# 
  2409  0293                     	;# 
  2410  0294                     	;# 
  2411  0298                     	;# 
  2412  0298                     	;# 
  2413  0299                     	;# 
  2414  029A                     	;# 
  2415  029B                     	;# 
  2416  029E                     	;# 
  2417  030C                     	;# 
  2418  030D                     	;# 
  2419  030E                     	;# 
  2420  038C                     	;# 
  2421  038D                     	;# 
  2422  038E                     	;# 
  2423  0391                     	;# 
  2424  0392                     	;# 
  2425  0393                     	;# 
  2426  0394                     	;# 
  2427  0395                     	;# 
  2428  0396                     	;# 
  2429  0397                     	;# 
  2430  0398                     	;# 
  2431  0399                     	;# 
  2432  040E                     	;# 
  2433  0413                     	;# 
  2434  0413                     	;# 
  2435  0414                     	;# 
  2436  0414                     	;# 
  2437  0415                     	;# 
  2438  0416                     	;# 
  2439  0417                     	;# 
  2440  0418                     	;# 
  2441  041A                     	;# 
  2442  041A                     	;# 
  2443  041B                     	;# 
  2444  041B                     	;# 
  2445  041C                     	;# 
  2446  041D                     	;# 
  2447  041E                     	;# 
  2448  041F                     	;# 
  2449  0493                     	;# 
  2450  0494                     	;# 
  2451  0495                     	;# 
  2452  0496                     	;# 
  2453  049A                     	;# 
  2454  049B                     	;# 
  2455  049C                     	;# 
  2456  049D                     	;# 
  2457  058C                     	;# 
  2458  058C                     	;# 
  2459  058D                     	;# 
  2460  058E                     	;# 
  2461  058E                     	;# 
  2462  058F                     	;# 
  2463  0590                     	;# 
  2464  0590                     	;# 
  2465  0591                     	;# 
  2466  0592                     	;# 
  2467  0592                     	;# 
  2468  0593                     	;# 
  2469  0594                     	;# 
  2470  0594                     	;# 
  2471  0595                     	;# 
  2472  0596                     	;# 
  2473  0596                     	;# 
  2474  0597                     	;# 
  2475  0598                     	;# 
  2476  0599                     	;# 
  2477  059A                     	;# 
  2478  059B                     	;# 
  2479  059B                     	;# 
  2480  059C                     	;# 
  2481  059D                     	;# 
  2482  060C                     	;# 
  2483  060C                     	;# 
  2484  060D                     	;# 
  2485  060E                     	;# 
  2486  060F                     	;# 
  2487  060F                     	;# 
  2488  0610                     	;# 
  2489  0611                     	;# 
  2490  0612                     	;# 
  2491  0613                     	;# 
  2492  0614                     	;# 
  2493  0617                     	;# 
  2494  0618                     	;# 
  2495  0619                     	;# 
  2496  061A                     	;# 
  2497  061B                     	;# 
  2498  061C                     	;# 
  2499  0691                     	;# 
  2500  0692                     	;# 
  2501  0693                     	;# 
  2502  0694                     	;# 
  2503  0695                     	;# 
  2504  0696                     	;# 
  2505  0697                     	;# 
  2506  0699                     	;# 
  2507  069A                     	;# 
  2508  0711                     	;# 
  2509  0712                     	;# 
  2510  0713                     	;# 
  2511  0714                     	;# 
  2512  0715                     	;# 
  2513  0718                     	;# 
  2514  0718                     	;# 
  2515  0719                     	;# 
  2516  071A                     	;# 
  2517  071A                     	;# 
  2518  071B                     	;# 
  2519  071C                     	;# 
  2520  071D                     	;# 
  2521  0791                     	;# 
  2522  0791                     	;# 
  2523  0792                     	;# 
  2524  0793                     	;# 
  2525  0793                     	;# 
  2526  0794                     	;# 
  2527  0795                     	;# 
  2528  0795                     	;# 
  2529  0796                     	;# 
  2530  0797                     	;# 
  2531  0797                     	;# 
  2532  0798                     	;# 
  2533  0799                     	;# 
  2534  079A                     	;# 
  2535  080C                     	;# 
  2536  080C                     	;# 
  2537  080D                     	;# 
  2538  080E                     	;# 
  2539  080E                     	;# 
  2540  080F                     	;# 
  2541  0810                     	;# 
  2542  0810                     	;# 
  2543  0811                     	;# 
  2544  0812                     	;# 
  2545  0812                     	;# 
  2546  0813                     	;# 
  2547  0814                     	;# 
  2548  0815                     	;# 
  2549  0816                     	;# 
  2550  0817                     	;# 
  2551  0818                     	;# 
  2552  0819                     	;# 
  2553  081A                     	;# 
  2554  081A                     	;# 
  2555  081B                     	;# 
  2556  081C                     	;# 
  2557  081C                     	;# 
  2558  081D                     	;# 
  2559  088C                     	;# 
  2560  088D                     	;# 
  2561  088E                     	;# 
  2562  088F                     	;# 
  2563  088F                     	;# 
  2564  0890                     	;# 
  2565  0891                     	;# 
  2566  0892                     	;# 
  2567  0893                     	;# 
  2568  0893                     	;# 
  2569  0894                     	;# 
  2570  0895                     	;# 
  2571  0896                     	;# 
  2572  0897                     	;# 
  2573  0897                     	;# 
  2574  0898                     	;# 
  2575  0899                     	;# 
  2576  0D8C                     	;# 
  2577  0D8C                     	;# 
  2578  0D8D                     	;# 
  2579  0D8E                     	;# 
  2580  0D8F                     	;# 
  2581  0D8F                     	;# 
  2582  0D90                     	;# 
  2583  0D91                     	;# 
  2584  0D92                     	;# 
  2585  0D92                     	;# 
  2586  0D93                     	;# 
  2587  0D94                     	;# 
  2588  0D95                     	;# 
  2589  0D95                     	;# 
  2590  0D96                     	;# 
  2591  0D97                     	;# 
  2592  0D98                     	;# 
  2593  0D99                     	;# 
  2594  0D9A                     	;# 
  2595  0D9B                     	;# 
  2596  0D9C                     	;# 
  2597  0D9D                     	;# 
  2598  0D9E                     	;# 
  2599  0D9E                     	;# 
  2600  0D9F                     	;# 
  2601  0DA0                     	;# 
  2602  0DA1                     	;# 
  2603  0DA1                     	;# 
  2604  0DA2                     	;# 
  2605  0DA3                     	;# 
  2606  0DA4                     	;# 
  2607  0DA4                     	;# 
  2608  0DA5                     	;# 
  2609  0DA6                     	;# 
  2610  0DA7                     	;# 
  2611  0DA7                     	;# 
  2612  0DA8                     	;# 
  2613  0DA9                     	;# 
  2614  0DAA                     	;# 
  2615  0DAB                     	;# 
  2616  0DAC                     	;# 
  2617  0DAD                     	;# 
  2618  0DAE                     	;# 
  2619  0DAF                     	;# 
  2620  0E0F                     	;# 
  2621  0E10                     	;# 
  2622  0E11                     	;# 
  2623  0E12                     	;# 
  2624  0E13                     	;# 
  2625  0E14                     	;# 
  2626  0E15                     	;# 
  2627  0E16                     	;# 
  2628  0E17                     	;# 
  2629  0E18                     	;# 
  2630  0E19                     	;# 
  2631  0E1A                     	;# 
  2632  0E1B                     	;# 
  2633  0E1C                     	;# 
  2634  0E1D                     	;# 
  2635  0E1E                     	;# 
  2636  0E1F                     	;# 
  2637  0E20                     	;# 
  2638  0E21                     	;# 
  2639  0E22                     	;# 
  2640  0E23                     	;# 
  2641  0E24                     	;# 
  2642  0E25                     	;# 
  2643  0E26                     	;# 
  2644  0E27                     	;# 
  2645  0E28                     	;# 
  2646  0E29                     	;# 
  2647  0E2A                     	;# 
  2648  0E2B                     	;# 
  2649  0E2C                     	;# 
  2650  0E2D                     	;# 
  2651  0E2E                     	;# 
  2652  0E90                     	;# 
  2653  0E91                     	;# 
  2654  0E92                     	;# 
  2655  0E94                     	;# 
  2656  0E95                     	;# 
  2657  0E9C                     	;# 
  2658  0E9D                     	;# 
  2659  0E9E                     	;# 
  2660  0E9F                     	;# 
  2661  0EA0                     	;# 
  2662  0EA1                     	;# 
  2663  0EA2                     	;# 
  2664  0EA3                     	;# 
  2665  0EA4                     	;# 
  2666  0EA5                     	;# 
  2667  0EA6                     	;# 
  2668  0EA7                     	;# 
  2669  0F0F                     	;# 
  2670  0F10                     	;# 
  2671  0F11                     	;# 
  2672  0F12                     	;# 
  2673  0F13                     	;# 
  2674  0F14                     	;# 
  2675  0F15                     	;# 
  2676  0F16                     	;# 
  2677  0F17                     	;# 
  2678  0F18                     	;# 
  2679  0F19                     	;# 
  2680  0F1A                     	;# 
  2681  0F1B                     	;# 
  2682  0F1C                     	;# 
  2683  0F1D                     	;# 
  2684  0F1E                     	;# 
  2685  0F1F                     	;# 
  2686  0F20                     	;# 
  2687  0F21                     	;# 
  2688  0F22                     	;# 
  2689  0F23                     	;# 
  2690  0F24                     	;# 
  2691  0F25                     	;# 
  2692  0F26                     	;# 
  2693  0F27                     	;# 
  2694  0F28                     	;# 
  2695  0F29                     	;# 
  2696  0F2A                     	;# 
  2697  0F2B                     	;# 
  2698  0F2C                     	;# 
  2699  0F2D                     	;# 
  2700  0F2E                     	;# 
  2701  0F2F                     	;# 
  2702  0F30                     	;# 
  2703  0F31                     	;# 
  2704  0F32                     	;# 
  2705  0F33                     	;# 
  2706  0F34                     	;# 
  2707  0F35                     	;# 
  2708  0F36                     	;# 
  2709  0F37                     	;# 
  2710  0FE4                     	;# 
  2711  0FE5                     	;# 
  2712  0FE6                     	;# 
  2713  0FE7                     	;# 
  2714  0FE8                     	;# 
  2715  0FE9                     	;# 
  2716  0FEA                     	;# 
  2717  0FEB                     	;# 
  2718  0FED                     	;# 
  2719  0FEE                     	;# 
  2720  0FEF                     	;# 
  2721  0000                     	;# 
  2722  0001                     	;# 
  2723  0002                     	;# 
  2724  0003                     	;# 
  2725  0004                     	;# 
  2726  0005                     	;# 
  2727  0006                     	;# 
  2728  0007                     	;# 
  2729  0008                     	;# 
  2730  0009                     	;# 
  2731  000A                     	;# 
  2732  000B                     	;# 
  2733  000C                     	;# 
  2734  000D                     	;# 
  2735  000E                     	;# 
  2736  0010                     	;# 
  2737  0011                     	;# 
  2738  0012                     	;# 
  2739  0013                     	;# 
  2740  0014                     	;# 
  2741  0015                     	;# 
  2742  0016                     	;# 
  2743  0016                     	;# 
  2744  0017                     	;# 
  2745  0018                     	;# 
  2746  0019                     	;# 
  2747  001A                     	;# 
  2748  001A                     	;# 
  2749  001B                     	;# 
  2750  001B                     	;# 
  2751  001C                     	;# 
  2752  001D                     	;# 
  2753  001E                     	;# 
  2754  001F                     	;# 
  2755  008C                     	;# 
  2756  008D                     	;# 
  2757  008E                     	;# 
  2758  0090                     	;# 
  2759  0091                     	;# 
  2760  0092                     	;# 
  2761  0093                     	;# 
  2762  0094                     	;# 
  2763  0095                     	;# 
  2764  0096                     	;# 
  2765  0098                     	;# 
  2766  0099                     	;# 
  2767  009A                     	;# 
  2768  009B                     	;# 
  2769  009B                     	;# 
  2770  009C                     	;# 
  2771  009D                     	;# 
  2772  009E                     	;# 
  2773  009F                     	;# 
  2774  010C                     	;# 
  2775  010D                     	;# 
  2776  010E                     	;# 
  2777  0111                     	;# 
  2778  0112                     	;# 
  2779  0113                     	;# 
  2780  0114                     	;# 
  2781  0115                     	;# 
  2782  0116                     	;# 
  2783  0117                     	;# 
  2784  0118                     	;# 
  2785  0119                     	;# 
  2786  011C                     	;# 
  2787  018C                     	;# 
  2788  018D                     	;# 
  2789  018E                     	;# 
  2790  0191                     	;# 
  2791  0191                     	;# 
  2792  0192                     	;# 
  2793  0193                     	;# 
  2794  0193                     	;# 
  2795  0194                     	;# 
  2796  0195                     	;# 
  2797  0196                     	;# 
  2798  0197                     	;# 
  2799  0199                     	;# 
  2800  0199                     	;# 
  2801  0199                     	;# 
  2802  019A                     	;# 
  2803  019A                     	;# 
  2804  019A                     	;# 
  2805  019B                     	;# 
  2806  019B                     	;# 
  2807  019B                     	;# 
  2808  019B                     	;# 
  2809  019B                     	;# 
  2810  019C                     	;# 
  2811  019C                     	;# 
  2812  019C                     	;# 
  2813  019D                     	;# 
  2814  019D                     	;# 
  2815  019D                     	;# 
  2816  019E                     	;# 
  2817  019E                     	;# 
  2818  019E                     	;# 
  2819  019F                     	;# 
  2820  019F                     	;# 
  2821  019F                     	;# 
  2822  019F                     	;# 
  2823  019F                     	;# 
  2824  020C                     	;# 
  2825  020D                     	;# 
  2826  020E                     	;# 
  2827  0211                     	;# 
  2828  0211                     	;# 
  2829  0212                     	;# 
  2830  0212                     	;# 
  2831  0213                     	;# 
  2832  0213                     	;# 
  2833  0214                     	;# 
  2834  0214                     	;# 
  2835  0215                     	;# 
  2836  0215                     	;# 
  2837  0215                     	;# 
  2838  0215                     	;# 
  2839  0216                     	;# 
  2840  0216                     	;# 
  2841  0217                     	;# 
  2842  0217                     	;# 
  2843  028C                     	;# 
  2844  028D                     	;# 
  2845  028E                     	;# 
  2846  0291                     	;# 
  2847  0291                     	;# 
  2848  0292                     	;# 
  2849  0293                     	;# 
  2850  0294                     	;# 
  2851  0298                     	;# 
  2852  0298                     	;# 
  2853  0299                     	;# 
  2854  029A                     	;# 
  2855  029B                     	;# 
  2856  029E                     	;# 
  2857  030C                     	;# 
  2858  030D                     	;# 
  2859  030E                     	;# 
  2860  038C                     	;# 
  2861  038D                     	;# 
  2862  038E                     	;# 
  2863  0391                     	;# 
  2864  0392                     	;# 
  2865  0393                     	;# 
  2866  0394                     	;# 
  2867  0395                     	;# 
  2868  0396                     	;# 
  2869  0397                     	;# 
  2870  0398                     	;# 
  2871  0399                     	;# 
  2872  040E                     	;# 
  2873  0413                     	;# 
  2874  0413                     	;# 
  2875  0414                     	;# 
  2876  0414                     	;# 
  2877  0415                     	;# 
  2878  0416                     	;# 
  2879  0417                     	;# 
  2880  0418                     	;# 
  2881  041A                     	;# 
  2882  041A                     	;# 
  2883  041B                     	;# 
  2884  041B                     	;# 
  2885  041C                     	;# 
  2886  041D                     	;# 
  2887  041E                     	;# 
  2888  041F                     	;# 
  2889  0493                     	;# 
  2890  0494                     	;# 
  2891  0495                     	;# 
  2892  0496                     	;# 
  2893  049A                     	;# 
  2894  049B                     	;# 
  2895  049C                     	;# 
  2896  049D                     	;# 
  2897  058C                     	;# 
  2898  058C                     	;# 
  2899  058D                     	;# 
  2900  058E                     	;# 
  2901  058E                     	;# 
  2902  058F                     	;# 
  2903  0590                     	;# 
  2904  0590                     	;# 
  2905  0591                     	;# 
  2906  0592                     	;# 
  2907  0592                     	;# 
  2908  0593                     	;# 
  2909  0594                     	;# 
  2910  0594                     	;# 
  2911  0595                     	;# 
  2912  0596                     	;# 
  2913  0596                     	;# 
  2914  0597                     	;# 
  2915  0598                     	;# 
  2916  0599                     	;# 
  2917  059A                     	;# 
  2918  059B                     	;# 
  2919  059B                     	;# 
  2920  059C                     	;# 
  2921  059D                     	;# 
  2922  060C                     	;# 
  2923  060C                     	;# 
  2924  060D                     	;# 
  2925  060E                     	;# 
  2926  060F                     	;# 
  2927  060F                     	;# 
  2928  0610                     	;# 
  2929  0611                     	;# 
  2930  0612                     	;# 
  2931  0613                     	;# 
  2932  0614                     	;# 
  2933  0617                     	;# 
  2934  0618                     	;# 
  2935  0619                     	;# 
  2936  061A                     	;# 
  2937  061B                     	;# 
  2938  061C                     	;# 
  2939  0691                     	;# 
  2940  0692                     	;# 
  2941  0693                     	;# 
  2942  0694                     	;# 
  2943  0695                     	;# 
  2944  0696                     	;# 
  2945  0697                     	;# 
  2946  0699                     	;# 
  2947  069A                     	;# 
  2948  0711                     	;# 
  2949  0712                     	;# 
  2950  0713                     	;# 
  2951  0714                     	;# 
  2952  0715                     	;# 
  2953  0718                     	;# 
  2954  0718                     	;# 
  2955  0719                     	;# 
  2956  071A                     	;# 
  2957  071A                     	;# 
  2958  071B                     	;# 
  2959  071C                     	;# 
  2960  071D                     	;# 
  2961  0791                     	;# 
  2962  0791                     	;# 
  2963  0792                     	;# 
  2964  0793                     	;# 
  2965  0793                     	;# 
  2966  0794                     	;# 
  2967  0795                     	;# 
  2968  0795                     	;# 
  2969  0796                     	;# 
  2970  0797                     	;# 
  2971  0797                     	;# 
  2972  0798                     	;# 
  2973  0799                     	;# 
  2974  079A                     	;# 
  2975  080C                     	;# 
  2976  080C                     	;# 
  2977  080D                     	;# 
  2978  080E                     	;# 
  2979  080E                     	;# 
  2980  080F                     	;# 
  2981  0810                     	;# 
  2982  0810                     	;# 
  2983  0811                     	;# 
  2984  0812                     	;# 
  2985  0812                     	;# 
  2986  0813                     	;# 
  2987  0814                     	;# 
  2988  0815                     	;# 
  2989  0816                     	;# 
  2990  0817                     	;# 
  2991  0818                     	;# 
  2992  0819                     	;# 
  2993  081A                     	;# 
  2994  081A                     	;# 
  2995  081B                     	;# 
  2996  081C                     	;# 
  2997  081C                     	;# 
  2998  081D                     	;# 
  2999  088C                     	;# 
  3000  088D                     	;# 
  3001  088E                     	;# 
  3002  088F                     	;# 
  3003  088F                     	;# 
  3004  0890                     	;# 
  3005  0891                     	;# 
  3006  0892                     	;# 
  3007  0893                     	;# 
  3008  0893                     	;# 
  3009  0894                     	;# 
  3010  0895                     	;# 
  3011  0896                     	;# 
  3012  0897                     	;# 
  3013  0897                     	;# 
  3014  0898                     	;# 
  3015  0899                     	;# 
  3016  0D8C                     	;# 
  3017  0D8C                     	;# 
  3018  0D8D                     	;# 
  3019  0D8E                     	;# 
  3020  0D8F                     	;# 
  3021  0D8F                     	;# 
  3022  0D90                     	;# 
  3023  0D91                     	;# 
  3024  0D92                     	;# 
  3025  0D92                     	;# 
  3026  0D93                     	;# 
  3027  0D94                     	;# 
  3028  0D95                     	;# 
  3029  0D95                     	;# 
  3030  0D96                     	;# 
  3031  0D97                     	;# 
  3032  0D98                     	;# 
  3033  0D99                     	;# 
  3034  0D9A                     	;# 
  3035  0D9B                     	;# 
  3036  0D9C                     	;# 
  3037  0D9D                     	;# 
  3038  0D9E                     	;# 
  3039  0D9E                     	;# 
  3040  0D9F                     	;# 
  3041  0DA0                     	;# 
  3042  0DA1                     	;# 
  3043  0DA1                     	;# 
  3044  0DA2                     	;# 
  3045  0DA3                     	;# 
  3046  0DA4                     	;# 
  3047  0DA4                     	;# 
  3048  0DA5                     	;# 
  3049  0DA6                     	;# 
  3050  0DA7                     	;# 
  3051  0DA7                     	;# 
  3052  0DA8                     	;# 
  3053  0DA9                     	;# 
  3054  0DAA                     	;# 
  3055  0DAB                     	;# 
  3056  0DAC                     	;# 
  3057  0DAD                     	;# 
  3058  0DAE                     	;# 
  3059  0DAF                     	;# 
  3060  0E0F                     	;# 
  3061  0E10                     	;# 
  3062  0E11                     	;# 
  3063  0E12                     	;# 
  3064  0E13                     	;# 
  3065  0E14                     	;# 
  3066  0E15                     	;# 
  3067  0E16                     	;# 
  3068  0E17                     	;# 
  3069  0E18                     	;# 
  3070  0E19                     	;# 
  3071  0E1A                     	;# 
  3072  0E1B                     	;# 
  3073  0E1C                     	;# 
  3074  0E1D                     	;# 
  3075  0E1E                     	;# 
  3076  0E1F                     	;# 
  3077  0E20                     	;# 
  3078  0E21                     	;# 
  3079  0E22                     	;# 
  3080  0E23                     	;# 
  3081  0E24                     	;# 
  3082  0E25                     	;# 
  3083  0E26                     	;# 
  3084  0E27                     	;# 
  3085  0E28                     	;# 
  3086  0E29                     	;# 
  3087  0E2A                     	;# 
  3088  0E2B                     	;# 
  3089  0E2C                     	;# 
  3090  0E2D                     	;# 
  3091  0E2E                     	;# 
  3092  0E90                     	;# 
  3093  0E91                     	;# 
  3094  0E92                     	;# 
  3095  0E94                     	;# 
  3096  0E95                     	;# 
  3097  0E9C                     	;# 
  3098  0E9D                     	;# 
  3099  0E9E                     	;# 
  3100  0E9F                     	;# 
  3101  0EA0                     	;# 
  3102  0EA1                     	;# 
  3103  0EA2                     	;# 
  3104  0EA3                     	;# 
  3105  0EA4                     	;# 
  3106  0EA5                     	;# 
  3107  0EA6                     	;# 
  3108  0EA7                     	;# 
  3109  0F0F                     	;# 
  3110  0F10                     	;# 
  3111  0F11                     	;# 
  3112  0F12                     	;# 
  3113  0F13                     	;# 
  3114  0F14                     	;# 
  3115  0F15                     	;# 
  3116  0F16                     	;# 
  3117  0F17                     	;# 
  3118  0F18                     	;# 
  3119  0F19                     	;# 
  3120  0F1A                     	;# 
  3121  0F1B                     	;# 
  3122  0F1C                     	;# 
  3123  0F1D                     	;# 
  3124  0F1E                     	;# 
  3125  0F1F                     	;# 
  3126  0F20                     	;# 
  3127  0F21                     	;# 
  3128  0F22                     	;# 
  3129  0F23                     	;# 
  3130  0F24                     	;# 
  3131  0F25                     	;# 
  3132  0F26                     	;# 
  3133  0F27                     	;# 
  3134  0F28                     	;# 
  3135  0F29                     	;# 
  3136  0F2A                     	;# 
  3137  0F2B                     	;# 
  3138  0F2C                     	;# 
  3139  0F2D                     	;# 
  3140  0F2E                     	;# 
  3141  0F2F                     	;# 
  3142  0F30                     	;# 
  3143  0F31                     	;# 
  3144  0F32                     	;# 
  3145  0F33                     	;# 
  3146  0F34                     	;# 
  3147  0F35                     	;# 
  3148  0F36                     	;# 
  3149  0F37                     	;# 
  3150  0FE4                     	;# 
  3151  0FE5                     	;# 
  3152  0FE6                     	;# 
  3153  0FE7                     	;# 
  3154  0FE8                     	;# 
  3155  0FE9                     	;# 
  3156  0FEA                     	;# 
  3157  0FEB                     	;# 
  3158  0FED                     	;# 
  3159  0FEE                     	;# 
  3160  0FEF                     	;# 
  3161  0000                     	;# 
  3162  0001                     	;# 
  3163  0002                     	;# 
  3164  0003                     	;# 
  3165  0004                     	;# 
  3166  0005                     	;# 
  3167  0006                     	;# 
  3168  0007                     	;# 
  3169  0008                     	;# 
  3170  0009                     	;# 
  3171  000A                     	;# 
  3172  000B                     	;# 
  3173  000C                     	;# 
  3174  000D                     	;# 
  3175  000E                     	;# 
  3176  0010                     	;# 
  3177  0011                     	;# 
  3178  0012                     	;# 
  3179  0013                     	;# 
  3180  0014                     	;# 
  3181  0015                     	;# 
  3182  0016                     	;# 
  3183  0016                     	;# 
  3184  0017                     	;# 
  3185  0018                     	;# 
  3186  0019                     	;# 
  3187  001A                     	;# 
  3188  001A                     	;# 
  3189  001B                     	;# 
  3190  001B                     	;# 
  3191  001C                     	;# 
  3192  001D                     	;# 
  3193  001E                     	;# 
  3194  001F                     	;# 
  3195  008C                     	;# 
  3196  008D                     	;# 
  3197  008E                     	;# 
  3198  0090                     	;# 
  3199  0091                     	;# 
  3200  0092                     	;# 
  3201  0093                     	;# 
  3202  0094                     	;# 
  3203  0095                     	;# 
  3204  0096                     	;# 
  3205  0098                     	;# 
  3206  0099                     	;# 
  3207  009A                     	;# 
  3208  009B                     	;# 
  3209  009B                     	;# 
  3210  009C                     	;# 
  3211  009D                     	;# 
  3212  009E                     	;# 
  3213  009F                     	;# 
  3214  010C                     	;# 
  3215  010D                     	;# 
  3216  010E                     	;# 
  3217  0111                     	;# 
  3218  0112                     	;# 
  3219  0113                     	;# 
  3220  0114                     	;# 
  3221  0115                     	;# 
  3222  0116                     	;# 
  3223  0117                     	;# 
  3224  0118                     	;# 
  3225  0119                     	;# 
  3226  011C                     	;# 
  3227  018C                     	;# 
  3228  018D                     	;# 
  3229  018E                     	;# 
  3230  0191                     	;# 
  3231  0191                     	;# 
  3232  0192                     	;# 
  3233  0193                     	;# 
  3234  0193                     	;# 
  3235  0194                     	;# 
  3236  0195                     	;# 
  3237  0196                     	;# 
  3238  0197                     	;# 
  3239  0199                     	;# 
  3240  0199                     	;# 
  3241  0199                     	;# 
  3242  019A                     	;# 
  3243  019A                     	;# 
  3244  019A                     	;# 
  3245  019B                     	;# 
  3246  019B                     	;# 
  3247  019B                     	;# 
  3248  019B                     	;# 
  3249  019B                     	;# 
  3250  019C                     	;# 
  3251  019C                     	;# 
  3252  019C                     	;# 
  3253  019D                     	;# 
  3254  019D                     	;# 
  3255  019D                     	;# 
  3256  019E                     	;# 
  3257  019E                     	;# 
  3258  019E                     	;# 
  3259  019F                     	;# 
  3260  019F                     	;# 
  3261  019F                     	;# 
  3262  019F                     	;# 
  3263  019F                     	;# 
  3264  020C                     	;# 
  3265  020D                     	;# 
  3266  020E                     	;# 
  3267  0211                     	;# 
  3268  0211                     	;# 
  3269  0212                     	;# 
  3270  0212                     	;# 
  3271  0213                     	;# 
  3272  0213                     	;# 
  3273  0214                     	;# 
  3274  0214                     	;# 
  3275  0215                     	;# 
  3276  0215                     	;# 
  3277  0215                     	;# 
  3278  0215                     	;# 
  3279  0216                     	;# 
  3280  0216                     	;# 
  3281  0217                     	;# 
  3282  0217                     	;# 
  3283  028C                     	;# 
  3284  028D                     	;# 
  3285  028E                     	;# 
  3286  0291                     	;# 
  3287  0291                     	;# 
  3288  0292                     	;# 
  3289  0293                     	;# 
  3290  0294                     	;# 
  3291  0298                     	;# 
  3292  0298                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029E                     	;# 
  3297  030C                     	;# 
  3298  030D                     	;# 
  3299  030E                     	;# 
  3300  038C                     	;# 
  3301  038D                     	;# 
  3302  038E                     	;# 
  3303  0391                     	;# 
  3304  0392                     	;# 
  3305  0393                     	;# 
  3306  0394                     	;# 
  3307  0395                     	;# 
  3308  0396                     	;# 
  3309  0397                     	;# 
  3310  0398                     	;# 
  3311  0399                     	;# 
  3312  040E                     	;# 
  3313  0413                     	;# 
  3314  0413                     	;# 
  3315  0414                     	;# 
  3316  0414                     	;# 
  3317  0415                     	;# 
  3318  0416                     	;# 
  3319  0417                     	;# 
  3320  0418                     	;# 
  3321  041A                     	;# 
  3322  041A                     	;# 
  3323  041B                     	;# 
  3324  041B                     	;# 
  3325  041C                     	;# 
  3326  041D                     	;# 
  3327  041E                     	;# 
  3328  041F                     	;# 
  3329  0493                     	;# 
  3330  0494                     	;# 
  3331  0495                     	;# 
  3332  0496                     	;# 
  3333  049A                     	;# 
  3334  049B                     	;# 
  3335  049C                     	;# 
  3336  049D                     	;# 
  3337  058C                     	;# 
  3338  058C                     	;# 
  3339  058D                     	;# 
  3340  058E                     	;# 
  3341  058E                     	;# 
  3342  058F                     	;# 
  3343  0590                     	;# 
  3344  0590                     	;# 
  3345  0591                     	;# 
  3346  0592                     	;# 
  3347  0592                     	;# 
  3348  0593                     	;# 
  3349  0594                     	;# 
  3350  0594                     	;# 
  3351  0595                     	;# 
  3352  0596                     	;# 
  3353  0596                     	;# 
  3354  0597                     	;# 
  3355  0598                     	;# 
  3356  0599                     	;# 
  3357  059A                     	;# 
  3358  059B                     	;# 
  3359  059B                     	;# 
  3360  059C                     	;# 
  3361  059D                     	;# 
  3362  060C                     	;# 
  3363  060C                     	;# 
  3364  060D                     	;# 
  3365  060E                     	;# 
  3366  060F                     	;# 
  3367  060F                     	;# 
  3368  0610                     	;# 
  3369  0611                     	;# 
  3370  0612                     	;# 
  3371  0613                     	;# 
  3372  0614                     	;# 
  3373  0617                     	;# 
  3374  0618                     	;# 
  3375  0619                     	;# 
  3376  061A                     	;# 
  3377  061B                     	;# 
  3378  061C                     	;# 
  3379  0691                     	;# 
  3380  0692                     	;# 
  3381  0693                     	;# 
  3382  0694                     	;# 
  3383  0695                     	;# 
  3384  0696                     	;# 
  3385  0697                     	;# 
  3386  0699                     	;# 
  3387  069A                     	;# 
  3388  0711                     	;# 
  3389  0712                     	;# 
  3390  0713                     	;# 
  3391  0714                     	;# 
  3392  0715                     	;# 
  3393  0718                     	;# 
  3394  0718                     	;# 
  3395  0719                     	;# 
  3396  071A                     	;# 
  3397  071A                     	;# 
  3398  071B                     	;# 
  3399  071C                     	;# 
  3400  071D                     	;# 
  3401  0791                     	;# 
  3402  0791                     	;# 
  3403  0792                     	;# 
  3404  0793                     	;# 
  3405  0793                     	;# 
  3406  0794                     	;# 
  3407  0795                     	;# 
  3408  0795                     	;# 
  3409  0796                     	;# 
  3410  0797                     	;# 
  3411  0797                     	;# 
  3412  0798                     	;# 
  3413  0799                     	;# 
  3414  079A                     	;# 
  3415  080C                     	;# 
  3416  080C                     	;# 
  3417  080D                     	;# 
  3418  080E                     	;# 
  3419  080E                     	;# 
  3420  080F                     	;# 
  3421  0810                     	;# 
  3422  0810                     	;# 
  3423  0811                     	;# 
  3424  0812                     	;# 
  3425  0812                     	;# 
  3426  0813                     	;# 
  3427  0814                     	;# 
  3428  0815                     	;# 
  3429  0816                     	;# 
  3430  0817                     	;# 
  3431  0818                     	;# 
  3432  0819                     	;# 
  3433  081A                     	;# 
  3434  081A                     	;# 
  3435  081B                     	;# 
  3436  081C                     	;# 
  3437  081C                     	;# 
  3438  081D                     	;# 
  3439  088C                     	;# 
  3440  088D                     	;# 
  3441  088E                     	;# 
  3442  088F                     	;# 
  3443  088F                     	;# 
  3444  0890                     	;# 
  3445  0891                     	;# 
  3446  0892                     	;# 
  3447  0893                     	;# 
  3448  0893                     	;# 
  3449  0894                     	;# 
  3450  0895                     	;# 
  3451  0896                     	;# 
  3452  0897                     	;# 
  3453  0897                     	;# 
  3454  0898                     	;# 
  3455  0899                     	;# 
  3456  0D8C                     	;# 
  3457  0D8C                     	;# 
  3458  0D8D                     	;# 
  3459  0D8E                     	;# 
  3460  0D8F                     	;# 
  3461  0D8F                     	;# 
  3462  0D90                     	;# 
  3463  0D91                     	;# 
  3464  0D92                     	;# 
  3465  0D92                     	;# 
  3466  0D93                     	;# 
  3467  0D94                     	;# 
  3468  0D95                     	;# 
  3469  0D95                     	;# 
  3470  0D96                     	;# 
  3471  0D97                     	;# 
  3472  0D98                     	;# 
  3473  0D99                     	;# 
  3474  0D9A                     	;# 
  3475  0D9B                     	;# 
  3476  0D9C                     	;# 
  3477  0D9D                     	;# 
  3478  0D9E                     	;# 
  3479  0D9E                     	;# 
  3480  0D9F                     	;# 
  3481  0DA0                     	;# 
  3482  0DA1                     	;# 
  3483  0DA1                     	;# 
  3484  0DA2                     	;# 
  3485  0DA3                     	;# 
  3486  0DA4                     	;# 
  3487  0DA4                     	;# 
  3488  0DA5                     	;# 
  3489  0DA6                     	;# 
  3490  0DA7                     	;# 
  3491  0DA7                     	;# 
  3492  0DA8                     	;# 
  3493  0DA9                     	;# 
  3494  0DAA                     	;# 
  3495  0DAB                     	;# 
  3496  0DAC                     	;# 
  3497  0DAD                     	;# 
  3498  0DAE                     	;# 
  3499  0DAF                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E90                     	;# 
  3533  0E91                     	;# 
  3534  0E92                     	;# 
  3535  0E94                     	;# 
  3536  0E95                     	;# 
  3537  0E9C                     	;# 
  3538  0E9D                     	;# 
  3539  0E9E                     	;# 
  3540  0E9F                     	;# 
  3541  0EA0                     	;# 
  3542  0EA1                     	;# 
  3543  0EA2                     	;# 
  3544  0EA3                     	;# 
  3545  0EA4                     	;# 
  3546  0EA5                     	;# 
  3547  0EA6                     	;# 
  3548  0EA7                     	;# 
  3549  0F0F                     	;# 
  3550  0F10                     	;# 
  3551  0F11                     	;# 
  3552  0F12                     	;# 
  3553  0F13                     	;# 
  3554  0F14                     	;# 
  3555  0F15                     	;# 
  3556  0F16                     	;# 
  3557  0F17                     	;# 
  3558  0F18                     	;# 
  3559  0F19                     	;# 
  3560  0F1A                     	;# 
  3561  0F1B                     	;# 
  3562  0F1C                     	;# 
  3563  0F1D                     	;# 
  3564  0F1E                     	;# 
  3565  0F1F                     	;# 
  3566  0F20                     	;# 
  3567  0F21                     	;# 
  3568  0F22                     	;# 
  3569  0F23                     	;# 
  3570  0F24                     	;# 
  3571  0F25                     	;# 
  3572  0F26                     	;# 
  3573  0F27                     	;# 
  3574  0F28                     	;# 
  3575  0F29                     	;# 
  3576  0F2A                     	;# 
  3577  0F2B                     	;# 
  3578  0F2C                     	;# 
  3579  0F2D                     	;# 
  3580  0F2E                     	;# 
  3581  0F2F                     	;# 
  3582  0F30                     	;# 
  3583  0F31                     	;# 
  3584  0F32                     	;# 
  3585  0F33                     	;# 
  3586  0F34                     	;# 
  3587  0F35                     	;# 
  3588  0F36                     	;# 
  3589  0F37                     	;# 
  3590  0FE4                     	;# 
  3591  0FE5                     	;# 
  3592  0FE6                     	;# 
  3593  0FE7                     	;# 
  3594  0FE8                     	;# 
  3595  0FE9                     	;# 
  3596  0FEA                     	;# 
  3597  0FEB                     	;# 
  3598  0FED                     	;# 
  3599  0FEE                     	;# 
  3600  0FEF                     	;# 
  3601                           
  3602 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  3603  0000                     
  3604 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  3605  0000                     
  3606 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  3607  0000                     
  3608 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  3609  0000                     
  3610 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  3611  0000                     
  3612 ;; Function _I2C_DO_IDLE is unused but had its address taken
  3613  0000                     
  3614 ;; Function _I2C_DO_SEND_ADR_READ is unused but had its address taken
  3615  0000                     
  3616 ;; Function _I2C_DO_SEND_ADR_WRITE is unused but had its address taken
  3617  0000                     
  3618 ;; Function _I2C_DO_TX is unused but had its address taken
  3619  0000                     
  3620 ;; Function _I2C_DO_RX is unused but had its address taken
  3621  0000                     
  3622 ;; Function _I2C_DO_RCEN is unused but had its address taken
  3623  0000                     
  3624 ;; Function _I2C_DO_TX_EMPTY is unused but had its address taken
  3625  0000                     
  3626 ;; Function _I2C_DO_SEND_RESTART_READ is unused but had its address taken
  3627  0000                     
  3628 ;; Function _I2C_DO_SEND_RESTART_WRITE is unused but had its address taken
  3629  0000                     
  3630 ;; Function _I2C_DO_SEND_RESTART is unused but had its address taken
  3631  0000                     
  3632 ;; Function _I2C_DO_SEND_STOP is unused but had its address taken
  3633  0000                     
  3634 ;; Function _I2C_DO_RX_ACK is unused but had its address taken
  3635  0000                     
  3636 ;; Function _I2C_DO_RX_NACK_STOP is unused but had its address taken
  3637  0000                     
  3638 ;; Function _I2C_DO_RX_NACK_RESTART is unused but had its address taken
  3639  0000                     
  3640 ;; Function _I2C_DO_RESET is unused but had its address taken
  3641  0000                     
  3642 ;; Function _I2C_DO_ADDRESS_NACK is unused but had its address taken
  3643  0000                     
  3644 ;; Function _I2C_CallbackReturnStop is unused but had its address taken
  3645  0000                     
  3646 ;; Function _I2C_CallbackReturnReset is unused but had its address taken
  3647  0000                     
  3648                           	psect	idataCOMMON
  3649  02D2                     __pidataCOMMON:	
  3650                           
  3651                           ;initializer for _Validation
  3652  02D2  3404               	retlw	4
  3653                           
  3654                           	psect	idataBANK0
  3655  02D0                     __pidataBANK0:	
  3656                           
  3657                           ;initializer for _Angle
  3658  02D0  340A               	retlw	10
  3659  02D1  3400               	retlw	0
  3660                           
  3661                           	psect	stringtext1
  3662  01F0                     __pstringtext1:	
  3663  01F0                     _fsmStateTable:	
  3664  01F0  3400               	retlw	0
  3665  01F1  3400               	retlw	0
  3666  01F2  3400               	retlw	0
  3667  01F3  3400               	retlw	0
  3668  01F4  3400               	retlw	0
  3669  01F5  3400               	retlw	0
  3670  01F6  3400               	retlw	0
  3671  01F7  3400               	retlw	0
  3672  01F8  3400               	retlw	0
  3673  01F9  3400               	retlw	0
  3674  01FA  3400               	retlw	0
  3675  01FB  3400               	retlw	0
  3676  01FC  3400               	retlw	0
  3677  01FD  3400               	retlw	0
  3678  01FE  3400               	retlw	0
  3679  01FF  3400               	retlw	0
  3680  0200  3400               	retlw	0
  3681  0201  3400               	retlw	0
  3682  0202  3400               	retlw	0
  3683  0203  3400               	retlw	0
  3684  0204  3400               	retlw	0
  3685  0205  3400               	retlw	0
  3686  0206  3400               	retlw	0
  3687  0207  3400               	retlw	0
  3688  0208  3400               	retlw	0
  3689  0209  3400               	retlw	0
  3690  020A  3400               	retlw	0
  3691  020B  3400               	retlw	0
  3692  020C  3400               	retlw	0
  3693  020D  3400               	retlw	0
  3694  020E  3400               	retlw	0
  3695  020F  3400               	retlw	0
  3696  0210                     __end_of_fsmStateTable:	
  3697                           
  3698                           	psect	nvBANK0
  3699  0051                     __pnvBANK0:	
  3700  0051                     _TMR2_InterruptHandler:	
  3701  0051                     	ds	2
  3702  0053                     _EUSART_ErrorHandler:	
  3703  0053                     	ds	2
  3704  0055                     _EUSART_OverrunErrorHandler:	
  3705  0055                     	ds	2
  3706  0057                     _EUSART_FramingErrorHandler:	
  3707  0057                     	ds	2
  3708  0059                     _EUSART_RxDefaultInterruptHandler:	
  3709  0059                     	ds	2
  3710  000C                     _PORTAbits	set	12
  3711  001B                     _PR2	set	27
  3712  001A                     _TMR2	set	26
  3713  001C                     _T2CONbits	set	28
  3714  001F                     _T2RSTbits	set	31
  3715  001D                     _T2HLTbits	set	29
  3716  001C                     _T2CON	set	28
  3717  001A                     _T2TMR	set	26
  3718  001B                     _T2PR	set	27
  3719  001F                     _T2RST	set	31
  3720  001D                     _T2HLT	set	29
  3721  001E                     _T2CLKCON	set	30
  3722  0011                     _PIR2bits	set	17
  3723  0010                     _PIR1bits	set	16
  3724  000B                     _INTCONbits	set	11
  3725  0095                     _OPTION_REGbits	set	149
  3726  008E                     _TRISC	set	142
  3727  008D                     _TRISB	set	141
  3728  008C                     _TRISA	set	140
  3729  0098                     _OSCTUNE	set	152
  3730  0099                     _OSCCON	set	153
  3731  0090                     _PIE1bits	set	144
  3732  010C                     _LATAbits	set	268
  3733  010E                     _LATC	set	270
  3734  010D                     _LATB	set	269
  3735  010C                     _LATA	set	268
  3736  0116                     _BORCON	set	278
  3737  0199                     _RC1REG	set	409
  3738  019D                     _RC1STAbits	set	413
  3739  019A                     _TX1REG	set	410
  3740  019E                     _TX1STAbits	set	414
  3741  019C                     _SPBRGH	set	412
  3742  019B                     _SPBRGL	set	411
  3743  019E                     _TX1STA	set	414
  3744  019D                     _RC1STA	set	413
  3745  019F                     _BAUD1CON	set	415
  3746  018C                     _ANSELA	set	396
  3747  018D                     _ANSELB	set	397
  3748  018E                     _ANSELC	set	398
  3749  0214                     _SSP1STATbits	set	532
  3750  0216                     _SSP1CON2bits	set	534
  3751  0211                     _SSP1BUF	set	529
  3752  0215                     _SSP1CON1bits	set	533
  3753  0212                     _SSP1ADD	set	530
  3754  0216                     _SSP1CON2	set	534
  3755  0215                     _SSP1CON1	set	533
  3756  0214                     _SSP1STAT	set	532
  3757  020E                     _WPUC	set	526
  3758  020C                     _WPUA	set	524
  3759  020D                     _WPUB	set	525
  3760  029E                     _CCPTMRSbits	set	670
  3761  028E                     _ODCONC	set	654
  3762  028D                     _ODCONB	set	653
  3763  028C                     _ODCONA	set	652
  3764  030E                     _SLRCONC	set	782
  3765  030D                     _SLRCONB	set	781
  3766  030C                     _SLRCONA	set	780
  3767  038E                     _INLVLC	set	910
  3768  038D                     _INLVLB	set	909
  3769  038C                     _INLVLA	set	908
  3770  0617                     _PWM3DCL	set	1559
  3771  0618                     _PWM3DCH	set	1560
  3772  0619                     _PWM3CON	set	1561
  3773  0E20                     _SSPCLKPPS	set	3616
  3774  0E21                     _SSPDATPPS	set	3617
  3775  0E24                     _RXPPS	set	3620
  3776  0E92                     _RA2PPS	set	3730
  3777  0E9C                     _RB4PPS	set	3740
  3778  0E9F                     _RB7PPS	set	3743
  3779  0E9E                     _RB6PPS	set	3742
  3780                           
  3781                           ; #config settings
  3782  0000                     
  3783                           	psect	cinit
  3784  0026                     start_initialization:	
  3785  0026                     __initialization:	
  3786                           
  3787                           ; Initialize objects allocated to COMMON
  3788  0026  3182  22D2  3180   	fcall	__pidataCOMMON	;fetch initializer
  3789  0029  00FC               	movwf	__pdataCOMMON& (0+127)
  3790                           
  3791                           ; Initialize objects allocated to BANK0
  3792  002A  3182  22D0  3180   	fcall	__pidataBANK0	;fetch initializer
  3793  002D  00DF               	movwf	__pdataBANK0& (0+127)
  3794  002E  3182  22D1  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3795  0031  00E0               	movwf	(__pdataBANK0+1)& (0+127)
  3796                           
  3797                           ; Clear objects allocated to COMMON
  3798  0032  01F7               	clrf	__pbssCOMMON& (0+127)
  3799  0033  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  3800  0034  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  3801  0035  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  3802  0036  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  3803                           
  3804                           ; Clear objects allocated to BANK0
  3805  0037  3020               	movlw	low __pbssBANK0
  3806  0038  0084               	movwf	4
  3807  0039  3000               	movlw	high __pbssBANK0
  3808  003A  0085               	movwf	5
  3809  003B  3031               	movlw	49
  3810  003C  3182  2294         	fcall	clear_ram0
  3811  003E                     end_of_initialization:	
  3812                           ;End of C runtime variable initialization code
  3813                           
  3814  003E                     __end_of__initialization:	
  3815  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3816  003F  0020               	movlb	0
  3817  0040  3180  28C8         	ljmp	_main	;jump to C main() function
  3818                           
  3819                           	psect	bssCOMMON
  3820  0077                     __pbssCOMMON:	
  3821  0077                     _PosUart:	
  3822  0077                     	ds	1
  3823  0078                     _Type:	
  3824  0078                     	ds	1
  3825  0079                     _Data:	
  3826  0079                     	ds	1
  3827  007A                     _eusartRxCount:	
  3828  007A                     	ds	1
  3829  007B                     _eusartRxTail:	
  3830  007B                     	ds	1
  3831                           
  3832                           	psect	dataCOMMON
  3833  007C                     __pdataCOMMON:	
  3834  007C                     _Validation:	
  3835  007C                     	ds	1
  3836                           
  3837                           	psect	bssBANK0
  3838  0020                     __pbssBANK0:	
  3839  0020                     _I2C_Status:	
  3840  0020                     	ds	29
  3841  003D                     _eusartRxStatusBuffer:	
  3842  003D                     	ds	8
  3843  0045                     _eusartRxBuffer:	
  3844  0045                     	ds	8
  3845  004D                     _Vitesse:	
  3846  004D                     	ds	2
  3847  004F                     _eusartRxLastError:	
  3848  004F                     	ds	1
  3849  0050                     _eusartRxHead:	
  3850  0050                     	ds	1
  3851                           
  3852                           	psect	dataBANK0
  3853  005F                     __pdataBANK0:	
  3854  005F                     _Angle:	
  3855  005F                     	ds	2
  3856                           
  3857                           	psect	clrtext
  3858  0294                     clear_ram0:	
  3859                           ;	Called with FSR0 containing the base address, and
  3860                           ;	WREG with the size to clear
  3861                           
  3862  0294  0064               	clrwdt	;clear the watchdog before getting into this loop
  3863  0295                     clrloop0:	
  3864  0295  0180               	clrf	0	;clear RAM location pointed to by FSR
  3865  0296  3101               	addfsr 0,1
  3866  0297  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3867  0298  2A95               	goto	clrloop0	;have we reached the end yet?
  3868  0299  3400               	retlw	0	;all done for this memory range, return
  3869                           
  3870                           	psect	cstackCOMMON
  3871  0070                     __pcstackCOMMON:	
  3872  0070                     ?_TMR2_ISR:	
  3873  0070                     ?_I2C_Initialize:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0070                     ?_PIN_MANAGER_Initialize:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0070                     ?_OSCILLATOR_Initialize:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0070                     ?_PWM3_Initialize:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0070                     ?_TMR2_Initialize:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0070                     ?_EUSART_Initialize:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0070                     ?_EUSART_Receive_ISR:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0070                     ?_EUSART_DefaultErrorHandler:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0070                     ?_EUSART_RxDataHandler:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0070                     ??_EUSART_RxDataHandler:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0070                     ?_TMR2_DefaultInterruptHandler:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0070                     ??_TMR2_DefaultInterruptHandler:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0070                     ?_INTERRUPT_InterruptManager:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924  0070                     ?_SYSTEM_Initialize:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0070                     ?_EUSART_Write:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0070                     ??_EUSART_Write:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0070                     ?_PWM3_LoadDutyValue:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936  0070                     ?_TMR2_Start:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0070                     ?_TMR2_StartTimer:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0070                     ?_TMR2_Counter8BitSet:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945  0070                     ?_TMR2_WriteTimer:	
  3946                           ; 1 bytes @ 0x0
  3947                           
  3948  0070                     ?_MyTimer2ISR:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951  0070                     ?_MyUART_ISR:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954  0070                     ?_main:	
  3955                           ; 1 bytes @ 0x0
  3956                           
  3957  0070                     EUSART_Write@txData:	
  3958                           ; 1 bytes @ 0x0
  3959                           
  3960  0070                     PWM3_LoadDutyValue@dutyValue:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963                           
  3964                           ; 2 bytes @ 0x0
  3965  0070                     	ds	1
  3966  0071                     ??_EUSART_Receive_ISR:	
  3967  0071                     ??_EUSART_DefaultErrorHandler:	
  3968                           ; 1 bytes @ 0x1
  3969                           
  3970  0071                     ??_MyUART_ISR:	
  3971                           ; 1 bytes @ 0x1
  3972                           
  3973                           
  3974                           ; 1 bytes @ 0x1
  3975  0071                     	ds	1
  3976  0072                     ??_PWM3_LoadDutyValue:	
  3977                           
  3978                           ; 1 bytes @ 0x2
  3979  0072                     	ds	2
  3980  0074                     ??_MyTimer2ISR:	
  3981                           
  3982                           ; 1 bytes @ 0x4
  3983  0074                     	ds	1
  3984  0075                     MyUART_ISR@c:	
  3985                           
  3986                           ; 1 bytes @ 0x5
  3987  0075                     	ds	1
  3988  0076                     ??_TMR2_ISR:	
  3989  0076                     ??_INTERRUPT_InterruptManager:	
  3990                           ; 1 bytes @ 0x6
  3991                           
  3992                           
  3993                           ; 1 bytes @ 0x6
  3994  0076                     	ds	1
  3995                           
  3996                           	psect	cstackBANK0
  3997  005B                     __pcstackBANK0:	
  3998  005B                     ??_I2C_Initialize:	
  3999  005B                     ??_PIN_MANAGER_Initialize:	
  4000                           ; 1 bytes @ 0x0
  4001                           
  4002  005B                     ??_OSCILLATOR_Initialize:	
  4003                           ; 1 bytes @ 0x0
  4004                           
  4005  005B                     ??_PWM3_Initialize:	
  4006                           ; 1 bytes @ 0x0
  4007                           
  4008  005B                     ?_EUSART_SetRxInterruptHandler:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011  005B                     ?_EUSART_SetFramingErrorHandler:	
  4012                           ; 1 bytes @ 0x0
  4013                           
  4014  005B                     ?_EUSART_SetOverrunErrorHandler:	
  4015                           ; 1 bytes @ 0x0
  4016                           
  4017  005B                     ?_EUSART_SetErrorHandler:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  005B                     ?_TMR2_SetInterruptHandler:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  005B                     ??_TMR2_Start:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  005B                     ??_TMR2_StartTimer:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  005B                     ??_TMR2_Counter8BitSet:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  005B                     TMR2_Counter8BitSet@timerVal:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  005B                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  005B                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4039                           ; 2 bytes @ 0x0
  4040                           
  4041  005B                     EUSART_SetErrorHandler@interruptHandler:	
  4042                           ; 2 bytes @ 0x0
  4043                           
  4044  005B                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4045                           ; 2 bytes @ 0x0
  4046                           
  4047  005B                     TMR2_SetInterruptHandler@InterruptHandler:	
  4048                           ; 2 bytes @ 0x0
  4049                           
  4050                           
  4051                           ; 2 bytes @ 0x0
  4052  005B                     	ds	1
  4053  005C                     ??_TMR2_WriteTimer:	
  4054  005C                     TMR2_WriteTimer@timerVal:	
  4055                           ; 1 bytes @ 0x1
  4056                           
  4057                           
  4058                           ; 1 bytes @ 0x1
  4059  005C                     	ds	1
  4060  005D                     ??_TMR2_Initialize:	
  4061  005D                     ??_EUSART_Initialize:	
  4062                           ; 1 bytes @ 0x2
  4063                           
  4064  005D                     ??_EUSART_SetRxInterruptHandler:	
  4065                           ; 1 bytes @ 0x2
  4066                           
  4067  005D                     ??_EUSART_SetFramingErrorHandler:	
  4068                           ; 1 bytes @ 0x2
  4069                           
  4070  005D                     ??_EUSART_SetOverrunErrorHandler:	
  4071                           ; 1 bytes @ 0x2
  4072                           
  4073  005D                     ??_EUSART_SetErrorHandler:	
  4074                           ; 1 bytes @ 0x2
  4075                           
  4076  005D                     ??_TMR2_SetInterruptHandler:	
  4077                           ; 1 bytes @ 0x2
  4078                           
  4079  005D                     ??_SYSTEM_Initialize:	
  4080                           ; 1 bytes @ 0x2
  4081                           
  4082  005D                     ??_main:	
  4083                           ; 1 bytes @ 0x2
  4084                           
  4085                           
  4086                           ; 1 bytes @ 0x2
  4087  005D                     	ds	2
  4088                           
  4089                           	psect	maintext
  4090  00C8                     __pmaintext:	
  4091 ;;
  4092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4093 ;;
  4094 ;; *************** function _main *****************
  4095 ;; Defined at:
  4096 ;;		line 131 in file "main.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : B1F/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;Total ram usage:        2 bytes
  4115 ;; Hardware stack levels required when called:    7
  4116 ;; This function calls:
  4117 ;;		_EUSART_SetRxInterruptHandler
  4118 ;;		_SYSTEM_Initialize
  4119 ;;		_TMR2_SetInterruptHandler
  4120 ;;		_TMR2_StartTimer
  4121 ;;		_TMR2_WriteTimer
  4122 ;; This function is called by:
  4123 ;;		Startup code after reset
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function _main
  4129  00C8                     _main:	
  4130                           
  4131                           ;main.c: 132: SYSTEM_Initialize();
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  4135  00C8  3182  2252  3180   	fcall	_SYSTEM_Initialize
  4136                           
  4137                           ;main.c: 134: do { LATAbits.LATA5 = 1; } while(0);
  4138  00CB  0022               	movlb	2	; select bank2
  4139  00CC  168C               	bsf	12,5	;volatile
  4140                           
  4141                           ;main.c: 141: TMR2_SetInterruptHandler(MyTimer2ISR);
  4142  00CD  30BE               	movlw	low _MyTimer2ISR
  4143  00CE  0020               	movlb	0	; select bank0
  4144  00CF  00DB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4145  00D0  3001               	movlw	high _MyTimer2ISR
  4146  00D1  00DC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4147  00D2  3182  22A0  3180   	fcall	_TMR2_SetInterruptHandler
  4148                           
  4149                           ;main.c: 142: TMR2_WriteTimer(255);
  4150  00D5  30FF               	movlw	255
  4151  00D6  3182  229A  3180   	fcall	_TMR2_WriteTimer
  4152                           
  4153                           ;main.c: 143: TMR2_StartTimer();
  4154  00D9  3182  22C7  3180   	fcall	_TMR2_StartTimer
  4155                           
  4156                           ;main.c: 145: EUSART_SetRxInterruptHandler(MyUART_ISR);
  4157  00DC  3042               	movlw	low _MyUART_ISR
  4158  00DD  0020               	movlb	0	; select bank0
  4159  00DE  00DB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4160  00DF  3000               	movlw	high _MyUART_ISR
  4161  00E0  00DC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4162  00E1  3182  22A6  3180   	fcall	_EUSART_SetRxInterruptHandler
  4163                           
  4164                           ;main.c: 147: (INTCONbits.PEIE = 1);
  4165  00E4  170B               	bsf	11,6	;volatile
  4166                           
  4167                           ;main.c: 148: (INTCONbits.GIE = 1);
  4168  00E5  178B               	bsf	11,7	;volatile
  4169  00E6  28FF               	goto	l2423
  4170  00E7                     l2425:	
  4171                           ;main.c: 152: do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4172                           
  4173  00E7  1003               	clrc
  4174  00E8  0022               	movlb	2	; select bank2
  4175  00E9  1E8C               	btfss	12,5	;volatile
  4176  00EA  1403               	setc
  4177  00EB  1C03               	btfss	3,0
  4178  00EC  28F0               	goto	u930
  4179  00ED  0022               	movlb	2	; select bank2
  4180  00EE  168C               	bsf	12,5	;volatile
  4181  00EF  28F2               	goto	l2427
  4182  00F0                     u930:	
  4183  00F0  0022               	movlb	2	; select bank2
  4184  00F1  128C               	bcf	12,5	;volatile
  4185  00F2                     l2427:	
  4186                           
  4187                           ;main.c: 153: _delay((unsigned long)((500)*(4000000/4000.0)));
  4188  00F2  3003               	movlw	3
  4189  00F3  0020               	movlb	0	; select bank0
  4190  00F4  00DE               	movwf	??_main+1
  4191  00F5  308A               	movlw	138
  4192  00F6  00DD               	movwf	??_main
  4193  00F7  3055               	movlw	85
  4194  00F8                     u987:	
  4195  00F8  0B89               	decfsz	9,f
  4196  00F9  28F8               	goto	u987
  4197  00FA  0BDD               	decfsz	??_main,f
  4198  00FB  28F8               	goto	u987
  4199  00FC  0BDE               	decfsz	??_main+1,f
  4200  00FD  28F8               	goto	u987
  4201  00FE  3200               	nop2
  4202  00FF                     l2423:	
  4203                           ;main.c: 150: while (1) {
  4204                           
  4205                           ;main.c: 154: } else {
  4206                           
  4207                           
  4208                           ;main.c: 151: if(Validation) {
  4209  00FF  087C               	movf	_Validation,w
  4210  0100  1D03               	btfss	3,2
  4211  0101  28E7               	goto	l2425
  4212                           
  4213                           ;main.c: 155: if(PORTAbits.RA4) {
  4214  0102  0020               	movlb	0	; select bank0
  4215  0103  1E0C               	btfss	12,4	;volatile
  4216  0104  2908               	goto	l2429
  4217                           
  4218                           ;main.c: 156: do { LATAbits.LATA5 = 1; } while(0);
  4219  0105  0022               	movlb	2	; select bank2
  4220  0106  168C               	bsf	12,5	;volatile
  4221                           
  4222                           ;main.c: 157: } else {
  4223  0107  28FF               	goto	l2423
  4224  0108                     l2429:	
  4225                           ;main.c: 158: do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4226                           
  4227  0108  1003               	clrc
  4228  0109  0022               	movlb	2	; select bank2
  4229  010A  1E8C               	btfss	12,5	;volatile
  4230  010B  1403               	setc
  4231  010C  1C03               	btfss	3,0
  4232  010D  2911               	goto	u960
  4233  010E  0022               	movlb	2	; select bank2
  4234  010F  168C               	bsf	12,5	;volatile
  4235  0110  2913               	goto	l2431
  4236  0111                     u960:	
  4237  0111  0022               	movlb	2	; select bank2
  4238  0112  128C               	bcf	12,5	;volatile
  4239  0113                     l2431:	
  4240                           
  4241                           ;main.c: 159: _delay((unsigned long)((100)*(4000000/4000.0)));
  4242  0113  3082               	movlw	130
  4243  0114  0020               	movlb	0	; select bank0
  4244  0115  00DD               	movwf	??_main
  4245  0116  30DD               	movlw	221
  4246  0117                     u997:	
  4247  0117  0B89               	decfsz	9,f
  4248  0118  2917               	goto	u997
  4249  0119  0BDD               	decfsz	??_main,f
  4250  011A  2917               	goto	u997
  4251  011B  3200               	nop2
  4252  011C  28FF               	goto	l2423
  4253  011D                     __end_of_main:	
  4254                           
  4255                           	psect	text1
  4256  029A                     __ptext1:	
  4257 ;; *************** function _TMR2_WriteTimer *****************
  4258 ;; Defined at:
  4259 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  timerVal        1    wreg     unsigned char 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  timerVal        1    1[BANK0 ] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;Total ram usage:        1 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    5
  4280 ;; This function calls:
  4281 ;;		_TMR2_Counter8BitSet
  4282 ;; This function is called by:
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function _TMR2_WriteTimer
  4289  029A                     _TMR2_WriteTimer:	
  4290                           
  4291                           ;incstack = 0
  4292                           ; Regs used in _TMR2_WriteTimer: [wreg+status,2+status,0+pclath+cstack]
  4293                           ;TMR2_WriteTimer@timerVal stored from wreg
  4294  029A  0020               	movlb	0	; select bank0
  4295  029B  00DC               	movwf	TMR2_WriteTimer@timerVal
  4296                           
  4297                           ;tmr2.c: 152: TMR2_Counter8BitSet(timerVal);
  4298  029C  085C               	movf	TMR2_WriteTimer@timerVal,w
  4299  029D  3182  22BE         	fcall	_TMR2_Counter8BitSet
  4300  029F  0008               	return
  4301  02A0                     __end_of_TMR2_WriteTimer:	
  4302                           
  4303                           	psect	text2
  4304  02BE                     __ptext2:	
  4305 ;; *************** function _TMR2_Counter8BitSet *****************
  4306 ;; Defined at:
  4307 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  timerVal        1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  timerVal        1    0[BANK0 ] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    4
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_TMR2_WriteTimer
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _TMR2_Counter8BitSet
  4337  02BE                     _TMR2_Counter8BitSet:	
  4338                           
  4339                           ;incstack = 0
  4340                           ; Regs used in _TMR2_Counter8BitSet: [wreg]
  4341                           ;TMR2_Counter8BitSet@timerVal stored from wreg
  4342  02BE  0020               	movlb	0	; select bank0
  4343  02BF  00DB               	movwf	TMR2_Counter8BitSet@timerVal
  4344                           
  4345                           ;tmr2.c: 147: TMR2 = timerVal;
  4346  02C0  085B               	movf	TMR2_Counter8BitSet@timerVal,w
  4347  02C1  009A               	movwf	26	;volatile
  4348  02C2  0008               	return
  4349  02C3                     __end_of_TMR2_Counter8BitSet:	
  4350                           
  4351                           	psect	text3
  4352  02C7                     __ptext3:	
  4353 ;; *************** function _TMR2_StartTimer *****************
  4354 ;; Defined at:
  4355 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    5
  4376 ;; This function calls:
  4377 ;;		_TMR2_Start
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           
  4384                           ;psect for function _TMR2_StartTimer
  4385  02C7                     _TMR2_StartTimer:	
  4386                           
  4387                           ;tmr2.c: 116: TMR2_Start();
  4388                           
  4389                           ;incstack = 0
  4390                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
  4391  02C7  3182  22CA         	fcall	_TMR2_Start
  4392  02C9  0008               	return
  4393  02CA                     __end_of_TMR2_StartTimer:	
  4394                           
  4395                           	psect	text4
  4396  02CA                     __ptext4:	
  4397 ;; *************** function _TMR2_Start *****************
  4398 ;; Defined at:
  4399 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		None
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    4
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_TMR2_StartTimer
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _TMR2_Start
  4429  02CA                     _TMR2_Start:	
  4430                           
  4431                           ;tmr2.c: 111: T2CONbits.TMR2ON = 1;
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _TMR2_Start: []
  4435  02CA  0020               	movlb	0	; select bank0
  4436  02CB  179C               	bsf	28,7	;volatile
  4437  02CC  0008               	return
  4438  02CD                     __end_of_TMR2_Start:	
  4439                           
  4440                           	psect	text5
  4441  0252                     __ptext5:	
  4442 ;; *************** function _SYSTEM_Initialize *****************
  4443 ;; Defined at:
  4444 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;Total ram usage:        0 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    6
  4465 ;; This function calls:
  4466 ;;		_EUSART_Initialize
  4467 ;;		_I2C_Initialize
  4468 ;;		_OSCILLATOR_Initialize
  4469 ;;		_PIN_MANAGER_Initialize
  4470 ;;		_PWM3_Initialize
  4471 ;;		_TMR2_Initialize
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           
  4478                           ;psect for function _SYSTEM_Initialize
  4479  0252                     _SYSTEM_Initialize:	
  4480                           
  4481                           ;mcc.c: 52: I2C_Initialize();
  4482                           
  4483                           ;incstack = 0
  4484                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4485  0252  3182  227B  3182   	fcall	_I2C_Initialize
  4486                           
  4487                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  4488  0255  3181  211D  3182   	fcall	_PIN_MANAGER_Initialize
  4489                           
  4490                           ;mcc.c: 54: OSCILLATOR_Initialize();
  4491  0258  3182  228D  3182   	fcall	_OSCILLATOR_Initialize
  4492                           
  4493                           ;mcc.c: 55: PWM3_Initialize();
  4494  025B  3182  2270  3182   	fcall	_PWM3_Initialize
  4495                           
  4496                           ;mcc.c: 56: TMR2_Initialize();
  4497  025E  3182  223D  3182   	fcall	_TMR2_Initialize
  4498                           
  4499                           ;mcc.c: 57: EUSART_Initialize();
  4500  0261  3181  2158         	fcall	_EUSART_Initialize
  4501  0263  0008               	return
  4502  0264                     __end_of_SYSTEM_Initialize:	
  4503                           
  4504                           	psect	text6
  4505  023D                     __ptext6:	
  4506 ;; *************** function _TMR2_Initialize *****************
  4507 ;; Defined at:
  4508 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, pclath, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    5
  4529 ;; This function calls:
  4530 ;;		_TMR2_SetInterruptHandler
  4531 ;; This function is called by:
  4532 ;;		_SYSTEM_Initialize
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _TMR2_Initialize
  4538  023D                     _TMR2_Initialize:	
  4539                           
  4540                           ;tmr2.c: 69: T2CLKCON = 0x00;
  4541                           
  4542                           ;incstack = 0
  4543                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4544  023D  0020               	movlb	0	; select bank0
  4545  023E  019E               	clrf	30	;volatile
  4546                           
  4547                           ;tmr2.c: 72: T2HLT = 0x00;
  4548  023F  019D               	clrf	29	;volatile
  4549                           
  4550                           ;tmr2.c: 75: T2RST = 0x00;
  4551  0240  019F               	clrf	31	;volatile
  4552                           
  4553                           ;tmr2.c: 78: T2PR = 0x9B;
  4554  0241  309B               	movlw	155
  4555  0242  009B               	movwf	27	;volatile
  4556                           
  4557                           ;tmr2.c: 81: T2TMR = 0x00;
  4558  0243  019A               	clrf	26	;volatile
  4559                           
  4560                           ;tmr2.c: 84: PIR1bits.TMR2IF = 0;
  4561  0244  1090               	bcf	16,1	;volatile
  4562                           
  4563                           ;tmr2.c: 87: PIE1bits.TMR2IE = 1;
  4564  0245  0021               	movlb	1	; select bank1
  4565  0246  1490               	bsf	16,1	;volatile
  4566                           
  4567                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  4568  0247  30D3               	movlw	low _TMR2_DefaultInterruptHandler
  4569  0248  0020               	movlb	0	; select bank0
  4570  0249  00DB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4571  024A  3002               	movlw	high _TMR2_DefaultInterruptHandler
  4572  024B  00DC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4573  024C  3182  22A0         	fcall	_TMR2_SetInterruptHandler
  4574                           
  4575                           ;tmr2.c: 93: T2CON = 0xF0;
  4576  024E  30F0               	movlw	240
  4577  024F  0020               	movlb	0	; select bank0
  4578  0250  009C               	movwf	28	;volatile
  4579  0251  0008               	return
  4580  0252                     __end_of_TMR2_Initialize:	
  4581                           
  4582                           	psect	text7
  4583  02A0                     __ptext7:	
  4584 ;; *************** function _TMR2_SetInterruptHandler *****************
  4585 ;; Defined at:
  4586 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4589 ;;		 -> MyTimer2ISR(1), TMR2_DefaultInterruptHandler(1), 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;Total ram usage:        2 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    4
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_TMR2_Initialize
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function _TMR2_SetInterruptHandler
  4618  02A0                     _TMR2_SetInterruptHandler:	
  4619                           
  4620                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  4624  02A0  0020               	movlb	0	; select bank0
  4625  02A1  085C               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  4626  02A2  00D2               	movwf	_TMR2_InterruptHandler+1
  4627  02A3  085B               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  4628  02A4  00D1               	movwf	_TMR2_InterruptHandler
  4629  02A5  0008               	return
  4630  02A6                     __end_of_TMR2_SetInterruptHandler:	
  4631                           
  4632                           	psect	text8
  4633  0270                     __ptext8:	
  4634 ;; *************** function _PWM3_Initialize *****************
  4635 ;; Defined at:
  4636 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    4
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_SYSTEM_Initialize
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _PWM3_Initialize
  4666  0270                     _PWM3_Initialize:	
  4667                           
  4668                           ;pwm3.c: 62: PWM3CON = 0x80;
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  4672  0270  3080               	movlw	128
  4673  0271  002C               	movlb	12	; select bank12
  4674  0272  0099               	movwf	25	;volatile
  4675                           
  4676                           ;pwm3.c: 65: PWM3DCH = 0x0F;
  4677  0273  300F               	movlw	15
  4678  0274  0098               	movwf	24	;volatile
  4679                           
  4680                           ;pwm3.c: 68: PWM3DCL = 0x40;
  4681  0275  3040               	movlw	64
  4682  0276  0097               	movwf	23	;volatile
  4683                           
  4684                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0;
  4685  0277  30CF               	movlw	-49
  4686  0278  0025               	movlb	5	; select bank5
  4687  0279  059E               	andwf	30,f	;volatile
  4688  027A  0008               	return
  4689  027B                     __end_of_PWM3_Initialize:	
  4690                           
  4691                           	psect	text9
  4692  011D                     __ptext9:	
  4693 ;; *************** function _PIN_MANAGER_Initialize *****************
  4694 ;; Defined at:
  4695 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;Total ram usage:        0 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    4
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_SYSTEM_Initialize
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           
  4724                           ;psect for function _PIN_MANAGER_Initialize
  4725  011D                     _PIN_MANAGER_Initialize:	
  4726                           
  4727                           ;pin_manager.c: 60: LATA = 0x00;
  4728                           
  4729                           ;incstack = 0
  4730                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4731  011D  0022               	movlb	2	; select bank2
  4732  011E  018C               	clrf	12	;volatile
  4733                           
  4734                           ;pin_manager.c: 61: LATB = 0x00;
  4735  011F  018D               	clrf	13	;volatile
  4736                           
  4737                           ;pin_manager.c: 62: LATC = 0x00;
  4738  0120  018E               	clrf	14	;volatile
  4739                           
  4740                           ;pin_manager.c: 67: TRISA = 0x13;
  4741  0121  3013               	movlw	19
  4742  0122  0021               	movlb	1	; select bank1
  4743  0123  008C               	movwf	12	;volatile
  4744                           
  4745                           ;pin_manager.c: 68: TRISB = 0x70;
  4746  0124  3070               	movlw	112
  4747  0125  008D               	movwf	13	;volatile
  4748                           
  4749                           ;pin_manager.c: 69: TRISC = 0xFF;
  4750  0126  30FF               	movlw	255
  4751  0127  008E               	movwf	14	;volatile
  4752                           
  4753                           ;pin_manager.c: 74: ANSELC = 0x8E;
  4754  0128  308E               	movlw	142
  4755  0129  0023               	movlb	3	; select bank3
  4756  012A  008E               	movwf	14	;volatile
  4757                           
  4758                           ;pin_manager.c: 75: ANSELB = 0x00;
  4759  012B  018D               	clrf	13	;volatile
  4760                           
  4761                           ;pin_manager.c: 76: ANSELA = 0x01;
  4762  012C  3001               	movlw	1
  4763  012D  008C               	movwf	12	;volatile
  4764                           
  4765                           ;pin_manager.c: 81: WPUB = 0x00;
  4766  012E  0024               	movlb	4	; select bank4
  4767  012F  018D               	clrf	13	;volatile
  4768                           
  4769                           ;pin_manager.c: 82: WPUA = 0x00;
  4770  0130  018C               	clrf	12	;volatile
  4771                           
  4772                           ;pin_manager.c: 83: WPUC = 0x00;
  4773  0131  018E               	clrf	14	;volatile
  4774                           
  4775                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 1;
  4776  0132  0021               	movlb	1	; select bank1
  4777  0133  1795               	bsf	21,7	;volatile
  4778                           
  4779                           ;pin_manager.c: 89: ODCONA = 0x00;
  4780  0134  0025               	movlb	5	; select bank5
  4781  0135  018C               	clrf	12	;volatile
  4782                           
  4783                           ;pin_manager.c: 90: ODCONB = 0x00;
  4784  0136  018D               	clrf	13	;volatile
  4785                           
  4786                           ;pin_manager.c: 91: ODCONC = 0x00;
  4787  0137  018E               	clrf	14	;volatile
  4788                           
  4789                           ;pin_manager.c: 96: SLRCONA = 0x37;
  4790  0138  3037               	movlw	55
  4791  0139  0026               	movlb	6	; select bank6
  4792  013A  008C               	movwf	12	;volatile
  4793                           
  4794                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  4795  013B  30F0               	movlw	240
  4796  013C  008D               	movwf	13	;volatile
  4797                           
  4798                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  4799  013D  30FF               	movlw	255
  4800  013E  008E               	movwf	14	;volatile
  4801                           
  4802                           ;pin_manager.c: 103: INLVLA = 0x3F;
  4803  013F  303F               	movlw	63
  4804  0140  0027               	movlb	7	; select bank7
  4805  0141  008C               	movwf	12	;volatile
  4806                           
  4807                           ;pin_manager.c: 104: INLVLB = 0xF0;
  4808  0142  30F0               	movlw	240
  4809  0143  008D               	movwf	13	;volatile
  4810                           
  4811                           ;pin_manager.c: 105: INLVLC = 0xFF;
  4812  0144  30FF               	movlw	255
  4813  0145  008E               	movwf	14	;volatile
  4814                           
  4815                           ;pin_manager.c: 114: RXPPS = 0x0D;
  4816  0146  300D               	movlw	13
  4817  0147  003C               	movlb	28	; select bank28
  4818  0148  00A4               	movwf	36	;volatile
  4819                           
  4820                           ;pin_manager.c: 115: SSPDATPPS = 0x0C;
  4821  0149  300C               	movlw	12
  4822  014A  00A1               	movwf	33	;volatile
  4823                           
  4824                           ;pin_manager.c: 116: RB6PPS = 0x10;
  4825  014B  3010               	movlw	16
  4826  014C  003D               	movlb	29	; select bank29
  4827  014D  009E               	movwf	30	;volatile
  4828                           
  4829                           ;pin_manager.c: 117: RB7PPS = 0x12;
  4830  014E  3012               	movlw	18
  4831  014F  009F               	movwf	31	;volatile
  4832                           
  4833                           ;pin_manager.c: 118: RB4PPS = 0x11;
  4834  0150  3011               	movlw	17
  4835  0151  009C               	movwf	28	;volatile
  4836                           
  4837                           ;pin_manager.c: 119: RA2PPS = 0x0E;
  4838  0152  300E               	movlw	14
  4839  0153  0092               	movwf	18	;volatile
  4840                           
  4841                           ;pin_manager.c: 120: SSPCLKPPS = 0x0E;
  4842  0154  300E               	movlw	14
  4843  0155  003C               	movlb	28	; select bank28
  4844  0156  00A0               	movwf	32	;volatile
  4845  0157  0008               	return
  4846  0158                     __end_of_PIN_MANAGER_Initialize:	
  4847                           
  4848                           	psect	text10
  4849  028D                     __ptext10:	
  4850 ;; *************** function _OSCILLATOR_Initialize *****************
  4851 ;; Defined at:
  4852 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    4
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_SYSTEM_Initialize
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _OSCILLATOR_Initialize
  4882  028D                     _OSCILLATOR_Initialize:	
  4883                           
  4884                           ;mcc.c: 63: OSCCON = 0x6A;
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4888  028D  306A               	movlw	106
  4889  028E  0021               	movlb	1	; select bank1
  4890  028F  0099               	movwf	25	;volatile
  4891                           
  4892                           ;mcc.c: 65: OSCTUNE = 0x00;
  4893  0290  0198               	clrf	24	;volatile
  4894                           
  4895                           ;mcc.c: 67: BORCON = 0x00;
  4896  0291  0022               	movlb	2	; select bank2
  4897  0292  0196               	clrf	22	;volatile
  4898  0293  0008               	return
  4899  0294                     __end_of_OSCILLATOR_Initialize:	
  4900                           
  4901                           	psect	text11
  4902  027B                     __ptext11:	
  4903 ;; *************** function _I2C_Initialize *****************
  4904 ;; Defined at:
  4905 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    4
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_SYSTEM_Initialize
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _I2C_Initialize
  4935  027B                     _I2C_Initialize:	
  4936                           
  4937                           ;i2c_master.c: 169: SSP1STAT = 0x80;
  4938                           
  4939                           ;incstack = 0
  4940                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4941  027B  3080               	movlw	128
  4942  027C  0024               	movlb	4	; select bank4
  4943  027D  0094               	movwf	20	;volatile
  4944                           
  4945                           ;i2c_master.c: 170: SSP1CON1 = 0x08;
  4946  027E  3008               	movlw	8
  4947  027F  0095               	movwf	21	;volatile
  4948                           
  4949                           ;i2c_master.c: 171: SSP1CON2 = 0x00;
  4950  0280  0196               	clrf	22	;volatile
  4951                           
  4952                           ;i2c_master.c: 172: SSP1ADD = 0x09;
  4953  0281  3009               	movlw	9
  4954  0282  0092               	movwf	18	;volatile
  4955                           
  4956                           ;i2c_master.c: 173: SSP1CON1bits.SSPEN = 0;
  4957  0283  1295               	bcf	21,5	;volatile
  4958  0284  0008               	return
  4959  0285                     __end_of_I2C_Initialize:	
  4960                           
  4961                           	psect	text12
  4962  0158                     __ptext12:	
  4963 ;; *************** function _EUSART_Initialize *****************
  4964 ;; Defined at:
  4965 ;;		line 83 in file "mcc_generated_files/eusart.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, pclath, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    5
  4986 ;; This function calls:
  4987 ;;		_EUSART_SetErrorHandler
  4988 ;;		_EUSART_SetFramingErrorHandler
  4989 ;;		_EUSART_SetOverrunErrorHandler
  4990 ;;		_EUSART_SetRxInterruptHandler
  4991 ;; This function is called by:
  4992 ;;		_SYSTEM_Initialize
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _EUSART_Initialize
  4998  0158                     _EUSART_Initialize:	
  4999                           
  5000                           ;eusart.c: 86: PIE1bits.RCIE = 0;
  5001                           
  5002                           ;incstack = 0
  5003                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5004  0158  0021               	movlb	1	; select bank1
  5005  0159  1290               	bcf	16,5	;volatile
  5006                           
  5007                           ;eusart.c: 87: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  5008  015A  308B               	movlw	low _EUSART_Receive_ISR
  5009  015B  0020               	movlb	0	; select bank0
  5010  015C  00DB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  5011  015D  3001               	movlw	high _EUSART_Receive_ISR
  5012  015E  00DC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  5013  015F  3182  22A6  3181   	fcall	_EUSART_SetRxInterruptHandler
  5014                           
  5015                           ;eusart.c: 91: BAUD1CON = 0x09;
  5016  0162  3009               	movlw	9
  5017  0163  0023               	movlb	3	; select bank3
  5018  0164  009F               	movwf	31	;volatile
  5019                           
  5020                           ;eusart.c: 94: RC1STA = 0x90;
  5021  0165  3090               	movlw	144
  5022  0166  009D               	movwf	29	;volatile
  5023                           
  5024                           ;eusart.c: 97: TX1STA = 0x24;
  5025  0167  3024               	movlw	36
  5026  0168  009E               	movwf	30	;volatile
  5027                           
  5028                           ;eusart.c: 100: SPBRGL = 0x67;
  5029  0169  3067               	movlw	103
  5030  016A  009B               	movwf	27	;volatile
  5031                           
  5032                           ;eusart.c: 103: SPBRGH = 0x00;
  5033  016B  019C               	clrf	28	;volatile
  5034                           
  5035                           ;eusart.c: 106: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  5036  016C  30D4               	movlw	low _EUSART_DefaultFramingErrorHandler
  5037  016D  0020               	movlb	0	; select bank0
  5038  016E  00DB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5039  016F  3002               	movlw	high _EUSART_DefaultFramingErrorHandler
  5040  0170  00DC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5041  0171  3182  22B2  3181   	fcall	_EUSART_SetFramingErrorHandler
  5042                           
  5043                           ;eusart.c: 107: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  5044  0174  30C3               	movlw	low _EUSART_DefaultOverrunErrorHandler
  5045  0175  0020               	movlb	0	; select bank0
  5046  0176  00DB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5047  0177  3002               	movlw	high _EUSART_DefaultOverrunErrorHandler
  5048  0178  00DC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5049  0179  3182  22AC  3181   	fcall	_EUSART_SetOverrunErrorHandler
  5050                           
  5051                           ;eusart.c: 108: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  5052  017C  30CD               	movlw	low _EUSART_DefaultErrorHandler
  5053  017D  0020               	movlb	0	; select bank0
  5054  017E  00DB               	movwf	EUSART_SetErrorHandler@interruptHandler
  5055  017F  3002               	movlw	high _EUSART_DefaultErrorHandler
  5056  0180  00DC               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5057  0181  3182  22B8         	fcall	_EUSART_SetErrorHandler
  5058                           
  5059                           ;eusart.c: 110: eusartRxLastError.status = 0;
  5060  0183  0020               	movlb	0	; select bank0
  5061  0184  01CF               	clrf	_eusartRxLastError	;volatile
  5062                           
  5063                           ;eusart.c: 113: eusartRxHead = 0;
  5064  0185  01D0               	clrf	_eusartRxHead	;volatile
  5065                           
  5066                           ;eusart.c: 114: eusartRxTail = 0;
  5067  0186  01FB               	clrf	_eusartRxTail	;volatile
  5068                           
  5069                           ;eusart.c: 115: eusartRxCount = 0;
  5070  0187  01FA               	clrf	_eusartRxCount	;volatile
  5071                           
  5072                           ;eusart.c: 118: PIE1bits.RCIE = 1;
  5073  0188  0021               	movlb	1	; select bank1
  5074  0189  1690               	bsf	16,5	;volatile
  5075  018A  0008               	return
  5076  018B                     __end_of_EUSART_Initialize:	
  5077                           
  5078                           	psect	text13
  5079  02A6                     __ptext13:	
  5080 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5081 ;; Defined at:
  5082 ;;		line 234 in file "mcc_generated_files/eusart.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5085 ;;		 -> MyUART_ISR(1), EUSART_Receive_ISR(1), 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;Total ram usage:        2 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    4
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_EUSART_Initialize
  5108 ;;		_main
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           
  5113                           ;psect for function _EUSART_SetRxInterruptHandler
  5114  02A6                     _EUSART_SetRxInterruptHandler:	
  5115                           
  5116                           ;eusart.c: 235: EUSART_RxDefaultInterruptHandler = interruptHandler;
  5117                           
  5118                           ;incstack = 0
  5119                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5120  02A6  0020               	movlb	0	; select bank0
  5121  02A7  085C               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  5122  02A8  00DA               	movwf	_EUSART_RxDefaultInterruptHandler+1
  5123  02A9  085B               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  5124  02AA  00D9               	movwf	_EUSART_RxDefaultInterruptHandler
  5125  02AB  0008               	return
  5126  02AC                     __end_of_EUSART_SetRxInterruptHandler:	
  5127                           
  5128                           	psect	text14
  5129  02AC                     __ptext14:	
  5130 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5131 ;; Defined at:
  5132 ;;		line 225 in file "mcc_generated_files/eusart.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5135 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        2 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    4
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_EUSART_Initialize
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _EUSART_SetOverrunErrorHandler
  5163  02AC                     _EUSART_SetOverrunErrorHandler:	
  5164                           
  5165                           ;eusart.c: 226: EUSART_OverrunErrorHandler = interruptHandler;
  5166                           
  5167                           ;incstack = 0
  5168                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5169  02AC  0020               	movlb	0	; select bank0
  5170  02AD  085C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5171  02AE  00D6               	movwf	_EUSART_OverrunErrorHandler+1
  5172  02AF  085B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5173  02B0  00D5               	movwf	_EUSART_OverrunErrorHandler
  5174  02B1  0008               	return
  5175  02B2                     __end_of_EUSART_SetOverrunErrorHandler:	
  5176                           
  5177                           	psect	text15
  5178  02B2                     __ptext15:	
  5179 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5180 ;; Defined at:
  5181 ;;		line 221 in file "mcc_generated_files/eusart.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5184 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;Total ram usage:        2 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    4
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_EUSART_Initialize
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function _EUSART_SetFramingErrorHandler
  5212  02B2                     _EUSART_SetFramingErrorHandler:	
  5213                           
  5214                           ;eusart.c: 222: EUSART_FramingErrorHandler = interruptHandler;
  5215                           
  5216                           ;incstack = 0
  5217                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5218  02B2  0020               	movlb	0	; select bank0
  5219  02B3  085C               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5220  02B4  00D8               	movwf	_EUSART_FramingErrorHandler+1
  5221  02B5  085B               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5222  02B6  00D7               	movwf	_EUSART_FramingErrorHandler
  5223  02B7  0008               	return
  5224  02B8                     __end_of_EUSART_SetFramingErrorHandler:	
  5225                           
  5226                           	psect	text16
  5227  02B8                     __ptext16:	
  5228 ;; *************** function _EUSART_SetErrorHandler *****************
  5229 ;; Defined at:
  5230 ;;		line 229 in file "mcc_generated_files/eusart.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5233 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5245 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;Total ram usage:        2 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    4
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_EUSART_Initialize
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           
  5260                           ;psect for function _EUSART_SetErrorHandler
  5261  02B8                     _EUSART_SetErrorHandler:	
  5262                           
  5263                           ;eusart.c: 230: EUSART_ErrorHandler = interruptHandler;
  5264                           
  5265                           ;incstack = 0
  5266                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5267  02B8  0020               	movlb	0	; select bank0
  5268  02B9  085C               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5269  02BA  00D4               	movwf	_EUSART_ErrorHandler+1
  5270  02BB  085B               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5271  02BC  00D3               	movwf	_EUSART_ErrorHandler
  5272  02BD  0008               	return
  5273  02BE                     __end_of_EUSART_SetErrorHandler:	
  5274                           
  5275                           	psect	intentry
  5276  0004                     __pintentry:	
  5277 ;; *************** function _INTERRUPT_InterruptManager *****************
  5278 ;; Defined at:
  5279 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;Total ram usage:        1 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:    3
  5300 ;; This function calls:
  5301 ;;		Absolute function
  5302 ;;		_EUSART_Receive_ISR
  5303 ;;		_MyUART_ISR
  5304 ;;		_TMR2_ISR
  5305 ;; This function is called by:
  5306 ;;		Interrupt level 1
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310  0004                     _INTERRUPT_InterruptManager:	
  5311                           
  5312                           ;incstack = 0
  5313  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5314                           
  5315                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5316  0005  3180               	pagesel	$
  5317  0006  0020               	movlb	0	; select bank0
  5318  0007  087F               	movf	127,w
  5319  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  5320                           
  5321                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  5322  0009  1F0B               	btfss	11,6	;volatile
  5323  000A  281F               	goto	i1l123
  5324                           
  5325                           ;interrupt_manager.c: 56: {
  5326                           ;interrupt_manager.c: 57: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  5327  000B  0021               	movlb	1	; select bank1
  5328  000C  1E90               	btfss	16,5	;volatile
  5329  000D  2817               	goto	i1l118
  5330  000E  0020               	movlb	0	; select bank0
  5331  000F  1E90               	btfss	16,5	;volatile
  5332  0010  2817               	goto	i1l118
  5333                           
  5334                           ;interrupt_manager.c: 58: {
  5335                           ;interrupt_manager.c: 59: EUSART_RxDefaultInterruptHandler();
  5336  0011  085A               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5337  0012  008A               	movwf	10
  5338  0013  0859               	movf	_EUSART_RxDefaultInterruptHandler,w
  5339  0014  000A               	callw
  5340  0015  3180               	pagesel	$
  5341                           
  5342                           ;interrupt_manager.c: 60: }
  5343  0016  281F               	goto	i1l123
  5344  0017                     i1l118:	
  5345                           
  5346                           ;interrupt_manager.c: 61: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  5347  0017  0021               	movlb	1	; select bank1
  5348  0018  1C90               	btfss	16,1	;volatile
  5349  0019  281F               	goto	i1l123
  5350  001A  0020               	movlb	0	; select bank0
  5351  001B  1C90               	btfss	16,1	;volatile
  5352  001C  281F               	goto	i1l123
  5353                           
  5354                           ;interrupt_manager.c: 62: {
  5355                           ;interrupt_manager.c: 63: TMR2_ISR();
  5356  001D  3182  2264         	fcall	_TMR2_ISR
  5357  001F                     i1l123:	
  5358                           ;interrupt_manager.c: 70: else
  5359                           ;interrupt_manager.c: 71: {
  5360                           
  5361                           ;interrupt_manager.c: 68: }
  5362                           ;interrupt_manager.c: 69: }
  5363                           
  5364                           ;interrupt_manager.c: 65: else
  5365                           ;interrupt_manager.c: 66: {
  5366                           
  5367                           ;interrupt_manager.c: 64: }
  5368                           
  5369  001F  0876               	movf	??_INTERRUPT_InterruptManager,w
  5370  0020  0020               	movlb	0	; select bank0
  5371  0021  00FF               	movwf	127
  5372  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5373  0023  0009               	retfie
  5374  0024                     __end_of_INTERRUPT_InterruptManager:	
  5375                           
  5376                           	psect	text18
  5377  0264                     __ptext18:	
  5378 ;; *************** function _TMR2_ISR *****************
  5379 ;; Defined at:
  5380 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0, pclath, cstack
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    2
  5401 ;; This function calls:
  5402 ;;		Absolute function
  5403 ;;		_MyTimer2ISR
  5404 ;;		_TMR2_DefaultInterruptHandler
  5405 ;; This function is called by:
  5406 ;;		_INTERRUPT_InterruptManager
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function _TMR2_ISR
  5412  0264                     _TMR2_ISR:	
  5413                           
  5414                           ;tmr2.c: 169: PIR1bits.TMR2IF = 0;
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  5418  0264  0020               	movlb	0	; select bank0
  5419  0265  1090               	bcf	16,1	;volatile
  5420                           
  5421                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
  5422  0266  0851               	movf	_TMR2_InterruptHandler,w
  5423  0267  0452               	iorwf	_TMR2_InterruptHandler+1,w
  5424  0268  1903               	btfsc	3,2
  5425  0269  0008               	return
  5426                           
  5427                           ;tmr2.c: 172: {
  5428                           ;tmr2.c: 173: TMR2_InterruptHandler();
  5429  026A  0852               	movf	_TMR2_InterruptHandler+1,w
  5430  026B  008A               	movwf	10
  5431  026C  0851               	movf	_TMR2_InterruptHandler,w
  5432  026D  000A               	callw
  5433  026E  3182               	pagesel	$
  5434  026F  0008               	return
  5435  0270                     __end_of_TMR2_ISR:	
  5436                           
  5437                           	psect	text19
  5438  01BE                     __ptext19:	
  5439 ;; *************** function _MyTimer2ISR *****************
  5440 ;; Defined at:
  5441 ;;		line 56 in file "main.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      void 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0, pclath, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;Total ram usage:        2 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    1
  5462 ;; This function calls:
  5463 ;;		_EUSART_Write
  5464 ;;		_PWM3_LoadDutyValue
  5465 ;; This function is called by:
  5466 ;;		_main
  5467 ;;		_TMR2_ISR
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _MyTimer2ISR
  5473  01BE                     _MyTimer2ISR:	
  5474                           
  5475                           ;main.c: 62: PWM3_LoadDutyValue((uint8_t)(Angle/2)+20);
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in _MyTimer2ISR: [wreg+status,2+status,0+pclath+cstack]
  5479  01BE  0020               	movlb	0	; select bank0
  5480  01BF  0860               	movf	_Angle+1,w
  5481  01C0  00F5               	movwf	??_MyTimer2ISR+1
  5482  01C1  085F               	movf	_Angle,w
  5483  01C2  00F4               	movwf	??_MyTimer2ISR
  5484  01C3  36F5               	lsrf	??_MyTimer2ISR+1,f
  5485  01C4  0CF4               	rrf	??_MyTimer2ISR,f
  5486  01C5  0874               	movf	??_MyTimer2ISR,w
  5487  01C6  3E14               	addlw	20
  5488  01C7  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  5489  01C8  3000               	movlw	0
  5490  01C9  1803               	skipnc
  5491  01CA  3001               	movlw	1
  5492  01CB  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  5493  01CC  3182  2227  3181   	fcall	_PWM3_LoadDutyValue
  5494                           
  5495                           ;main.c: 63: if(PORTAbits.RA4) {
  5496  01CF  0020               	movlb	0	; select bank0
  5497  01D0  1E0C               	btfss	12,4	;volatile
  5498  01D1  29E4               	goto	i1l2153
  5499                           
  5500                           ;main.c: 64: EUSART_Write('B');
  5501  01D2  3042               	movlw	66
  5502  01D3  3182  2285  3181   	fcall	_EUSART_Write
  5503                           
  5504                           ;main.c: 65: EUSART_Write('1');
  5505  01D6  3031               	movlw	49
  5506  01D7  3182  2285  3181   	fcall	_EUSART_Write
  5507                           
  5508                           ;main.c: 66: EUSART_Write('s');
  5509  01DA  3073               	movlw	115
  5510  01DB  3182  2285  3181   	fcall	_EUSART_Write
  5511                           
  5512                           ;main.c: 67: if(Validation) {
  5513  01DE  087C               	movf	_Validation,w
  5514  01DF  1903               	btfsc	3,2
  5515  01E0  0008               	return
  5516                           
  5517                           ;main.c: 71: Validation--;
  5518  01E1  3001               	movlw	1
  5519  01E2  02FC               	subwf	_Validation,f
  5520                           
  5521                           ;main.c: 76: }
  5522                           ;main.c: 77: } else {
  5523                           
  5524                           ;main.c: 72: } else {
  5525  01E3  0008               	return
  5526  01E4                     i1l2153:	
  5527                           
  5528                           ;main.c: 78: EUSART_Write('B');
  5529  01E4  3042               	movlw	66
  5530  01E5  3182  2285  3181   	fcall	_EUSART_Write
  5531                           
  5532                           ;main.c: 79: EUSART_Write('0');
  5533  01E8  3030               	movlw	48
  5534  01E9  3182  2285  3181   	fcall	_EUSART_Write
  5535                           
  5536                           ;main.c: 80: EUSART_Write('r');
  5537  01EC  3072               	movlw	114
  5538  01ED  3182  2285         	fcall	_EUSART_Write
  5539  01EF  0008               	return
  5540  01F0                     __end_of_MyTimer2ISR:	
  5541                           
  5542                           	psect	text20
  5543  02D3                     __ptext20:	
  5544 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5545 ;; Defined at:
  5546 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;		None
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      void 
  5553 ;; Registers used:
  5554 ;;		None
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;Total ram usage:        0 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_TMR2_Initialize
  5570 ;;		_TMR2_ISR
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           
  5575                           ;psect for function _TMR2_DefaultInterruptHandler
  5576  02D3                     _TMR2_DefaultInterruptHandler:	
  5577                           
  5578                           ;incstack = 0
  5579                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5580  02D3  0008               	return
  5581  02D4                     __end_of_TMR2_DefaultInterruptHandler:	
  5582                           
  5583                           	psect	text21
  5584  0227                     __ptext21:	
  5585 ;; *************** function _PWM3_LoadDutyValue *****************
  5586 ;; Defined at:
  5587 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  dutyValue       2    0[COMMON] unsigned int 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      void 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;Total ram usage:        4 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_MyTimer2ISR
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           
  5615                           ;psect for function _PWM3_LoadDutyValue
  5616  0227                     _PWM3_LoadDutyValue:	
  5617                           
  5618                           ;pwm3.c: 77: PWM3DCH = (dutyValue & 0x03FC)>>2;
  5619                           
  5620                           ;incstack = 0
  5621                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5622  0227  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5623  0228  00F3               	movwf	??_PWM3_LoadDutyValue+1
  5624  0229  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5625  022A  00F2               	movwf	??_PWM3_LoadDutyValue
  5626  022B  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5627  022C  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5628  022D  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5629  022E  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5630  022F  0872               	movf	??_PWM3_LoadDutyValue,w
  5631  0230  002C               	movlb	12	; select bank12
  5632  0231  0098               	movwf	24	;volatile
  5633                           
  5634                           ;pwm3.c: 80: PWM3DCL = (dutyValue & 0x0003)<<6;
  5635  0232  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5636  0233  3903               	andlw	3
  5637  0234  00F2               	movwf	??_PWM3_LoadDutyValue
  5638  0235  3005               	movlw	5
  5639  0236                     u64_25:	
  5640  0236  35F2               	lslf	??_PWM3_LoadDutyValue,f
  5641  0237  3EFF               	addlw	-1
  5642  0238  1D03               	skipz
  5643  0239  2A36               	goto	u64_25
  5644  023A  3572               	lslf	??_PWM3_LoadDutyValue,w
  5645  023B  0097               	movwf	23	;volatile
  5646  023C  0008               	return
  5647  023D                     __end_of_PWM3_LoadDutyValue:	
  5648                           
  5649                           	psect	text22
  5650  018B                     __ptext22:	
  5651 ;; *************** function _EUSART_Receive_ISR *****************
  5652 ;; Defined at:
  5653 ;;		line 173 in file "mcc_generated_files/eusart.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;Total ram usage:        0 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    2
  5674 ;; This function calls:
  5675 ;;		Absolute function
  5676 ;;		_EUSART_DefaultErrorHandler
  5677 ;;		_EUSART_DefaultFramingErrorHandler
  5678 ;;		_EUSART_DefaultOverrunErrorHandler
  5679 ;;		_EUSART_RxDataHandler
  5680 ;; This function is called by:
  5681 ;;		_EUSART_Initialize
  5682 ;;		_INTERRUPT_InterruptManager
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           
  5687                           ;psect for function _EUSART_Receive_ISR
  5688  018B                     _EUSART_Receive_ISR:	
  5689                           
  5690                           ;eusart.c: 176: eusartRxStatusBuffer[eusartRxHead].status = 0;
  5691                           
  5692                           ;incstack = 0
  5693                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5694  018B  0020               	movlb	0	; select bank0
  5695  018C  0850               	movf	_eusartRxHead,w	;volatile
  5696  018D  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5697  018E  0086               	movwf	6
  5698  018F  0187               	clrf	7
  5699  0190  0181               	clrf	1
  5700                           
  5701                           ;eusart.c: 178: if(RC1STAbits.FERR){
  5702  0191  0023               	movlb	3	; select bank3
  5703  0192  1D1D               	btfss	29,2	;volatile
  5704  0193  299F               	goto	i1l2171
  5705                           
  5706                           ;eusart.c: 179: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5707  0194  0020               	movlb	0	; select bank0
  5708  0195  0850               	movf	_eusartRxHead,w	;volatile
  5709  0196  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5710  0197  0086               	movwf	6
  5711  0198  0187               	clrf	7
  5712  0199  1481               	bsf	1,1
  5713                           
  5714                           ;eusart.c: 180: EUSART_FramingErrorHandler();
  5715  019A  0858               	movf	_EUSART_FramingErrorHandler+1,w
  5716  019B  008A               	movwf	10
  5717  019C  0857               	movf	_EUSART_FramingErrorHandler,w
  5718  019D  000A               	callw
  5719  019E  3181               	pagesel	$
  5720  019F                     i1l2171:	
  5721                           
  5722                           ;eusart.c: 181: }
  5723                           ;eusart.c: 183: if(RC1STAbits.OERR){
  5724  019F  0023               	movlb	3	; select bank3
  5725  01A0  1C9D               	btfss	29,1	;volatile
  5726  01A1  29AD               	goto	i1l2177
  5727                           
  5728                           ;eusart.c: 184: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5729  01A2  0020               	movlb	0	; select bank0
  5730  01A3  0850               	movf	_eusartRxHead,w	;volatile
  5731  01A4  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5732  01A5  0086               	movwf	6
  5733  01A6  0187               	clrf	7
  5734  01A7  1501               	bsf	1,2
  5735                           
  5736                           ;eusart.c: 185: EUSART_OverrunErrorHandler();
  5737  01A8  0856               	movf	_EUSART_OverrunErrorHandler+1,w
  5738  01A9  008A               	movwf	10
  5739  01AA  0855               	movf	_EUSART_OverrunErrorHandler,w
  5740  01AB  000A               	callw
  5741  01AC  3181               	pagesel	$
  5742  01AD                     i1l2177:	
  5743                           
  5744                           ;eusart.c: 186: }
  5745                           ;eusart.c: 188: if(eusartRxStatusBuffer[eusartRxHead].status){
  5746  01AD  0020               	movlb	0	; select bank0
  5747  01AE  0850               	movf	_eusartRxHead,w	;volatile
  5748  01AF  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5749  01B0  0086               	movwf	6
  5750  01B1  0187               	clrf	7
  5751  01B2  0801               	movf	1,w
  5752  01B3  1903               	btfsc	3,2
  5753  01B4  29BB               	goto	i1l2181
  5754                           
  5755                           ;eusart.c: 189: EUSART_ErrorHandler();
  5756  01B5  0854               	movf	_EUSART_ErrorHandler+1,w
  5757  01B6  008A               	movwf	10
  5758  01B7  0853               	movf	_EUSART_ErrorHandler,w
  5759  01B8  000A               	callw
  5760  01B9  3181               	pagesel	$
  5761                           
  5762                           ;eusart.c: 190: } else {
  5763  01BA  0008               	return
  5764  01BB                     i1l2181:	
  5765                           
  5766                           ;eusart.c: 191: EUSART_RxDataHandler();
  5767  01BB  3182  2210         	fcall	_EUSART_RxDataHandler
  5768  01BD  0008               	return
  5769  01BE                     __end_of_EUSART_Receive_ISR:	
  5770                           
  5771                           	psect	text23
  5772  0042                     __ptext23:	
  5773 ;; *************** function _MyUART_ISR *****************
  5774 ;; Defined at:
  5775 ;;		line 87 in file "main.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  c               1    5[COMMON] unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:        5 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    1
  5796 ;; This function calls:
  5797 ;;		_EUSART_Write
  5798 ;; This function is called by:
  5799 ;;		_main
  5800 ;;		_INTERRUPT_InterruptManager
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           
  5805                           ;psect for function _MyUART_ISR
  5806  0042                     _MyUART_ISR:	
  5807                           
  5808                           ;main.c: 88: unsigned char c = RC1REG;
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _MyUART_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5812  0042  0023               	movlb	3	; select bank3
  5813  0043  0819               	movf	25,w	;volatile
  5814  0044  00F1               	movwf	??_MyUART_ISR
  5815  0045  0871               	movf	??_MyUART_ISR,w
  5816  0046  00F5               	movwf	MyUART_ISR@c
  5817                           
  5818                           ;main.c: 89: if(c) {
  5819  0047  0875               	movf	MyUART_ISR@c,w
  5820  0048  1903               	btfsc	3,2
  5821  0049  0008               	return
  5822  004A  28BC               	goto	i1l2229
  5823  004B                     i1l2191:	
  5824                           ;main.c: 91: case S_Idle:
  5825                           
  5826                           ;main.c: 90: switch(PosUart) {
  5827                           
  5828                           
  5829                           ;main.c: 92: if(c == 'V' || c == 'A' || c == 'P') {
  5830  004B  3056               	movlw	86
  5831  004C  0675               	xorwf	MyUART_ISR@c,w
  5832  004D  1903               	btfsc	3,2
  5833  004E  2857               	goto	i1l2197
  5834  004F  3041               	movlw	65
  5835  0050  0675               	xorwf	MyUART_ISR@c,w
  5836  0051  1903               	btfsc	3,2
  5837  0052  2857               	goto	i1l2197
  5838  0053  3050               	movlw	80
  5839  0054  0675               	xorwf	MyUART_ISR@c,w
  5840  0055  1D03               	btfss	3,2
  5841  0056  0008               	return
  5842  0057                     i1l2197:	
  5843                           
  5844                           ;main.c: 93: Type = c;
  5845  0057  0875               	movf	MyUART_ISR@c,w
  5846  0058  00F1               	movwf	??_MyUART_ISR
  5847  0059  0871               	movf	??_MyUART_ISR,w
  5848  005A  00F8               	movwf	_Type
  5849                           
  5850                           ;main.c: 94: PosUart = S_Data;
  5851  005B  01F7               	clrf	_PosUart
  5852  005C  0AF7               	incf	_PosUart,f
  5853                           
  5854                           ;main.c: 95: }
  5855                           ;main.c: 96: break;
  5856  005D  0008               	return
  5857  005E                     i1l2201:	
  5858                           ;main.c: 97: case S_Data:
  5859                           
  5860                           
  5861                           ;main.c: 98: Data = c;
  5862  005E  0875               	movf	MyUART_ISR@c,w
  5863  005F  00F1               	movwf	??_MyUART_ISR
  5864  0060  0871               	movf	??_MyUART_ISR,w
  5865  0061  00F9               	movwf	_Data
  5866                           
  5867                           ;main.c: 99: PosUart = S_Check;
  5868  0062  3002               	movlw	2
  5869  0063  00F1               	movwf	??_MyUART_ISR
  5870  0064  0871               	movf	??_MyUART_ISR,w
  5871  0065  00F7               	movwf	_PosUart
  5872                           
  5873                           ;main.c: 100: break;
  5874  0066  0008               	return
  5875  0067                     i1l2203:	
  5876                           ;main.c: 101: case S_Check:
  5877                           
  5878                           
  5879                           ;main.c: 102: if((Type+Data)%256 == c) {
  5880  0067  0878               	movf	_Type,w
  5881  0068  0779               	addwf	_Data,w
  5882  0069  00F1               	movwf	??_MyUART_ISR
  5883  006A  01F2               	clrf	??_MyUART_ISR+1
  5884  006B  0DF2               	rlf	??_MyUART_ISR+1,f
  5885  006C  30FF               	movlw	255
  5886  006D  0571               	andwf	??_MyUART_ISR,w
  5887  006E  00F3               	movwf	??_MyUART_ISR+2
  5888  006F  3000               	movlw	0
  5889  0070  0572               	andwf	??_MyUART_ISR+1,w
  5890  0071  00F4               	movwf	??_MyUART_ISR+3
  5891  0072  0875               	movf	MyUART_ISR@c,w
  5892  0073  0673               	xorwf	??_MyUART_ISR+2,w
  5893  0074  0474               	iorwf	??_MyUART_ISR+3,w
  5894  0075  1D03               	skipz
  5895  0076  28AD               	goto	i1l2221
  5896                           
  5897                           ;main.c: 103: Validation = 4;
  5898  0077  3004               	movlw	4
  5899  0078  00F1               	movwf	??_MyUART_ISR
  5900  0079  0871               	movf	??_MyUART_ISR,w
  5901  007A  00FC               	movwf	_Validation
  5902                           
  5903                           ;main.c: 104: if(Type == 'V') {
  5904  007B  3056               	movlw	86
  5905  007C  0678               	xorwf	_Type,w
  5906  007D  1D03               	btfss	3,2
  5907  007E  2888               	goto	i1l2211
  5908                           
  5909                           ;main.c: 105: Vitesse = Data;
  5910  007F  0879               	movf	_Data,w
  5911  0080  00F1               	movwf	??_MyUART_ISR
  5912  0081  01F2               	clrf	??_MyUART_ISR+1
  5913  0082  0871               	movf	??_MyUART_ISR,w
  5914  0083  0020               	movlb	0	; select bank0
  5915  0084  00CD               	movwf	_Vitesse
  5916  0085  0872               	movf	??_MyUART_ISR+1,w
  5917  0086  00CE               	movwf	_Vitesse+1
  5918                           
  5919                           ;main.c: 106: } else if(Type == 'A') {
  5920  0087  28B8               	goto	i1l2223
  5921  0088                     i1l2211:	
  5922  0088  3041               	movlw	65
  5923  0089  0678               	xorwf	_Type,w
  5924  008A  1D03               	btfss	3,2
  5925  008B  2895               	goto	i1l2215
  5926                           
  5927                           ;main.c: 107: Angle = Data;
  5928  008C  0879               	movf	_Data,w
  5929  008D  00F1               	movwf	??_MyUART_ISR
  5930  008E  01F2               	clrf	??_MyUART_ISR+1
  5931  008F  0871               	movf	??_MyUART_ISR,w
  5932  0090  0020               	movlb	0	; select bank0
  5933  0091  00DF               	movwf	_Angle
  5934  0092  0872               	movf	??_MyUART_ISR+1,w
  5935  0093  00E0               	movwf	_Angle+1
  5936                           
  5937                           ;main.c: 108: } else if(Type == 'P') {
  5938  0094  28B8               	goto	i1l2223
  5939  0095                     i1l2215:	
  5940  0095  3050               	movlw	80
  5941  0096  0678               	xorwf	_Type,w
  5942  0097  1D03               	btfss	3,2
  5943  0098  28A3               	goto	i1l2219
  5944                           
  5945                           ;main.c: 109: EUSART_Write('P');
  5946  0099  3050               	movlw	80
  5947  009A  3182  2285  3180   	fcall	_EUSART_Write
  5948                           
  5949                           ;main.c: 110: EUSART_Write('+');
  5950  009D  302B               	movlw	43
  5951  009E  3182  2285  3180   	fcall	_EUSART_Write
  5952                           
  5953                           ;main.c: 111: EUSART_Write('{');
  5954  00A1  307B               	movlw	123
  5955  00A2  28B6               	goto	L1
  5956  00A3                     i1l2219:	
  5957                           ;main.c: 112: } else {
  5958                           
  5959                           
  5960                           ;main.c: 113: EUSART_Write('$');
  5961  00A3  3024               	movlw	36
  5962  00A4  3182  2285  3180   	fcall	_EUSART_Write
  5963                           
  5964                           ;main.c: 114: EUSART_Write('M');
  5965  00A7  304D               	movlw	77
  5966  00A8  3182  2285  3180   	fcall	_EUSART_Write
  5967                           
  5968                           ;main.c: 115: EUSART_Write('q');
  5969  00AB  3071               	movlw	113
  5970  00AC  28B6               	goto	L1
  5971  00AD                     i1l2221:	
  5972                           ;main.c: 116: }
  5973                           ;main.c: 117: } else {
  5974                           
  5975                           
  5976                           ;main.c: 118: EUSART_Write('$');
  5977  00AD  3024               	movlw	36
  5978  00AE  3182  2285  3180   	fcall	_EUSART_Write
  5979                           
  5980                           ;main.c: 119: EUSART_Write('C');
  5981  00B1  3043               	movlw	67
  5982  00B2  3182  2285  3180   	fcall	_EUSART_Write
  5983                           
  5984                           ;main.c: 120: EUSART_Write('g');
  5985  00B5  3067               	movlw	103
  5986  00B6                     L1:	
  5987  00B6  3182  2285         	fcall	_EUSART_Write
  5988  00B8                     i1l2223:	
  5989                           
  5990                           ;main.c: 121: }
  5991                           ;main.c: 122: PosUart = S_Idle;
  5992  00B8  01F7               	clrf	_PosUart
  5993                           
  5994                           ;main.c: 123: break;
  5995  00B9  0008               	return
  5996  00BA                     i1l2225:	
  5997                           ;main.c: 124: default:
  5998                           
  5999                           
  6000                           ;main.c: 125: PosUart = S_Idle;
  6001  00BA  01F7               	clrf	_PosUart
  6002                           
  6003                           ;main.c: 127: }
  6004                           
  6005                           ;main.c: 126: break;
  6006  00BB  0008               	return
  6007  00BC                     i1l2229:	
  6008  00BC  0877               	movf	_PosUart,w
  6009                           
  6010                           ; Switch size 1, requested type "space"
  6011                           ; Number of cases is 3, Range of values is 0 to 2
  6012                           ; switch strategies available:
  6013                           ; Name         Instructions Cycles
  6014                           ; simple_byte           10     6 (average)
  6015                           ; direct_byte           12     6 (fixed)
  6016                           ; jumptable            260     6 (fixed)
  6017                           ;	Chosen strategy is simple_byte
  6018  00BD  3A00               	xorlw	0	; case 0
  6019  00BE  1903               	skipnz
  6020  00BF  284B               	goto	i1l2191
  6021  00C0  3A01               	xorlw	1	; case 1
  6022  00C1  1903               	skipnz
  6023  00C2  285E               	goto	i1l2201
  6024  00C3  3A03               	xorlw	3	; case 2
  6025  00C4  1903               	skipnz
  6026  00C5  2867               	goto	i1l2203
  6027  00C6  28BA               	goto	i1l2225
  6028  00C7  0008               	return
  6029  00C8                     __end_of_MyUART_ISR:	
  6030                           
  6031                           	psect	text24
  6032  0285                     __ptext24:	
  6033 ;; *************** function _EUSART_Write *****************
  6034 ;; Defined at:
  6035 ;;		line 162 in file "mcc_generated_files/eusart.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  txData          1    wreg     unsigned char 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  txData          1    0[COMMON] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      void 
  6042 ;; Registers used:
  6043 ;;		wreg
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;Total ram usage:        1 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_MyTimer2ISR
  6059 ;;		_MyUART_ISR
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function _EUSART_Write
  6065  0285                     _EUSART_Write:	
  6066                           
  6067                           ;incstack = 0
  6068                           ; Regs used in _EUSART_Write: [wreg]
  6069                           ;EUSART_Write@txData stored from wreg
  6070  0285  00F0               	movwf	EUSART_Write@txData
  6071  0286                     i1l635:	
  6072                           ;eusart.c: 165: {
  6073                           
  6074                           ;eusart.c: 164: while(0 == PIR1bits.TXIF)
  6075                           
  6076  0286  0020               	movlb	0	; select bank0
  6077  0287  1E10               	btfss	16,4	;volatile
  6078  0288  2A86               	goto	i1l635
  6079                           
  6080                           ;eusart.c: 166: }
  6081                           ;eusart.c: 168: TX1REG = txData;
  6082  0289  0870               	movf	EUSART_Write@txData,w
  6083  028A  0023               	movlb	3	; select bank3
  6084  028B  009A               	movwf	26	;volatile
  6085  028C  0008               	return
  6086  028D                     __end_of_EUSART_Write:	
  6087                           
  6088                           	psect	text25
  6089  02C3                     __ptext25:	
  6090 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6091 ;; Defined at:
  6092 ;;		line 209 in file "mcc_generated_files/eusart.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		None
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_EUSART_Initialize
  6116 ;;		_EUSART_Receive_ISR
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           
  6121                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6122  02C3                     _EUSART_DefaultOverrunErrorHandler:	
  6123                           
  6124                           ;eusart.c: 212: RC1STAbits.CREN = 0;
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6128  02C3  0023               	movlb	3	; select bank3
  6129  02C4  121D               	bcf	29,4	;volatile
  6130                           
  6131                           ;eusart.c: 213: RC1STAbits.CREN = 1;
  6132  02C5  161D               	bsf	29,4	;volatile
  6133  02C6  0008               	return
  6134  02C7                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  6135                           
  6136                           	psect	text26
  6137  02D4                     __ptext26:	
  6138 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6139 ;; Defined at:
  6140 ;;		line 207 in file "mcc_generated_files/eusart.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1    wreg      void 
  6147 ;; Registers used:
  6148 ;;		None
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;Total ram usage:        0 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_EUSART_Initialize
  6164 ;;		_EUSART_Receive_ISR
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6170  02D4                     _EUSART_DefaultFramingErrorHandler:	
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6174  02D4  0008               	return
  6175  02D5                     __end_of_EUSART_DefaultFramingErrorHandler:	
  6176                           
  6177                           	psect	text27
  6178  02CD                     __ptext27:	
  6179 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6180 ;; Defined at:
  6181 ;;		line 217 in file "mcc_generated_files/eusart.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      void 
  6188 ;; Registers used:
  6189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6199 ;;Total ram usage:        0 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    1
  6202 ;; This function calls:
  6203 ;;		_EUSART_RxDataHandler
  6204 ;; This function is called by:
  6205 ;;		_EUSART_Initialize
  6206 ;;		_EUSART_Receive_ISR
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function _EUSART_DefaultErrorHandler
  6212  02CD                     _EUSART_DefaultErrorHandler:	
  6213                           
  6214                           ;eusart.c: 218: EUSART_RxDataHandler();
  6215                           
  6216                           ;incstack = 0
  6217                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6218  02CD  3182  2210         	fcall	_EUSART_RxDataHandler
  6219  02CF  0008               	return
  6220  02D0                     __end_of_EUSART_DefaultErrorHandler:	
  6221                           
  6222                           	psect	text28
  6223  0210                     __ptext28:	
  6224 ;; *************** function _EUSART_RxDataHandler *****************
  6225 ;; Defined at:
  6226 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;Total ram usage:        1 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_EUSART_Receive_ISR
  6250 ;;		_EUSART_DefaultErrorHandler
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           
  6255                           ;psect for function _EUSART_RxDataHandler
  6256  0210                     _EUSART_RxDataHandler:	
  6257                           
  6258                           ;eusart.c: 199: eusartRxBuffer[eusartRxHead++] = RC1REG;
  6259                           
  6260                           ;incstack = 0
  6261                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6262  0210  0023               	movlb	3	; select bank3
  6263  0211  0819               	movf	25,w	;volatile
  6264  0212  00F0               	movwf	??_EUSART_RxDataHandler
  6265  0213  0020               	movlb	0	; select bank0
  6266  0214  0850               	movf	_eusartRxHead,w
  6267  0215  3E45               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6268  0216  0086               	movwf	6
  6269  0217  0187               	clrf	7
  6270  0218  0870               	movf	??_EUSART_RxDataHandler,w
  6271  0219  0081               	movwf	1
  6272  021A  3001               	movlw	1
  6273  021B  00F0               	movwf	??_EUSART_RxDataHandler
  6274  021C  0870               	movf	??_EUSART_RxDataHandler,w
  6275  021D  07D0               	addwf	_eusartRxHead,f	;volatile
  6276                           
  6277                           ;eusart.c: 200: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6278  021E  3008               	movlw	8
  6279  021F  0250               	subwf	_eusartRxHead,w	;volatile
  6280  0220  1803               	btfsc	3,0
  6281                           
  6282                           ;eusart.c: 201: {
  6283                           ;eusart.c: 202: eusartRxHead = 0;
  6284  0221  01D0               	clrf	_eusartRxHead	;volatile
  6285                           
  6286                           ;eusart.c: 203: }
  6287                           ;eusart.c: 204: eusartRxCount++;
  6288  0222  3001               	movlw	1
  6289  0223  00F0               	movwf	??_EUSART_RxDataHandler
  6290  0224  0870               	movf	??_EUSART_RxDataHandler,w
  6291  0225  07FA               	addwf	_eusartRxCount,f	;volatile
  6292  0226  0008               	return
  6293  0227                     __end_of_EUSART_RxDataHandler:	
  6294  007E                     btemp	set	126	;btemp
  6295  007E                     int$flags	set	126
  6296  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         54
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      4      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1869$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_RX$1875$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX_EMPTY$1881$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_RX_EMPTY$1887$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S443$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyTimer2ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyTimer2ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyUART_ISR(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    S443$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S443$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S443$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), Absolute function(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), Absolute function(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E12103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyUART_ISR(), EUSART_Receive_ISR(), Absolute function(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S85$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_MyUART_ISR
    _TMR2_ISR->_MyTimer2ISR
    _MyTimer2ISR->_PWM3_LoadDutyValue
    _MyUART_ISR->_EUSART_Write
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_EUSART_SetRxInterruptHandler
    _main->_TMR2_SetInterruptHandler
    _main->_TMR2_WriteTimer
    _TMR2_WriteTimer->_TMR2_Counter8BitSet
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1269
                                              2 BANK0      2     2      0
       _EUSART_SetRxInterruptHandler
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_WriteTimer                                      1     1      0      62
                                              1 BANK0      1     1      0
                _TMR2_Counter8BitSet
 ---------------------------------------------------------------------------------
 (2) _TMR2_Counter8BitSet                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     574
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     319
                                              6 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                         _MyUART_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0     142
                   Absolute function *
                        _MyTimer2ISR *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MyTimer2ISR                                          2     2      0     142
                                              4 COMMON     2     2      0
                       _EUSART_Write
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (7) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _MyUART_ISR                                           5     5      0     177
                                              1 COMMON     5     5      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_SetRxInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR2_WriteTimer
     _TMR2_Counter8BitSet

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _MyUART_ISR *
     _EUSART_Write
   _TMR2_ISR *
     Absolute function(Fake) *
     _MyTimer2ISR *
       _EUSART_Write
       _PWM3_LoadDutyValue
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 25 10:36:17 2020

                ?_EUSART_SetRxInterruptHandler 005B                                    MyUART_ISR@c 0075  
             __end_of_TMR2_SetInterruptHandler 02A6                                    __CFG_CP$OFF 0000  
                                  __CFG_LVP$ON 0000                                            _PR2 001B  
                                          u930 00F0                                            u960 0111  
                                          u987 00F8                                            u997 0117  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 005B  
                              _TMR2_Initialize 023D                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 _I2C_DO_RESET 0000                                   __CFG_ZCD$OFF 0000  
                                         l2431 0113                                           l2423 00FF  
                                         l2425 00E7                                           l2427 00F2  
                                         l2429 0108                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _T2PR 001B                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _Data 0079  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _Type 0078                                           _main 00C8  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0024                                  __CFG_MCLRE$ON 0000  
                          _TMR2_Counter8BitSet 02BE                                  __CFG_PLLEN$ON 0000  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                                _I2C_DO_RX_ACK 0000                  __end_of_OSCILLATOR_Initialize 0294  
                                        ?_main 0070                                  __CFG_WDTE$OFF 0000  
                                        _T2CON 001C                                          _T2HLT 001D  
                                        i1l123 001F                                          _T2TMR 001A  
                                        i1l118 0017                                          _T2RST 001F  
                                        i1l635 0286                                          u64_25 0236  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                                        _Angle 005F                           ?_TMR2_Counter8BitSet 0070  
                             __end_of_TMR2_ISR 0270                                    ?_TMR2_Start 0070  
                                   _MyUART_ISR 0042                        __end_of_PWM3_Initialize 027B  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                _TMR2_StartTimer 02C7  
                                _fsmStateTable 01F0                                __initialization 0026  
                                ??_MyTimer2ISR 0074                                   __end_of_main 011D  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 0252  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 005D                       _TMR2_SetInterruptHandler 02A0  
                                       ??_main 005D                                _TMR2_WriteTimer 029A  
                        ??_TMR2_Counter8BitSet 005B      __end_of_EUSART_DefaultFramingErrorHandler 02D5  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 02D4  
                   _EUSART_OverrunErrorHandler 0055                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RA2PPS 0E92                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB6PPS 0E9E  
                                       i1l2201 005E                                         i1l2211 0088  
                                       i1l2203 0067                                         _RB7PPS 0E9F  
                                       i1l2221 00AD                                         i1l2215 0095  
                                       i1l2223 00B8                                         i1l2225 00BA  
                                       i1l2153 01E4                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l2219 00A3  
                                       i1l2171 019F                                         _ODCONC 028E  
                                       i1l2229 00BC                                         i1l2181 01BB  
                                       i1l2191 004B                                         i1l2177 01AD  
                                       i1l2197 0057                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                     _Validation 007C  
                               __CFG_PWRTE$OFF 0000                    __size_of_PWM3_LoadDutyValue 0016  
                               __CFG_STVREN$ON 0000                            __size_of_TMR2_Start 0003  
                      __size_of_I2C_Initialize 000A                            __end_of_MyTimer2ISR 01F0  
                          _I2C_DO_ADDRESS_NACK 0000                                   __pdataCOMMON 007C  
                      __end_of_TMR2_StartTimer 02CA       TMR2_SetInterruptHandler@InterruptHandler 005B  
                                  ?_MyUART_ISR 0070                               ?_PWM3_Initialize 0070  
                            _SYSTEM_Initialize 0252                        __end_of__initialization 003E  
                           ?_SYSTEM_Initialize 0070                        _rdBlkRegCompleteHandler 0000  
                               __pcstackCOMMON 0070                                   __pidataBANK0 02D0  
                       _I2C_CallbackReturnStop 0000                            ??_SYSTEM_Initialize 005D  
                                    ?_TMR2_ISR 0070                        __end_of_TMR2_WriteTimer 02A0  
                             ?_TMR2_Initialize 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 003D                ??_EUSART_SetOverrunErrorHandler 005D  
                    __end_of_SYSTEM_Initialize 0264                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 028D                    __size_of_EUSART_Receive_ISR 0033  
                          _I2C_DO_RX_NACK_STOP 0000                          _rd1RegCompleteHandler 0000  
                        _wr1RegCompleteHandler 0000                                     __pmaintext 00C8  
                                  _MyTimer2ISR 01BE                                _I2C_DO_TX_EMPTY 0000  
                              __CFG_PPS1WAY$ON 0000                                     ??_TMR2_ISR 0076  
                                   __pintentry 0004                            __size_of_MyUART_ISR 0086  
                 ??_EUSART_DefaultErrorHandler 0071                                  _eusartRxCount 007A  
                              __CFG_WDTCCS$SWC 0000                  __size_of_EUSART_RxDataHandler 0017  
                                      _OSCTUNE 0098                                        _PWM3DCH 0618  
                                      _PWM3DCL 0617                                        _PWM3CON 0619  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                                   ??_TMR2_Start 005B  
                     ??_EUSART_SetErrorHandler 005D                               ?_TMR2_StartTimer 0070  
                                    _I2C_DO_RX 0000                                      _I2C_DO_TX 0000  
          __size_of_EUSART_DefaultErrorHandler 0003                     ??_TMR2_SetInterruptHandler 005D  
                                      _PosUart 0077                                        _Vitesse 004D  
                             ?_TMR2_WriteTimer 0070                             __end_of_TMR2_Start 02CD  
                               _I2C_Initialize 027B                                        __ptext1 029A  
                                      __ptext2 02BE                                        __ptext3 02C7  
                                      __ptext4 02CA                                        __ptext5 0252  
                                      __ptext6 023D                                        __ptext7 02A0  
                                      __ptext8 0270                                        __ptext9 011D  
                        _OSCILLATOR_Initialize 028D                                      _T2CONbits 001C  
                     ??_PIN_MANAGER_Initialize 005B                                      _T2HLTbits 001D  
                   __size_of_SYSTEM_Initialize 0012                                        clrloop0 0295  
                         end_of_initialization 003E                                      _T2RSTbits 001F  
        __end_of_EUSART_SetOverrunErrorHandler 02B2         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 02AC                              _EUSART_Initialize 0158  
                           ?_EUSART_Initialize 0070                         __end_of_I2C_Initialize 0285  
                  __end_of_TMR2_Counter8BitSet 02C3                            ??_EUSART_Initialize 005D  
                                    _PORTAbits 000C                                      _SSPDATPPS 0E21  
                                    _SSPCLKPPS 0E20                               __CFG_FOSC$INTOSC 0000  
                        __size_of_EUSART_Write 0008                                   ??_MyUART_ISR 0071  
              __size_of_EUSART_SetErrorHandler 0006                        TMR2_WriteTimer@timerVal 005C  
                    __end_of_EUSART_Initialize 018B                                    _I2C_DO_IDLE 0000  
                                  _I2C_DO_RCEN 0000                     __end_of_PWM3_LoadDutyValue 023D  
                     _I2C_DO_SEND_RESTART_READ 0000                                ?_I2C_Initialize 0070  
         __end_of_TMR2_DefaultInterruptHandler 02D4          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 02D3                        _I2C_CallbackReturnReset 0000  
           __end_of_EUSART_DefaultErrorHandler 02D0                     _EUSART_DefaultErrorHandler 02CD  
                                __pidataCOMMON 02D2                                   _EUSART_Write 0285  
                            __size_of_TMR2_ISR 000C                             __end_of_MyUART_ISR 00C8  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 0026  
              __size_of_PIN_MANAGER_Initialize 003B   EUSART_SetRxInterruptHandler@interruptHandler 005B  
                       _I2C_DO_RX_NACK_RESTART 0000                 ?_EUSART_SetOverrunErrorHandler 005B  
                     __size_of_PWM3_Initialize 000B                     _EUSART_FramingErrorHandler 0057  
                                 ?_MyTimer2ISR 0070                         _EUSART_SetErrorHandler 02B8  
                                  _CCPTMRSbits 029E                                    __pdataBANK0 005F  
                ?_TMR2_DefaultInterruptHandler 0070                               _I2C_DO_SEND_STOP 0000  
                        _I2C_DO_SEND_ADR_WRITE 0000                                    __pbssCOMMON 0077  
                                    ___latbits 0002                                  __pcstackBANK0 005B  
                     __size_of_TMR2_Initialize 0015                     __end_of_EUSART_Receive_ISR 01BE  
                   __size_of_EUSART_Initialize 0033                      _I2C_DO_SEND_RESTART_WRITE 0000  
             _EUSART_RxDefaultInterruptHandler 0059                                      __pnvBANK0 0051  
                        _rd2RegCompleteHandler 0000                          __end_of_fsmStateTable 0210  
                 __end_of_EUSART_RxDataHandler 0227                         _PIN_MANAGER_Initialize 011D  
                        _wr2RegCompleteHandler 0000                                   _eusartRxHead 0050  
                                 _eusartRxTail 007B                   ??_INTERRUPT_InterruptManager 0076  
                                     _BAUD1CON 019F                                       _T2CLKCON 001E  
                               _eusartRxBuffer 0045                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 005B                                      clear_ram0 0294  
                                     _PIE1bits 0090                              _eusartRxLastError 004F  
                     __size_of_TMR2_StartTimer 0003            __size_of_INTERRUPT_InterruptManager 0020  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 005D  
                                     _PIR2bits 0011                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
    __end_of_EUSART_DefaultOverrunErrorHandler 02C7     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 02C3                                       _TMR2_ISR 0264  
                                     _SSP1STAT 0214                              ??_PWM3_Initialize 005B  
               ??_TMR2_DefaultInterruptHandler 0070              __size_of_TMR2_SetInterruptHandler 0006  
                     __size_of_TMR2_WriteTimer 0006                      ?_TMR2_SetInterruptHandler 005B  
                                   _I2C_Status 0020                              ??_TMR2_Initialize 005D  
                             ??_I2C_Initialize 005B                        ??_OSCILLATOR_Initialize 005B  
                          _EUSART_ErrorHandler 0053                           _I2C_DO_SEND_ADR_READ 0000  
                         __size_of_MyTimer2ISR 0032                    ?_EUSART_DefaultErrorHandler 0070  
                           _PWM3_LoadDutyValue 0227                           _EUSART_RxDataHandler 0210  
                 __size_of_TMR2_Counter8BitSet 0005                                       __ptext10 028D  
                                     __ptext11 027B                                       __ptext20 02D3  
                                     __ptext12 0158                                       __ptext21 0227  
                                     __ptext13 02A6                                       __ptext22 018B  
                                     __ptext14 02AC                                       __ptext23 0042  
                                     __ptext15 02B2                                       __ptext24 0285  
                                     __ptext16 02B8                                       __ptext25 02C3  
                                     __ptext26 02D4                                       __ptext18 0264  
                                     __ptext27 02CD                                       __ptext19 01BE  
                                     __ptext28 0210                            ?_PWM3_LoadDutyValue 0070  
                                 _SSP1CON1bits 0215                                   _SSP1CON2bits 0216  
                                __size_of_main 0055                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 005B                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 005B                           ??_PWM3_LoadDutyValue 0072  
                                     int$flags 007E                              ??_TMR2_StartTimer 005B  
           __end_of_INTERRUPT_InterruptManager 0024                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 02B8         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 02B2                                   _SSP1STATbits 0214  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                  TMR2_Counter8BitSet@timerVal 005B                                       intlevel1 0000  
                            ??_TMR2_WriteTimer 005C                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 02BE                              __CFG_CLKOUTEN$OFF 0000  
                          _I2C_DO_SEND_RESTART 0000           __end_of_EUSART_SetRxInterruptHandler 02AC  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 02A6  
                           _EUSART_Receive_ISR 018B  EUSART_SetFramingErrorHandler@interruptHandler 005B  
                  PWM3_LoadDutyValue@dutyValue 0070                                  __pstringtext1 01F0  
                          ?_EUSART_Receive_ISR 0070                                     _TX1STAbits 019E  
                                   _TMR2_Start 02CA                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 0158                           ??_EUSART_Receive_ISR 0071  
                        _TMR2_InterruptHandler 0051                                _PWM3_Initialize 0270  
