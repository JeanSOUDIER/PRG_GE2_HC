

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 25 09:24:22 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1619 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011C                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0197                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029B                     	;# 
   215  029E                     	;# 
   216  030C                     	;# 
   217  030D                     	;# 
   218  030E                     	;# 
   219  038C                     	;# 
   220  038D                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  040E                     	;# 
   232  0413                     	;# 
   233  0413                     	;# 
   234  0414                     	;# 
   235  0414                     	;# 
   236  0415                     	;# 
   237  0416                     	;# 
   238  0417                     	;# 
   239  0418                     	;# 
   240  041A                     	;# 
   241  041A                     	;# 
   242  041B                     	;# 
   243  041B                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  041F                     	;# 
   248  0493                     	;# 
   249  0494                     	;# 
   250  0495                     	;# 
   251  0496                     	;# 
   252  049A                     	;# 
   253  049B                     	;# 
   254  049C                     	;# 
   255  049D                     	;# 
   256  058C                     	;# 
   257  058C                     	;# 
   258  058D                     	;# 
   259  058E                     	;# 
   260  058E                     	;# 
   261  058F                     	;# 
   262  0590                     	;# 
   263  0590                     	;# 
   264  0591                     	;# 
   265  0592                     	;# 
   266  0592                     	;# 
   267  0593                     	;# 
   268  0594                     	;# 
   269  0594                     	;# 
   270  0595                     	;# 
   271  0596                     	;# 
   272  0596                     	;# 
   273  0597                     	;# 
   274  0598                     	;# 
   275  0599                     	;# 
   276  059A                     	;# 
   277  059B                     	;# 
   278  059B                     	;# 
   279  059C                     	;# 
   280  059D                     	;# 
   281  060C                     	;# 
   282  060C                     	;# 
   283  060D                     	;# 
   284  060E                     	;# 
   285  060F                     	;# 
   286  060F                     	;# 
   287  0610                     	;# 
   288  0611                     	;# 
   289  0612                     	;# 
   290  0613                     	;# 
   291  0614                     	;# 
   292  0617                     	;# 
   293  0618                     	;# 
   294  0619                     	;# 
   295  061A                     	;# 
   296  061B                     	;# 
   297  061C                     	;# 
   298  0691                     	;# 
   299  0692                     	;# 
   300  0693                     	;# 
   301  0694                     	;# 
   302  0695                     	;# 
   303  0696                     	;# 
   304  0697                     	;# 
   305  0699                     	;# 
   306  069A                     	;# 
   307  0711                     	;# 
   308  0712                     	;# 
   309  0713                     	;# 
   310  0714                     	;# 
   311  0715                     	;# 
   312  0718                     	;# 
   313  0718                     	;# 
   314  0719                     	;# 
   315  071A                     	;# 
   316  071A                     	;# 
   317  071B                     	;# 
   318  071C                     	;# 
   319  071D                     	;# 
   320  0791                     	;# 
   321  0791                     	;# 
   322  0792                     	;# 
   323  0793                     	;# 
   324  0793                     	;# 
   325  0794                     	;# 
   326  0795                     	;# 
   327  0795                     	;# 
   328  0796                     	;# 
   329  0797                     	;# 
   330  0797                     	;# 
   331  0798                     	;# 
   332  0799                     	;# 
   333  079A                     	;# 
   334  080C                     	;# 
   335  080C                     	;# 
   336  080D                     	;# 
   337  080E                     	;# 
   338  080E                     	;# 
   339  080F                     	;# 
   340  0810                     	;# 
   341  0810                     	;# 
   342  0811                     	;# 
   343  0812                     	;# 
   344  0812                     	;# 
   345  0813                     	;# 
   346  0814                     	;# 
   347  0815                     	;# 
   348  0816                     	;# 
   349  0817                     	;# 
   350  0818                     	;# 
   351  0819                     	;# 
   352  081A                     	;# 
   353  081A                     	;# 
   354  081B                     	;# 
   355  081C                     	;# 
   356  081C                     	;# 
   357  081D                     	;# 
   358  088C                     	;# 
   359  088D                     	;# 
   360  088E                     	;# 
   361  088F                     	;# 
   362  088F                     	;# 
   363  0890                     	;# 
   364  0891                     	;# 
   365  0892                     	;# 
   366  0893                     	;# 
   367  0893                     	;# 
   368  0894                     	;# 
   369  0895                     	;# 
   370  0896                     	;# 
   371  0897                     	;# 
   372  0897                     	;# 
   373  0898                     	;# 
   374  0899                     	;# 
   375  0D8C                     	;# 
   376  0D8C                     	;# 
   377  0D8D                     	;# 
   378  0D8E                     	;# 
   379  0D8F                     	;# 
   380  0D8F                     	;# 
   381  0D90                     	;# 
   382  0D91                     	;# 
   383  0D92                     	;# 
   384  0D92                     	;# 
   385  0D93                     	;# 
   386  0D94                     	;# 
   387  0D95                     	;# 
   388  0D95                     	;# 
   389  0D96                     	;# 
   390  0D97                     	;# 
   391  0D98                     	;# 
   392  0D99                     	;# 
   393  0D9A                     	;# 
   394  0D9B                     	;# 
   395  0D9C                     	;# 
   396  0D9D                     	;# 
   397  0D9E                     	;# 
   398  0D9E                     	;# 
   399  0D9F                     	;# 
   400  0DA0                     	;# 
   401  0DA1                     	;# 
   402  0DA1                     	;# 
   403  0DA2                     	;# 
   404  0DA3                     	;# 
   405  0DA4                     	;# 
   406  0DA4                     	;# 
   407  0DA5                     	;# 
   408  0DA6                     	;# 
   409  0DA7                     	;# 
   410  0DA7                     	;# 
   411  0DA8                     	;# 
   412  0DA9                     	;# 
   413  0DAA                     	;# 
   414  0DAB                     	;# 
   415  0DAC                     	;# 
   416  0DAD                     	;# 
   417  0DAE                     	;# 
   418  0DAF                     	;# 
   419  0E0F                     	;# 
   420  0E10                     	;# 
   421  0E11                     	;# 
   422  0E12                     	;# 
   423  0E13                     	;# 
   424  0E14                     	;# 
   425  0E15                     	;# 
   426  0E16                     	;# 
   427  0E17                     	;# 
   428  0E18                     	;# 
   429  0E19                     	;# 
   430  0E1A                     	;# 
   431  0E1B                     	;# 
   432  0E1C                     	;# 
   433  0E1D                     	;# 
   434  0E1E                     	;# 
   435  0E1F                     	;# 
   436  0E20                     	;# 
   437  0E21                     	;# 
   438  0E22                     	;# 
   439  0E23                     	;# 
   440  0E24                     	;# 
   441  0E25                     	;# 
   442  0E26                     	;# 
   443  0E27                     	;# 
   444  0E28                     	;# 
   445  0E29                     	;# 
   446  0E2A                     	;# 
   447  0E2B                     	;# 
   448  0E2C                     	;# 
   449  0E2D                     	;# 
   450  0E2E                     	;# 
   451  0E90                     	;# 
   452  0E91                     	;# 
   453  0E92                     	;# 
   454  0E94                     	;# 
   455  0E95                     	;# 
   456  0E9C                     	;# 
   457  0E9D                     	;# 
   458  0E9E                     	;# 
   459  0E9F                     	;# 
   460  0EA0                     	;# 
   461  0EA1                     	;# 
   462  0EA2                     	;# 
   463  0EA3                     	;# 
   464  0EA4                     	;# 
   465  0EA5                     	;# 
   466  0EA6                     	;# 
   467  0EA7                     	;# 
   468  0F0F                     	;# 
   469  0F10                     	;# 
   470  0F11                     	;# 
   471  0F12                     	;# 
   472  0F13                     	;# 
   473  0F14                     	;# 
   474  0F15                     	;# 
   475  0F16                     	;# 
   476  0F17                     	;# 
   477  0F18                     	;# 
   478  0F19                     	;# 
   479  0F1A                     	;# 
   480  0F1B                     	;# 
   481  0F1C                     	;# 
   482  0F1D                     	;# 
   483  0F1E                     	;# 
   484  0F1F                     	;# 
   485  0F20                     	;# 
   486  0F21                     	;# 
   487  0F22                     	;# 
   488  0F23                     	;# 
   489  0F24                     	;# 
   490  0F25                     	;# 
   491  0F26                     	;# 
   492  0F27                     	;# 
   493  0F28                     	;# 
   494  0F29                     	;# 
   495  0F2A                     	;# 
   496  0F2B                     	;# 
   497  0F2C                     	;# 
   498  0F2D                     	;# 
   499  0F2E                     	;# 
   500  0F2F                     	;# 
   501  0F30                     	;# 
   502  0F31                     	;# 
   503  0F32                     	;# 
   504  0F33                     	;# 
   505  0F34                     	;# 
   506  0F35                     	;# 
   507  0F36                     	;# 
   508  0F37                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0013                     	;# 
   539  0014                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001A                     	;# 
   548  001B                     	;# 
   549  001B                     	;# 
   550  001C                     	;# 
   551  001D                     	;# 
   552  001E                     	;# 
   553  001F                     	;# 
   554  008C                     	;# 
   555  008D                     	;# 
   556  008E                     	;# 
   557  0090                     	;# 
   558  0091                     	;# 
   559  0092                     	;# 
   560  0093                     	;# 
   561  0094                     	;# 
   562  0095                     	;# 
   563  0096                     	;# 
   564  0098                     	;# 
   565  0099                     	;# 
   566  009A                     	;# 
   567  009B                     	;# 
   568  009B                     	;# 
   569  009C                     	;# 
   570  009D                     	;# 
   571  009E                     	;# 
   572  009F                     	;# 
   573  010C                     	;# 
   574  010D                     	;# 
   575  010E                     	;# 
   576  0111                     	;# 
   577  0112                     	;# 
   578  0113                     	;# 
   579  0114                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  011C                     	;# 
   586  018C                     	;# 
   587  018D                     	;# 
   588  018E                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0194                     	;# 
   595  0195                     	;# 
   596  0196                     	;# 
   597  0197                     	;# 
   598  0199                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  019A                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019D                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  020E                     	;# 
   626  0211                     	;# 
   627  0211                     	;# 
   628  0212                     	;# 
   629  0212                     	;# 
   630  0213                     	;# 
   631  0213                     	;# 
   632  0214                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  028C                     	;# 
   643  028D                     	;# 
   644  028E                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0294                     	;# 
   650  0298                     	;# 
   651  0298                     	;# 
   652  0299                     	;# 
   653  029A                     	;# 
   654  029B                     	;# 
   655  029E                     	;# 
   656  030C                     	;# 
   657  030D                     	;# 
   658  030E                     	;# 
   659  038C                     	;# 
   660  038D                     	;# 
   661  038E                     	;# 
   662  0391                     	;# 
   663  0392                     	;# 
   664  0393                     	;# 
   665  0394                     	;# 
   666  0395                     	;# 
   667  0396                     	;# 
   668  0397                     	;# 
   669  0398                     	;# 
   670  0399                     	;# 
   671  040E                     	;# 
   672  0413                     	;# 
   673  0413                     	;# 
   674  0414                     	;# 
   675  0414                     	;# 
   676  0415                     	;# 
   677  0416                     	;# 
   678  0417                     	;# 
   679  0418                     	;# 
   680  041A                     	;# 
   681  041A                     	;# 
   682  041B                     	;# 
   683  041B                     	;# 
   684  041C                     	;# 
   685  041D                     	;# 
   686  041E                     	;# 
   687  041F                     	;# 
   688  0493                     	;# 
   689  0494                     	;# 
   690  0495                     	;# 
   691  0496                     	;# 
   692  049A                     	;# 
   693  049B                     	;# 
   694  049C                     	;# 
   695  049D                     	;# 
   696  058C                     	;# 
   697  058C                     	;# 
   698  058D                     	;# 
   699  058E                     	;# 
   700  058E                     	;# 
   701  058F                     	;# 
   702  0590                     	;# 
   703  0590                     	;# 
   704  0591                     	;# 
   705  0592                     	;# 
   706  0592                     	;# 
   707  0593                     	;# 
   708  0594                     	;# 
   709  0594                     	;# 
   710  0595                     	;# 
   711  0596                     	;# 
   712  0596                     	;# 
   713  0597                     	;# 
   714  0598                     	;# 
   715  0599                     	;# 
   716  059A                     	;# 
   717  059B                     	;# 
   718  059B                     	;# 
   719  059C                     	;# 
   720  059D                     	;# 
   721  060C                     	;# 
   722  060C                     	;# 
   723  060D                     	;# 
   724  060E                     	;# 
   725  060F                     	;# 
   726  060F                     	;# 
   727  0610                     	;# 
   728  0611                     	;# 
   729  0612                     	;# 
   730  0613                     	;# 
   731  0614                     	;# 
   732  0617                     	;# 
   733  0618                     	;# 
   734  0619                     	;# 
   735  061A                     	;# 
   736  061B                     	;# 
   737  061C                     	;# 
   738  0691                     	;# 
   739  0692                     	;# 
   740  0693                     	;# 
   741  0694                     	;# 
   742  0695                     	;# 
   743  0696                     	;# 
   744  0697                     	;# 
   745  0699                     	;# 
   746  069A                     	;# 
   747  0711                     	;# 
   748  0712                     	;# 
   749  0713                     	;# 
   750  0714                     	;# 
   751  0715                     	;# 
   752  0718                     	;# 
   753  0718                     	;# 
   754  0719                     	;# 
   755  071A                     	;# 
   756  071A                     	;# 
   757  071B                     	;# 
   758  071C                     	;# 
   759  071D                     	;# 
   760  0791                     	;# 
   761  0791                     	;# 
   762  0792                     	;# 
   763  0793                     	;# 
   764  0793                     	;# 
   765  0794                     	;# 
   766  0795                     	;# 
   767  0795                     	;# 
   768  0796                     	;# 
   769  0797                     	;# 
   770  0797                     	;# 
   771  0798                     	;# 
   772  0799                     	;# 
   773  079A                     	;# 
   774  080C                     	;# 
   775  080C                     	;# 
   776  080D                     	;# 
   777  080E                     	;# 
   778  080E                     	;# 
   779  080F                     	;# 
   780  0810                     	;# 
   781  0810                     	;# 
   782  0811                     	;# 
   783  0812                     	;# 
   784  0812                     	;# 
   785  0813                     	;# 
   786  0814                     	;# 
   787  0815                     	;# 
   788  0816                     	;# 
   789  0817                     	;# 
   790  0818                     	;# 
   791  0819                     	;# 
   792  081A                     	;# 
   793  081A                     	;# 
   794  081B                     	;# 
   795  081C                     	;# 
   796  081C                     	;# 
   797  081D                     	;# 
   798  088C                     	;# 
   799  088D                     	;# 
   800  088E                     	;# 
   801  088F                     	;# 
   802  088F                     	;# 
   803  0890                     	;# 
   804  0891                     	;# 
   805  0892                     	;# 
   806  0893                     	;# 
   807  0893                     	;# 
   808  0894                     	;# 
   809  0895                     	;# 
   810  0896                     	;# 
   811  0897                     	;# 
   812  0897                     	;# 
   813  0898                     	;# 
   814  0899                     	;# 
   815  0D8C                     	;# 
   816  0D8C                     	;# 
   817  0D8D                     	;# 
   818  0D8E                     	;# 
   819  0D8F                     	;# 
   820  0D8F                     	;# 
   821  0D90                     	;# 
   822  0D91                     	;# 
   823  0D92                     	;# 
   824  0D92                     	;# 
   825  0D93                     	;# 
   826  0D94                     	;# 
   827  0D95                     	;# 
   828  0D95                     	;# 
   829  0D96                     	;# 
   830  0D97                     	;# 
   831  0D98                     	;# 
   832  0D99                     	;# 
   833  0D9A                     	;# 
   834  0D9B                     	;# 
   835  0D9C                     	;# 
   836  0D9D                     	;# 
   837  0D9E                     	;# 
   838  0D9E                     	;# 
   839  0D9F                     	;# 
   840  0DA0                     	;# 
   841  0DA1                     	;# 
   842  0DA1                     	;# 
   843  0DA2                     	;# 
   844  0DA3                     	;# 
   845  0DA4                     	;# 
   846  0DA4                     	;# 
   847  0DA5                     	;# 
   848  0DA6                     	;# 
   849  0DA7                     	;# 
   850  0DA7                     	;# 
   851  0DA8                     	;# 
   852  0DA9                     	;# 
   853  0DAA                     	;# 
   854  0DAB                     	;# 
   855  0DAC                     	;# 
   856  0DAD                     	;# 
   857  0DAE                     	;# 
   858  0DAF                     	;# 
   859  0E0F                     	;# 
   860  0E10                     	;# 
   861  0E11                     	;# 
   862  0E12                     	;# 
   863  0E13                     	;# 
   864  0E14                     	;# 
   865  0E15                     	;# 
   866  0E16                     	;# 
   867  0E17                     	;# 
   868  0E18                     	;# 
   869  0E19                     	;# 
   870  0E1A                     	;# 
   871  0E1B                     	;# 
   872  0E1C                     	;# 
   873  0E1D                     	;# 
   874  0E1E                     	;# 
   875  0E1F                     	;# 
   876  0E20                     	;# 
   877  0E21                     	;# 
   878  0E22                     	;# 
   879  0E23                     	;# 
   880  0E24                     	;# 
   881  0E25                     	;# 
   882  0E26                     	;# 
   883  0E27                     	;# 
   884  0E28                     	;# 
   885  0E29                     	;# 
   886  0E2A                     	;# 
   887  0E2B                     	;# 
   888  0E2C                     	;# 
   889  0E2D                     	;# 
   890  0E2E                     	;# 
   891  0E90                     	;# 
   892  0E91                     	;# 
   893  0E92                     	;# 
   894  0E94                     	;# 
   895  0E95                     	;# 
   896  0E9C                     	;# 
   897  0E9D                     	;# 
   898  0E9E                     	;# 
   899  0E9F                     	;# 
   900  0EA0                     	;# 
   901  0EA1                     	;# 
   902  0EA2                     	;# 
   903  0EA3                     	;# 
   904  0EA4                     	;# 
   905  0EA5                     	;# 
   906  0EA6                     	;# 
   907  0EA7                     	;# 
   908  0F0F                     	;# 
   909  0F10                     	;# 
   910  0F11                     	;# 
   911  0F12                     	;# 
   912  0F13                     	;# 
   913  0F14                     	;# 
   914  0F15                     	;# 
   915  0F16                     	;# 
   916  0F17                     	;# 
   917  0F18                     	;# 
   918  0F19                     	;# 
   919  0F1A                     	;# 
   920  0F1B                     	;# 
   921  0F1C                     	;# 
   922  0F1D                     	;# 
   923  0F1E                     	;# 
   924  0F1F                     	;# 
   925  0F20                     	;# 
   926  0F21                     	;# 
   927  0F22                     	;# 
   928  0F23                     	;# 
   929  0F24                     	;# 
   930  0F25                     	;# 
   931  0F26                     	;# 
   932  0F27                     	;# 
   933  0F28                     	;# 
   934  0F29                     	;# 
   935  0F2A                     	;# 
   936  0F2B                     	;# 
   937  0F2C                     	;# 
   938  0F2D                     	;# 
   939  0F2E                     	;# 
   940  0F2F                     	;# 
   941  0F30                     	;# 
   942  0F31                     	;# 
   943  0F32                     	;# 
   944  0F33                     	;# 
   945  0F34                     	;# 
   946  0F35                     	;# 
   947  0F36                     	;# 
   948  0F37                     	;# 
   949  0FE4                     	;# 
   950  0FE5                     	;# 
   951  0FE6                     	;# 
   952  0FE7                     	;# 
   953  0FE8                     	;# 
   954  0FE9                     	;# 
   955  0FEA                     	;# 
   956  0FEB                     	;# 
   957  0FED                     	;# 
   958  0FEE                     	;# 
   959  0FEF                     	;# 
   960  0000                     	;# 
   961  0001                     	;# 
   962  0002                     	;# 
   963  0003                     	;# 
   964  0004                     	;# 
   965  0005                     	;# 
   966  0006                     	;# 
   967  0007                     	;# 
   968  0008                     	;# 
   969  0009                     	;# 
   970  000A                     	;# 
   971  000B                     	;# 
   972  000C                     	;# 
   973  000D                     	;# 
   974  000E                     	;# 
   975  0010                     	;# 
   976  0011                     	;# 
   977  0012                     	;# 
   978  0013                     	;# 
   979  0014                     	;# 
   980  0015                     	;# 
   981  0016                     	;# 
   982  0016                     	;# 
   983  0017                     	;# 
   984  0018                     	;# 
   985  0019                     	;# 
   986  001A                     	;# 
   987  001A                     	;# 
   988  001B                     	;# 
   989  001B                     	;# 
   990  001C                     	;# 
   991  001D                     	;# 
   992  001E                     	;# 
   993  001F                     	;# 
   994  008C                     	;# 
   995  008D                     	;# 
   996  008E                     	;# 
   997  0090                     	;# 
   998  0091                     	;# 
   999  0092                     	;# 
  1000  0093                     	;# 
  1001  0094                     	;# 
  1002  0095                     	;# 
  1003  0096                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009B                     	;# 
  1009  009C                     	;# 
  1010  009D                     	;# 
  1011  009E                     	;# 
  1012  009F                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  0111                     	;# 
  1017  0112                     	;# 
  1018  0113                     	;# 
  1019  0114                     	;# 
  1020  0115                     	;# 
  1021  0116                     	;# 
  1022  0117                     	;# 
  1023  0118                     	;# 
  1024  0119                     	;# 
  1025  011C                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  0191                     	;# 
  1030  0191                     	;# 
  1031  0192                     	;# 
  1032  0193                     	;# 
  1033  0193                     	;# 
  1034  0194                     	;# 
  1035  0195                     	;# 
  1036  0196                     	;# 
  1037  0197                     	;# 
  1038  0199                     	;# 
  1039  0199                     	;# 
  1040  0199                     	;# 
  1041  019A                     	;# 
  1042  019A                     	;# 
  1043  019A                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019C                     	;# 
  1050  019C                     	;# 
  1051  019C                     	;# 
  1052  019D                     	;# 
  1053  019D                     	;# 
  1054  019D                     	;# 
  1055  019E                     	;# 
  1056  019E                     	;# 
  1057  019E                     	;# 
  1058  019F                     	;# 
  1059  019F                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  020C                     	;# 
  1064  020D                     	;# 
  1065  020E                     	;# 
  1066  0211                     	;# 
  1067  0211                     	;# 
  1068  0212                     	;# 
  1069  0212                     	;# 
  1070  0213                     	;# 
  1071  0213                     	;# 
  1072  0214                     	;# 
  1073  0214                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0216                     	;# 
  1079  0216                     	;# 
  1080  0217                     	;# 
  1081  0217                     	;# 
  1082  028C                     	;# 
  1083  028D                     	;# 
  1084  028E                     	;# 
  1085  0291                     	;# 
  1086  0291                     	;# 
  1087  0292                     	;# 
  1088  0293                     	;# 
  1089  0294                     	;# 
  1090  0298                     	;# 
  1091  0298                     	;# 
  1092  0299                     	;# 
  1093  029A                     	;# 
  1094  029B                     	;# 
  1095  029E                     	;# 
  1096  030C                     	;# 
  1097  030D                     	;# 
  1098  030E                     	;# 
  1099  038C                     	;# 
  1100  038D                     	;# 
  1101  038E                     	;# 
  1102  0391                     	;# 
  1103  0392                     	;# 
  1104  0393                     	;# 
  1105  0394                     	;# 
  1106  0395                     	;# 
  1107  0396                     	;# 
  1108  0397                     	;# 
  1109  0398                     	;# 
  1110  0399                     	;# 
  1111  040E                     	;# 
  1112  0413                     	;# 
  1113  0413                     	;# 
  1114  0414                     	;# 
  1115  0414                     	;# 
  1116  0415                     	;# 
  1117  0416                     	;# 
  1118  0417                     	;# 
  1119  0418                     	;# 
  1120  041A                     	;# 
  1121  041A                     	;# 
  1122  041B                     	;# 
  1123  041B                     	;# 
  1124  041C                     	;# 
  1125  041D                     	;# 
  1126  041E                     	;# 
  1127  041F                     	;# 
  1128  0493                     	;# 
  1129  0494                     	;# 
  1130  0495                     	;# 
  1131  0496                     	;# 
  1132  049A                     	;# 
  1133  049B                     	;# 
  1134  049C                     	;# 
  1135  049D                     	;# 
  1136  058C                     	;# 
  1137  058C                     	;# 
  1138  058D                     	;# 
  1139  058E                     	;# 
  1140  058E                     	;# 
  1141  058F                     	;# 
  1142  0590                     	;# 
  1143  0590                     	;# 
  1144  0591                     	;# 
  1145  0592                     	;# 
  1146  0592                     	;# 
  1147  0593                     	;# 
  1148  0594                     	;# 
  1149  0594                     	;# 
  1150  0595                     	;# 
  1151  0596                     	;# 
  1152  0596                     	;# 
  1153  0597                     	;# 
  1154  0598                     	;# 
  1155  0599                     	;# 
  1156  059A                     	;# 
  1157  059B                     	;# 
  1158  059B                     	;# 
  1159  059C                     	;# 
  1160  059D                     	;# 
  1161  060C                     	;# 
  1162  060C                     	;# 
  1163  060D                     	;# 
  1164  060E                     	;# 
  1165  060F                     	;# 
  1166  060F                     	;# 
  1167  0610                     	;# 
  1168  0611                     	;# 
  1169  0612                     	;# 
  1170  0613                     	;# 
  1171  0614                     	;# 
  1172  0617                     	;# 
  1173  0618                     	;# 
  1174  0619                     	;# 
  1175  061A                     	;# 
  1176  061B                     	;# 
  1177  061C                     	;# 
  1178  0691                     	;# 
  1179  0692                     	;# 
  1180  0693                     	;# 
  1181  0694                     	;# 
  1182  0695                     	;# 
  1183  0696                     	;# 
  1184  0697                     	;# 
  1185  0699                     	;# 
  1186  069A                     	;# 
  1187  0711                     	;# 
  1188  0712                     	;# 
  1189  0713                     	;# 
  1190  0714                     	;# 
  1191  0715                     	;# 
  1192  0718                     	;# 
  1193  0718                     	;# 
  1194  0719                     	;# 
  1195  071A                     	;# 
  1196  071A                     	;# 
  1197  071B                     	;# 
  1198  071C                     	;# 
  1199  071D                     	;# 
  1200  0791                     	;# 
  1201  0791                     	;# 
  1202  0792                     	;# 
  1203  0793                     	;# 
  1204  0793                     	;# 
  1205  0794                     	;# 
  1206  0795                     	;# 
  1207  0795                     	;# 
  1208  0796                     	;# 
  1209  0797                     	;# 
  1210  0797                     	;# 
  1211  0798                     	;# 
  1212  0799                     	;# 
  1213  079A                     	;# 
  1214  080C                     	;# 
  1215  080C                     	;# 
  1216  080D                     	;# 
  1217  080E                     	;# 
  1218  080E                     	;# 
  1219  080F                     	;# 
  1220  0810                     	;# 
  1221  0810                     	;# 
  1222  0811                     	;# 
  1223  0812                     	;# 
  1224  0812                     	;# 
  1225  0813                     	;# 
  1226  0814                     	;# 
  1227  0815                     	;# 
  1228  0816                     	;# 
  1229  0817                     	;# 
  1230  0818                     	;# 
  1231  0819                     	;# 
  1232  081A                     	;# 
  1233  081A                     	;# 
  1234  081B                     	;# 
  1235  081C                     	;# 
  1236  081C                     	;# 
  1237  081D                     	;# 
  1238  088C                     	;# 
  1239  088D                     	;# 
  1240  088E                     	;# 
  1241  088F                     	;# 
  1242  088F                     	;# 
  1243  0890                     	;# 
  1244  0891                     	;# 
  1245  0892                     	;# 
  1246  0893                     	;# 
  1247  0893                     	;# 
  1248  0894                     	;# 
  1249  0895                     	;# 
  1250  0896                     	;# 
  1251  0897                     	;# 
  1252  0897                     	;# 
  1253  0898                     	;# 
  1254  0899                     	;# 
  1255  0D8C                     	;# 
  1256  0D8C                     	;# 
  1257  0D8D                     	;# 
  1258  0D8E                     	;# 
  1259  0D8F                     	;# 
  1260  0D8F                     	;# 
  1261  0D90                     	;# 
  1262  0D91                     	;# 
  1263  0D92                     	;# 
  1264  0D92                     	;# 
  1265  0D93                     	;# 
  1266  0D94                     	;# 
  1267  0D95                     	;# 
  1268  0D95                     	;# 
  1269  0D96                     	;# 
  1270  0D97                     	;# 
  1271  0D98                     	;# 
  1272  0D99                     	;# 
  1273  0D9A                     	;# 
  1274  0D9B                     	;# 
  1275  0D9C                     	;# 
  1276  0D9D                     	;# 
  1277  0D9E                     	;# 
  1278  0D9E                     	;# 
  1279  0D9F                     	;# 
  1280  0DA0                     	;# 
  1281  0DA1                     	;# 
  1282  0DA1                     	;# 
  1283  0DA2                     	;# 
  1284  0DA3                     	;# 
  1285  0DA4                     	;# 
  1286  0DA4                     	;# 
  1287  0DA5                     	;# 
  1288  0DA6                     	;# 
  1289  0DA7                     	;# 
  1290  0DA7                     	;# 
  1291  0DA8                     	;# 
  1292  0DA9                     	;# 
  1293  0DAA                     	;# 
  1294  0DAB                     	;# 
  1295  0DAC                     	;# 
  1296  0DAD                     	;# 
  1297  0DAE                     	;# 
  1298  0DAF                     	;# 
  1299  0E0F                     	;# 
  1300  0E10                     	;# 
  1301  0E11                     	;# 
  1302  0E12                     	;# 
  1303  0E13                     	;# 
  1304  0E14                     	;# 
  1305  0E15                     	;# 
  1306  0E16                     	;# 
  1307  0E17                     	;# 
  1308  0E18                     	;# 
  1309  0E19                     	;# 
  1310  0E1A                     	;# 
  1311  0E1B                     	;# 
  1312  0E1C                     	;# 
  1313  0E1D                     	;# 
  1314  0E1E                     	;# 
  1315  0E1F                     	;# 
  1316  0E20                     	;# 
  1317  0E21                     	;# 
  1318  0E22                     	;# 
  1319  0E23                     	;# 
  1320  0E24                     	;# 
  1321  0E25                     	;# 
  1322  0E26                     	;# 
  1323  0E27                     	;# 
  1324  0E28                     	;# 
  1325  0E29                     	;# 
  1326  0E2A                     	;# 
  1327  0E2B                     	;# 
  1328  0E2C                     	;# 
  1329  0E2D                     	;# 
  1330  0E2E                     	;# 
  1331  0E90                     	;# 
  1332  0E91                     	;# 
  1333  0E92                     	;# 
  1334  0E94                     	;# 
  1335  0E95                     	;# 
  1336  0E9C                     	;# 
  1337  0E9D                     	;# 
  1338  0E9E                     	;# 
  1339  0E9F                     	;# 
  1340  0EA0                     	;# 
  1341  0EA1                     	;# 
  1342  0EA2                     	;# 
  1343  0EA3                     	;# 
  1344  0EA4                     	;# 
  1345  0EA5                     	;# 
  1346  0EA6                     	;# 
  1347  0EA7                     	;# 
  1348  0F0F                     	;# 
  1349  0F10                     	;# 
  1350  0F11                     	;# 
  1351  0F12                     	;# 
  1352  0F13                     	;# 
  1353  0F14                     	;# 
  1354  0F15                     	;# 
  1355  0F16                     	;# 
  1356  0F17                     	;# 
  1357  0F18                     	;# 
  1358  0F19                     	;# 
  1359  0F1A                     	;# 
  1360  0F1B                     	;# 
  1361  0F1C                     	;# 
  1362  0F1D                     	;# 
  1363  0F1E                     	;# 
  1364  0F1F                     	;# 
  1365  0F20                     	;# 
  1366  0F21                     	;# 
  1367  0F22                     	;# 
  1368  0F23                     	;# 
  1369  0F24                     	;# 
  1370  0F25                     	;# 
  1371  0F26                     	;# 
  1372  0F27                     	;# 
  1373  0F28                     	;# 
  1374  0F29                     	;# 
  1375  0F2A                     	;# 
  1376  0F2B                     	;# 
  1377  0F2C                     	;# 
  1378  0F2D                     	;# 
  1379  0F2E                     	;# 
  1380  0F2F                     	;# 
  1381  0F30                     	;# 
  1382  0F31                     	;# 
  1383  0F32                     	;# 
  1384  0F33                     	;# 
  1385  0F34                     	;# 
  1386  0F35                     	;# 
  1387  0F36                     	;# 
  1388  0F37                     	;# 
  1389  0FE4                     	;# 
  1390  0FE5                     	;# 
  1391  0FE6                     	;# 
  1392  0FE7                     	;# 
  1393  0FE8                     	;# 
  1394  0FE9                     	;# 
  1395  0FEA                     	;# 
  1396  0FEB                     	;# 
  1397  0FED                     	;# 
  1398  0FEE                     	;# 
  1399  0FEF                     	;# 
  1400  0000                     	;# 
  1401  0001                     	;# 
  1402  0002                     	;# 
  1403  0003                     	;# 
  1404  0004                     	;# 
  1405  0005                     	;# 
  1406  0006                     	;# 
  1407  0007                     	;# 
  1408  0008                     	;# 
  1409  0009                     	;# 
  1410  000A                     	;# 
  1411  000B                     	;# 
  1412  000C                     	;# 
  1413  000D                     	;# 
  1414  000E                     	;# 
  1415  0010                     	;# 
  1416  0011                     	;# 
  1417  0012                     	;# 
  1418  0013                     	;# 
  1419  0014                     	;# 
  1420  0015                     	;# 
  1421  0016                     	;# 
  1422  0016                     	;# 
  1423  0017                     	;# 
  1424  0018                     	;# 
  1425  0019                     	;# 
  1426  001A                     	;# 
  1427  001A                     	;# 
  1428  001B                     	;# 
  1429  001B                     	;# 
  1430  001C                     	;# 
  1431  001D                     	;# 
  1432  001E                     	;# 
  1433  001F                     	;# 
  1434  008C                     	;# 
  1435  008D                     	;# 
  1436  008E                     	;# 
  1437  0090                     	;# 
  1438  0091                     	;# 
  1439  0092                     	;# 
  1440  0093                     	;# 
  1441  0094                     	;# 
  1442  0095                     	;# 
  1443  0096                     	;# 
  1444  0098                     	;# 
  1445  0099                     	;# 
  1446  009A                     	;# 
  1447  009B                     	;# 
  1448  009B                     	;# 
  1449  009C                     	;# 
  1450  009D                     	;# 
  1451  009E                     	;# 
  1452  009F                     	;# 
  1453  010C                     	;# 
  1454  010D                     	;# 
  1455  010E                     	;# 
  1456  0111                     	;# 
  1457  0112                     	;# 
  1458  0113                     	;# 
  1459  0114                     	;# 
  1460  0115                     	;# 
  1461  0116                     	;# 
  1462  0117                     	;# 
  1463  0118                     	;# 
  1464  0119                     	;# 
  1465  011C                     	;# 
  1466  018C                     	;# 
  1467  018D                     	;# 
  1468  018E                     	;# 
  1469  0191                     	;# 
  1470  0191                     	;# 
  1471  0192                     	;# 
  1472  0193                     	;# 
  1473  0193                     	;# 
  1474  0194                     	;# 
  1475  0195                     	;# 
  1476  0196                     	;# 
  1477  0197                     	;# 
  1478  0199                     	;# 
  1479  0199                     	;# 
  1480  0199                     	;# 
  1481  019A                     	;# 
  1482  019A                     	;# 
  1483  019A                     	;# 
  1484  019B                     	;# 
  1485  019B                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019C                     	;# 
  1490  019C                     	;# 
  1491  019C                     	;# 
  1492  019D                     	;# 
  1493  019D                     	;# 
  1494  019D                     	;# 
  1495  019E                     	;# 
  1496  019E                     	;# 
  1497  019E                     	;# 
  1498  019F                     	;# 
  1499  019F                     	;# 
  1500  019F                     	;# 
  1501  019F                     	;# 
  1502  019F                     	;# 
  1503  020C                     	;# 
  1504  020D                     	;# 
  1505  020E                     	;# 
  1506  0211                     	;# 
  1507  0211                     	;# 
  1508  0212                     	;# 
  1509  0212                     	;# 
  1510  0213                     	;# 
  1511  0213                     	;# 
  1512  0214                     	;# 
  1513  0214                     	;# 
  1514  0215                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0216                     	;# 
  1519  0216                     	;# 
  1520  0217                     	;# 
  1521  0217                     	;# 
  1522  028C                     	;# 
  1523  028D                     	;# 
  1524  028E                     	;# 
  1525  0291                     	;# 
  1526  0291                     	;# 
  1527  0292                     	;# 
  1528  0293                     	;# 
  1529  0294                     	;# 
  1530  0298                     	;# 
  1531  0298                     	;# 
  1532  0299                     	;# 
  1533  029A                     	;# 
  1534  029B                     	;# 
  1535  029E                     	;# 
  1536  030C                     	;# 
  1537  030D                     	;# 
  1538  030E                     	;# 
  1539  038C                     	;# 
  1540  038D                     	;# 
  1541  038E                     	;# 
  1542  0391                     	;# 
  1543  0392                     	;# 
  1544  0393                     	;# 
  1545  0394                     	;# 
  1546  0395                     	;# 
  1547  0396                     	;# 
  1548  0397                     	;# 
  1549  0398                     	;# 
  1550  0399                     	;# 
  1551  040E                     	;# 
  1552  0413                     	;# 
  1553  0413                     	;# 
  1554  0414                     	;# 
  1555  0414                     	;# 
  1556  0415                     	;# 
  1557  0416                     	;# 
  1558  0417                     	;# 
  1559  0418                     	;# 
  1560  041A                     	;# 
  1561  041A                     	;# 
  1562  041B                     	;# 
  1563  041B                     	;# 
  1564  041C                     	;# 
  1565  041D                     	;# 
  1566  041E                     	;# 
  1567  041F                     	;# 
  1568  0493                     	;# 
  1569  0494                     	;# 
  1570  0495                     	;# 
  1571  0496                     	;# 
  1572  049A                     	;# 
  1573  049B                     	;# 
  1574  049C                     	;# 
  1575  049D                     	;# 
  1576  058C                     	;# 
  1577  058C                     	;# 
  1578  058D                     	;# 
  1579  058E                     	;# 
  1580  058E                     	;# 
  1581  058F                     	;# 
  1582  0590                     	;# 
  1583  0590                     	;# 
  1584  0591                     	;# 
  1585  0592                     	;# 
  1586  0592                     	;# 
  1587  0593                     	;# 
  1588  0594                     	;# 
  1589  0594                     	;# 
  1590  0595                     	;# 
  1591  0596                     	;# 
  1592  0596                     	;# 
  1593  0597                     	;# 
  1594  0598                     	;# 
  1595  0599                     	;# 
  1596  059A                     	;# 
  1597  059B                     	;# 
  1598  059B                     	;# 
  1599  059C                     	;# 
  1600  059D                     	;# 
  1601  060C                     	;# 
  1602  060C                     	;# 
  1603  060D                     	;# 
  1604  060E                     	;# 
  1605  060F                     	;# 
  1606  060F                     	;# 
  1607  0610                     	;# 
  1608  0611                     	;# 
  1609  0612                     	;# 
  1610  0613                     	;# 
  1611  0614                     	;# 
  1612  0617                     	;# 
  1613  0618                     	;# 
  1614  0619                     	;# 
  1615  061A                     	;# 
  1616  061B                     	;# 
  1617  061C                     	;# 
  1618  0691                     	;# 
  1619  0692                     	;# 
  1620  0693                     	;# 
  1621  0694                     	;# 
  1622  0695                     	;# 
  1623  0696                     	;# 
  1624  0697                     	;# 
  1625  0699                     	;# 
  1626  069A                     	;# 
  1627  0711                     	;# 
  1628  0712                     	;# 
  1629  0713                     	;# 
  1630  0714                     	;# 
  1631  0715                     	;# 
  1632  0718                     	;# 
  1633  0718                     	;# 
  1634  0719                     	;# 
  1635  071A                     	;# 
  1636  071A                     	;# 
  1637  071B                     	;# 
  1638  071C                     	;# 
  1639  071D                     	;# 
  1640  0791                     	;# 
  1641  0791                     	;# 
  1642  0792                     	;# 
  1643  0793                     	;# 
  1644  0793                     	;# 
  1645  0794                     	;# 
  1646  0795                     	;# 
  1647  0795                     	;# 
  1648  0796                     	;# 
  1649  0797                     	;# 
  1650  0797                     	;# 
  1651  0798                     	;# 
  1652  0799                     	;# 
  1653  079A                     	;# 
  1654  080C                     	;# 
  1655  080C                     	;# 
  1656  080D                     	;# 
  1657  080E                     	;# 
  1658  080E                     	;# 
  1659  080F                     	;# 
  1660  0810                     	;# 
  1661  0810                     	;# 
  1662  0811                     	;# 
  1663  0812                     	;# 
  1664  0812                     	;# 
  1665  0813                     	;# 
  1666  0814                     	;# 
  1667  0815                     	;# 
  1668  0816                     	;# 
  1669  0817                     	;# 
  1670  0818                     	;# 
  1671  0819                     	;# 
  1672  081A                     	;# 
  1673  081A                     	;# 
  1674  081B                     	;# 
  1675  081C                     	;# 
  1676  081C                     	;# 
  1677  081D                     	;# 
  1678  088C                     	;# 
  1679  088D                     	;# 
  1680  088E                     	;# 
  1681  088F                     	;# 
  1682  088F                     	;# 
  1683  0890                     	;# 
  1684  0891                     	;# 
  1685  0892                     	;# 
  1686  0893                     	;# 
  1687  0893                     	;# 
  1688  0894                     	;# 
  1689  0895                     	;# 
  1690  0896                     	;# 
  1691  0897                     	;# 
  1692  0897                     	;# 
  1693  0898                     	;# 
  1694  0899                     	;# 
  1695  0D8C                     	;# 
  1696  0D8C                     	;# 
  1697  0D8D                     	;# 
  1698  0D8E                     	;# 
  1699  0D8F                     	;# 
  1700  0D8F                     	;# 
  1701  0D90                     	;# 
  1702  0D91                     	;# 
  1703  0D92                     	;# 
  1704  0D92                     	;# 
  1705  0D93                     	;# 
  1706  0D94                     	;# 
  1707  0D95                     	;# 
  1708  0D95                     	;# 
  1709  0D96                     	;# 
  1710  0D97                     	;# 
  1711  0D98                     	;# 
  1712  0D99                     	;# 
  1713  0D9A                     	;# 
  1714  0D9B                     	;# 
  1715  0D9C                     	;# 
  1716  0D9D                     	;# 
  1717  0D9E                     	;# 
  1718  0D9E                     	;# 
  1719  0D9F                     	;# 
  1720  0DA0                     	;# 
  1721  0DA1                     	;# 
  1722  0DA1                     	;# 
  1723  0DA2                     	;# 
  1724  0DA3                     	;# 
  1725  0DA4                     	;# 
  1726  0DA4                     	;# 
  1727  0DA5                     	;# 
  1728  0DA6                     	;# 
  1729  0DA7                     	;# 
  1730  0DA7                     	;# 
  1731  0DA8                     	;# 
  1732  0DA9                     	;# 
  1733  0DAA                     	;# 
  1734  0DAB                     	;# 
  1735  0DAC                     	;# 
  1736  0DAD                     	;# 
  1737  0DAE                     	;# 
  1738  0DAF                     	;# 
  1739  0E0F                     	;# 
  1740  0E10                     	;# 
  1741  0E11                     	;# 
  1742  0E12                     	;# 
  1743  0E13                     	;# 
  1744  0E14                     	;# 
  1745  0E15                     	;# 
  1746  0E16                     	;# 
  1747  0E17                     	;# 
  1748  0E18                     	;# 
  1749  0E19                     	;# 
  1750  0E1A                     	;# 
  1751  0E1B                     	;# 
  1752  0E1C                     	;# 
  1753  0E1D                     	;# 
  1754  0E1E                     	;# 
  1755  0E1F                     	;# 
  1756  0E20                     	;# 
  1757  0E21                     	;# 
  1758  0E22                     	;# 
  1759  0E23                     	;# 
  1760  0E24                     	;# 
  1761  0E25                     	;# 
  1762  0E26                     	;# 
  1763  0E27                     	;# 
  1764  0E28                     	;# 
  1765  0E29                     	;# 
  1766  0E2A                     	;# 
  1767  0E2B                     	;# 
  1768  0E2C                     	;# 
  1769  0E2D                     	;# 
  1770  0E2E                     	;# 
  1771  0E90                     	;# 
  1772  0E91                     	;# 
  1773  0E92                     	;# 
  1774  0E94                     	;# 
  1775  0E95                     	;# 
  1776  0E9C                     	;# 
  1777  0E9D                     	;# 
  1778  0E9E                     	;# 
  1779  0E9F                     	;# 
  1780  0EA0                     	;# 
  1781  0EA1                     	;# 
  1782  0EA2                     	;# 
  1783  0EA3                     	;# 
  1784  0EA4                     	;# 
  1785  0EA5                     	;# 
  1786  0EA6                     	;# 
  1787  0EA7                     	;# 
  1788  0F0F                     	;# 
  1789  0F10                     	;# 
  1790  0F11                     	;# 
  1791  0F12                     	;# 
  1792  0F13                     	;# 
  1793  0F14                     	;# 
  1794  0F15                     	;# 
  1795  0F16                     	;# 
  1796  0F17                     	;# 
  1797  0F18                     	;# 
  1798  0F19                     	;# 
  1799  0F1A                     	;# 
  1800  0F1B                     	;# 
  1801  0F1C                     	;# 
  1802  0F1D                     	;# 
  1803  0F1E                     	;# 
  1804  0F1F                     	;# 
  1805  0F20                     	;# 
  1806  0F21                     	;# 
  1807  0F22                     	;# 
  1808  0F23                     	;# 
  1809  0F24                     	;# 
  1810  0F25                     	;# 
  1811  0F26                     	;# 
  1812  0F27                     	;# 
  1813  0F28                     	;# 
  1814  0F29                     	;# 
  1815  0F2A                     	;# 
  1816  0F2B                     	;# 
  1817  0F2C                     	;# 
  1818  0F2D                     	;# 
  1819  0F2E                     	;# 
  1820  0F2F                     	;# 
  1821  0F30                     	;# 
  1822  0F31                     	;# 
  1823  0F32                     	;# 
  1824  0F33                     	;# 
  1825  0F34                     	;# 
  1826  0F35                     	;# 
  1827  0F36                     	;# 
  1828  0F37                     	;# 
  1829  0FE4                     	;# 
  1830  0FE5                     	;# 
  1831  0FE6                     	;# 
  1832  0FE7                     	;# 
  1833  0FE8                     	;# 
  1834  0FE9                     	;# 
  1835  0FEA                     	;# 
  1836  0FEB                     	;# 
  1837  0FED                     	;# 
  1838  0FEE                     	;# 
  1839  0FEF                     	;# 
  1840  0000                     	;# 
  1841  0001                     	;# 
  1842  0002                     	;# 
  1843  0003                     	;# 
  1844  0004                     	;# 
  1845  0005                     	;# 
  1846  0006                     	;# 
  1847  0007                     	;# 
  1848  0008                     	;# 
  1849  0009                     	;# 
  1850  000A                     	;# 
  1851  000B                     	;# 
  1852  000C                     	;# 
  1853  000D                     	;# 
  1854  000E                     	;# 
  1855  0010                     	;# 
  1856  0011                     	;# 
  1857  0012                     	;# 
  1858  0013                     	;# 
  1859  0014                     	;# 
  1860  0015                     	;# 
  1861  0016                     	;# 
  1862  0016                     	;# 
  1863  0017                     	;# 
  1864  0018                     	;# 
  1865  0019                     	;# 
  1866  001A                     	;# 
  1867  001A                     	;# 
  1868  001B                     	;# 
  1869  001B                     	;# 
  1870  001C                     	;# 
  1871  001D                     	;# 
  1872  001E                     	;# 
  1873  001F                     	;# 
  1874  008C                     	;# 
  1875  008D                     	;# 
  1876  008E                     	;# 
  1877  0090                     	;# 
  1878  0091                     	;# 
  1879  0092                     	;# 
  1880  0093                     	;# 
  1881  0094                     	;# 
  1882  0095                     	;# 
  1883  0096                     	;# 
  1884  0098                     	;# 
  1885  0099                     	;# 
  1886  009A                     	;# 
  1887  009B                     	;# 
  1888  009B                     	;# 
  1889  009C                     	;# 
  1890  009D                     	;# 
  1891  009E                     	;# 
  1892  009F                     	;# 
  1893  010C                     	;# 
  1894  010D                     	;# 
  1895  010E                     	;# 
  1896  0111                     	;# 
  1897  0112                     	;# 
  1898  0113                     	;# 
  1899  0114                     	;# 
  1900  0115                     	;# 
  1901  0116                     	;# 
  1902  0117                     	;# 
  1903  0118                     	;# 
  1904  0119                     	;# 
  1905  011C                     	;# 
  1906  018C                     	;# 
  1907  018D                     	;# 
  1908  018E                     	;# 
  1909  0191                     	;# 
  1910  0191                     	;# 
  1911  0192                     	;# 
  1912  0193                     	;# 
  1913  0193                     	;# 
  1914  0194                     	;# 
  1915  0195                     	;# 
  1916  0196                     	;# 
  1917  0197                     	;# 
  1918  0199                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  019A                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019C                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019E                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019F                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  020C                     	;# 
  1944  020D                     	;# 
  1945  020E                     	;# 
  1946  0211                     	;# 
  1947  0211                     	;# 
  1948  0212                     	;# 
  1949  0212                     	;# 
  1950  0213                     	;# 
  1951  0213                     	;# 
  1952  0214                     	;# 
  1953  0214                     	;# 
  1954  0215                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0216                     	;# 
  1959  0216                     	;# 
  1960  0217                     	;# 
  1961  0217                     	;# 
  1962  028C                     	;# 
  1963  028D                     	;# 
  1964  028E                     	;# 
  1965  0291                     	;# 
  1966  0291                     	;# 
  1967  0292                     	;# 
  1968  0293                     	;# 
  1969  0294                     	;# 
  1970  0298                     	;# 
  1971  0298                     	;# 
  1972  0299                     	;# 
  1973  029A                     	;# 
  1974  029B                     	;# 
  1975  029E                     	;# 
  1976  030C                     	;# 
  1977  030D                     	;# 
  1978  030E                     	;# 
  1979  038C                     	;# 
  1980  038D                     	;# 
  1981  038E                     	;# 
  1982  0391                     	;# 
  1983  0392                     	;# 
  1984  0393                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  0397                     	;# 
  1989  0398                     	;# 
  1990  0399                     	;# 
  1991  040E                     	;# 
  1992  0413                     	;# 
  1993  0413                     	;# 
  1994  0414                     	;# 
  1995  0414                     	;# 
  1996  0415                     	;# 
  1997  0416                     	;# 
  1998  0417                     	;# 
  1999  0418                     	;# 
  2000  041A                     	;# 
  2001  041A                     	;# 
  2002  041B                     	;# 
  2003  041B                     	;# 
  2004  041C                     	;# 
  2005  041D                     	;# 
  2006  041E                     	;# 
  2007  041F                     	;# 
  2008  0493                     	;# 
  2009  0494                     	;# 
  2010  0495                     	;# 
  2011  0496                     	;# 
  2012  049A                     	;# 
  2013  049B                     	;# 
  2014  049C                     	;# 
  2015  049D                     	;# 
  2016  058C                     	;# 
  2017  058C                     	;# 
  2018  058D                     	;# 
  2019  058E                     	;# 
  2020  058E                     	;# 
  2021  058F                     	;# 
  2022  0590                     	;# 
  2023  0590                     	;# 
  2024  0591                     	;# 
  2025  0592                     	;# 
  2026  0592                     	;# 
  2027  0593                     	;# 
  2028  0594                     	;# 
  2029  0594                     	;# 
  2030  0595                     	;# 
  2031  0596                     	;# 
  2032  0596                     	;# 
  2033  0597                     	;# 
  2034  0598                     	;# 
  2035  0599                     	;# 
  2036  059A                     	;# 
  2037  059B                     	;# 
  2038  059B                     	;# 
  2039  059C                     	;# 
  2040  059D                     	;# 
  2041  060C                     	;# 
  2042  060C                     	;# 
  2043  060D                     	;# 
  2044  060E                     	;# 
  2045  060F                     	;# 
  2046  060F                     	;# 
  2047  0610                     	;# 
  2048  0611                     	;# 
  2049  0612                     	;# 
  2050  0613                     	;# 
  2051  0614                     	;# 
  2052  0617                     	;# 
  2053  0618                     	;# 
  2054  0619                     	;# 
  2055  061A                     	;# 
  2056  061B                     	;# 
  2057  061C                     	;# 
  2058  0691                     	;# 
  2059  0692                     	;# 
  2060  0693                     	;# 
  2061  0694                     	;# 
  2062  0695                     	;# 
  2063  0696                     	;# 
  2064  0697                     	;# 
  2065  0699                     	;# 
  2066  069A                     	;# 
  2067  0711                     	;# 
  2068  0712                     	;# 
  2069  0713                     	;# 
  2070  0714                     	;# 
  2071  0715                     	;# 
  2072  0718                     	;# 
  2073  0718                     	;# 
  2074  0719                     	;# 
  2075  071A                     	;# 
  2076  071A                     	;# 
  2077  071B                     	;# 
  2078  071C                     	;# 
  2079  071D                     	;# 
  2080  0791                     	;# 
  2081  0791                     	;# 
  2082  0792                     	;# 
  2083  0793                     	;# 
  2084  0793                     	;# 
  2085  0794                     	;# 
  2086  0795                     	;# 
  2087  0795                     	;# 
  2088  0796                     	;# 
  2089  0797                     	;# 
  2090  0797                     	;# 
  2091  0798                     	;# 
  2092  0799                     	;# 
  2093  079A                     	;# 
  2094  080C                     	;# 
  2095  080C                     	;# 
  2096  080D                     	;# 
  2097  080E                     	;# 
  2098  080E                     	;# 
  2099  080F                     	;# 
  2100  0810                     	;# 
  2101  0810                     	;# 
  2102  0811                     	;# 
  2103  0812                     	;# 
  2104  0812                     	;# 
  2105  0813                     	;# 
  2106  0814                     	;# 
  2107  0815                     	;# 
  2108  0816                     	;# 
  2109  0817                     	;# 
  2110  0818                     	;# 
  2111  0819                     	;# 
  2112  081A                     	;# 
  2113  081A                     	;# 
  2114  081B                     	;# 
  2115  081C                     	;# 
  2116  081C                     	;# 
  2117  081D                     	;# 
  2118  088C                     	;# 
  2119  088D                     	;# 
  2120  088E                     	;# 
  2121  088F                     	;# 
  2122  088F                     	;# 
  2123  0890                     	;# 
  2124  0891                     	;# 
  2125  0892                     	;# 
  2126  0893                     	;# 
  2127  0893                     	;# 
  2128  0894                     	;# 
  2129  0895                     	;# 
  2130  0896                     	;# 
  2131  0897                     	;# 
  2132  0897                     	;# 
  2133  0898                     	;# 
  2134  0899                     	;# 
  2135  0D8C                     	;# 
  2136  0D8C                     	;# 
  2137  0D8D                     	;# 
  2138  0D8E                     	;# 
  2139  0D8F                     	;# 
  2140  0D8F                     	;# 
  2141  0D90                     	;# 
  2142  0D91                     	;# 
  2143  0D92                     	;# 
  2144  0D92                     	;# 
  2145  0D93                     	;# 
  2146  0D94                     	;# 
  2147  0D95                     	;# 
  2148  0D95                     	;# 
  2149  0D96                     	;# 
  2150  0D97                     	;# 
  2151  0D98                     	;# 
  2152  0D99                     	;# 
  2153  0D9A                     	;# 
  2154  0D9B                     	;# 
  2155  0D9C                     	;# 
  2156  0D9D                     	;# 
  2157  0D9E                     	;# 
  2158  0D9E                     	;# 
  2159  0D9F                     	;# 
  2160  0DA0                     	;# 
  2161  0DA1                     	;# 
  2162  0DA1                     	;# 
  2163  0DA2                     	;# 
  2164  0DA3                     	;# 
  2165  0DA4                     	;# 
  2166  0DA4                     	;# 
  2167  0DA5                     	;# 
  2168  0DA6                     	;# 
  2169  0DA7                     	;# 
  2170  0DA7                     	;# 
  2171  0DA8                     	;# 
  2172  0DA9                     	;# 
  2173  0DAA                     	;# 
  2174  0DAB                     	;# 
  2175  0DAC                     	;# 
  2176  0DAD                     	;# 
  2177  0DAE                     	;# 
  2178  0DAF                     	;# 
  2179  0E0F                     	;# 
  2180  0E10                     	;# 
  2181  0E11                     	;# 
  2182  0E12                     	;# 
  2183  0E13                     	;# 
  2184  0E14                     	;# 
  2185  0E15                     	;# 
  2186  0E16                     	;# 
  2187  0E17                     	;# 
  2188  0E18                     	;# 
  2189  0E19                     	;# 
  2190  0E1A                     	;# 
  2191  0E1B                     	;# 
  2192  0E1C                     	;# 
  2193  0E1D                     	;# 
  2194  0E1E                     	;# 
  2195  0E1F                     	;# 
  2196  0E20                     	;# 
  2197  0E21                     	;# 
  2198  0E22                     	;# 
  2199  0E23                     	;# 
  2200  0E24                     	;# 
  2201  0E25                     	;# 
  2202  0E26                     	;# 
  2203  0E27                     	;# 
  2204  0E28                     	;# 
  2205  0E29                     	;# 
  2206  0E2A                     	;# 
  2207  0E2B                     	;# 
  2208  0E2C                     	;# 
  2209  0E2D                     	;# 
  2210  0E2E                     	;# 
  2211  0E90                     	;# 
  2212  0E91                     	;# 
  2213  0E92                     	;# 
  2214  0E94                     	;# 
  2215  0E95                     	;# 
  2216  0E9C                     	;# 
  2217  0E9D                     	;# 
  2218  0E9E                     	;# 
  2219  0E9F                     	;# 
  2220  0EA0                     	;# 
  2221  0EA1                     	;# 
  2222  0EA2                     	;# 
  2223  0EA3                     	;# 
  2224  0EA4                     	;# 
  2225  0EA5                     	;# 
  2226  0EA6                     	;# 
  2227  0EA7                     	;# 
  2228  0F0F                     	;# 
  2229  0F10                     	;# 
  2230  0F11                     	;# 
  2231  0F12                     	;# 
  2232  0F13                     	;# 
  2233  0F14                     	;# 
  2234  0F15                     	;# 
  2235  0F16                     	;# 
  2236  0F17                     	;# 
  2237  0F18                     	;# 
  2238  0F19                     	;# 
  2239  0F1A                     	;# 
  2240  0F1B                     	;# 
  2241  0F1C                     	;# 
  2242  0F1D                     	;# 
  2243  0F1E                     	;# 
  2244  0F1F                     	;# 
  2245  0F20                     	;# 
  2246  0F21                     	;# 
  2247  0F22                     	;# 
  2248  0F23                     	;# 
  2249  0F24                     	;# 
  2250  0F25                     	;# 
  2251  0F26                     	;# 
  2252  0F27                     	;# 
  2253  0F28                     	;# 
  2254  0F29                     	;# 
  2255  0F2A                     	;# 
  2256  0F2B                     	;# 
  2257  0F2C                     	;# 
  2258  0F2D                     	;# 
  2259  0F2E                     	;# 
  2260  0F2F                     	;# 
  2261  0F30                     	;# 
  2262  0F31                     	;# 
  2263  0F32                     	;# 
  2264  0F33                     	;# 
  2265  0F34                     	;# 
  2266  0F35                     	;# 
  2267  0F36                     	;# 
  2268  0F37                     	;# 
  2269  0FE4                     	;# 
  2270  0FE5                     	;# 
  2271  0FE6                     	;# 
  2272  0FE7                     	;# 
  2273  0FE8                     	;# 
  2274  0FE9                     	;# 
  2275  0FEA                     	;# 
  2276  0FEB                     	;# 
  2277  0FED                     	;# 
  2278  0FEE                     	;# 
  2279  0FEF                     	;# 
  2280  0000                     	;# 
  2281  0001                     	;# 
  2282  0002                     	;# 
  2283  0003                     	;# 
  2284  0004                     	;# 
  2285  0005                     	;# 
  2286  0006                     	;# 
  2287  0007                     	;# 
  2288  0008                     	;# 
  2289  0009                     	;# 
  2290  000A                     	;# 
  2291  000B                     	;# 
  2292  000C                     	;# 
  2293  000D                     	;# 
  2294  000E                     	;# 
  2295  0010                     	;# 
  2296  0011                     	;# 
  2297  0012                     	;# 
  2298  0013                     	;# 
  2299  0014                     	;# 
  2300  0015                     	;# 
  2301  0016                     	;# 
  2302  0016                     	;# 
  2303  0017                     	;# 
  2304  0018                     	;# 
  2305  0019                     	;# 
  2306  001A                     	;# 
  2307  001A                     	;# 
  2308  001B                     	;# 
  2309  001B                     	;# 
  2310  001C                     	;# 
  2311  001D                     	;# 
  2312  001E                     	;# 
  2313  001F                     	;# 
  2314  008C                     	;# 
  2315  008D                     	;# 
  2316  008E                     	;# 
  2317  0090                     	;# 
  2318  0091                     	;# 
  2319  0092                     	;# 
  2320  0093                     	;# 
  2321  0094                     	;# 
  2322  0095                     	;# 
  2323  0096                     	;# 
  2324  0098                     	;# 
  2325  0099                     	;# 
  2326  009A                     	;# 
  2327  009B                     	;# 
  2328  009B                     	;# 
  2329  009C                     	;# 
  2330  009D                     	;# 
  2331  009E                     	;# 
  2332  009F                     	;# 
  2333  010C                     	;# 
  2334  010D                     	;# 
  2335  010E                     	;# 
  2336  0111                     	;# 
  2337  0112                     	;# 
  2338  0113                     	;# 
  2339  0114                     	;# 
  2340  0115                     	;# 
  2341  0116                     	;# 
  2342  0117                     	;# 
  2343  0118                     	;# 
  2344  0119                     	;# 
  2345  011C                     	;# 
  2346  018C                     	;# 
  2347  018D                     	;# 
  2348  018E                     	;# 
  2349  0191                     	;# 
  2350  0191                     	;# 
  2351  0192                     	;# 
  2352  0193                     	;# 
  2353  0193                     	;# 
  2354  0194                     	;# 
  2355  0195                     	;# 
  2356  0196                     	;# 
  2357  0197                     	;# 
  2358  0199                     	;# 
  2359  0199                     	;# 
  2360  0199                     	;# 
  2361  019A                     	;# 
  2362  019A                     	;# 
  2363  019A                     	;# 
  2364  019B                     	;# 
  2365  019B                     	;# 
  2366  019B                     	;# 
  2367  019B                     	;# 
  2368  019B                     	;# 
  2369  019C                     	;# 
  2370  019C                     	;# 
  2371  019C                     	;# 
  2372  019D                     	;# 
  2373  019D                     	;# 
  2374  019D                     	;# 
  2375  019E                     	;# 
  2376  019E                     	;# 
  2377  019E                     	;# 
  2378  019F                     	;# 
  2379  019F                     	;# 
  2380  019F                     	;# 
  2381  019F                     	;# 
  2382  019F                     	;# 
  2383  020C                     	;# 
  2384  020D                     	;# 
  2385  020E                     	;# 
  2386  0211                     	;# 
  2387  0211                     	;# 
  2388  0212                     	;# 
  2389  0212                     	;# 
  2390  0213                     	;# 
  2391  0213                     	;# 
  2392  0214                     	;# 
  2393  0214                     	;# 
  2394  0215                     	;# 
  2395  0215                     	;# 
  2396  0215                     	;# 
  2397  0215                     	;# 
  2398  0216                     	;# 
  2399  0216                     	;# 
  2400  0217                     	;# 
  2401  0217                     	;# 
  2402  028C                     	;# 
  2403  028D                     	;# 
  2404  028E                     	;# 
  2405  0291                     	;# 
  2406  0291                     	;# 
  2407  0292                     	;# 
  2408  0293                     	;# 
  2409  0294                     	;# 
  2410  0298                     	;# 
  2411  0298                     	;# 
  2412  0299                     	;# 
  2413  029A                     	;# 
  2414  029B                     	;# 
  2415  029E                     	;# 
  2416  030C                     	;# 
  2417  030D                     	;# 
  2418  030E                     	;# 
  2419  038C                     	;# 
  2420  038D                     	;# 
  2421  038E                     	;# 
  2422  0391                     	;# 
  2423  0392                     	;# 
  2424  0393                     	;# 
  2425  0394                     	;# 
  2426  0395                     	;# 
  2427  0396                     	;# 
  2428  0397                     	;# 
  2429  0398                     	;# 
  2430  0399                     	;# 
  2431  040E                     	;# 
  2432  0413                     	;# 
  2433  0413                     	;# 
  2434  0414                     	;# 
  2435  0414                     	;# 
  2436  0415                     	;# 
  2437  0416                     	;# 
  2438  0417                     	;# 
  2439  0418                     	;# 
  2440  041A                     	;# 
  2441  041A                     	;# 
  2442  041B                     	;# 
  2443  041B                     	;# 
  2444  041C                     	;# 
  2445  041D                     	;# 
  2446  041E                     	;# 
  2447  041F                     	;# 
  2448  0493                     	;# 
  2449  0494                     	;# 
  2450  0495                     	;# 
  2451  0496                     	;# 
  2452  049A                     	;# 
  2453  049B                     	;# 
  2454  049C                     	;# 
  2455  049D                     	;# 
  2456  058C                     	;# 
  2457  058C                     	;# 
  2458  058D                     	;# 
  2459  058E                     	;# 
  2460  058E                     	;# 
  2461  058F                     	;# 
  2462  0590                     	;# 
  2463  0590                     	;# 
  2464  0591                     	;# 
  2465  0592                     	;# 
  2466  0592                     	;# 
  2467  0593                     	;# 
  2468  0594                     	;# 
  2469  0594                     	;# 
  2470  0595                     	;# 
  2471  0596                     	;# 
  2472  0596                     	;# 
  2473  0597                     	;# 
  2474  0598                     	;# 
  2475  0599                     	;# 
  2476  059A                     	;# 
  2477  059B                     	;# 
  2478  059B                     	;# 
  2479  059C                     	;# 
  2480  059D                     	;# 
  2481  060C                     	;# 
  2482  060C                     	;# 
  2483  060D                     	;# 
  2484  060E                     	;# 
  2485  060F                     	;# 
  2486  060F                     	;# 
  2487  0610                     	;# 
  2488  0611                     	;# 
  2489  0612                     	;# 
  2490  0613                     	;# 
  2491  0614                     	;# 
  2492  0617                     	;# 
  2493  0618                     	;# 
  2494  0619                     	;# 
  2495  061A                     	;# 
  2496  061B                     	;# 
  2497  061C                     	;# 
  2498  0691                     	;# 
  2499  0692                     	;# 
  2500  0693                     	;# 
  2501  0694                     	;# 
  2502  0695                     	;# 
  2503  0696                     	;# 
  2504  0697                     	;# 
  2505  0699                     	;# 
  2506  069A                     	;# 
  2507  0711                     	;# 
  2508  0712                     	;# 
  2509  0713                     	;# 
  2510  0714                     	;# 
  2511  0715                     	;# 
  2512  0718                     	;# 
  2513  0718                     	;# 
  2514  0719                     	;# 
  2515  071A                     	;# 
  2516  071A                     	;# 
  2517  071B                     	;# 
  2518  071C                     	;# 
  2519  071D                     	;# 
  2520  0791                     	;# 
  2521  0791                     	;# 
  2522  0792                     	;# 
  2523  0793                     	;# 
  2524  0793                     	;# 
  2525  0794                     	;# 
  2526  0795                     	;# 
  2527  0795                     	;# 
  2528  0796                     	;# 
  2529  0797                     	;# 
  2530  0797                     	;# 
  2531  0798                     	;# 
  2532  0799                     	;# 
  2533  079A                     	;# 
  2534  080C                     	;# 
  2535  080C                     	;# 
  2536  080D                     	;# 
  2537  080E                     	;# 
  2538  080E                     	;# 
  2539  080F                     	;# 
  2540  0810                     	;# 
  2541  0810                     	;# 
  2542  0811                     	;# 
  2543  0812                     	;# 
  2544  0812                     	;# 
  2545  0813                     	;# 
  2546  0814                     	;# 
  2547  0815                     	;# 
  2548  0816                     	;# 
  2549  0817                     	;# 
  2550  0818                     	;# 
  2551  0819                     	;# 
  2552  081A                     	;# 
  2553  081A                     	;# 
  2554  081B                     	;# 
  2555  081C                     	;# 
  2556  081C                     	;# 
  2557  081D                     	;# 
  2558  088C                     	;# 
  2559  088D                     	;# 
  2560  088E                     	;# 
  2561  088F                     	;# 
  2562  088F                     	;# 
  2563  0890                     	;# 
  2564  0891                     	;# 
  2565  0892                     	;# 
  2566  0893                     	;# 
  2567  0893                     	;# 
  2568  0894                     	;# 
  2569  0895                     	;# 
  2570  0896                     	;# 
  2571  0897                     	;# 
  2572  0897                     	;# 
  2573  0898                     	;# 
  2574  0899                     	;# 
  2575  0D8C                     	;# 
  2576  0D8C                     	;# 
  2577  0D8D                     	;# 
  2578  0D8E                     	;# 
  2579  0D8F                     	;# 
  2580  0D8F                     	;# 
  2581  0D90                     	;# 
  2582  0D91                     	;# 
  2583  0D92                     	;# 
  2584  0D92                     	;# 
  2585  0D93                     	;# 
  2586  0D94                     	;# 
  2587  0D95                     	;# 
  2588  0D95                     	;# 
  2589  0D96                     	;# 
  2590  0D97                     	;# 
  2591  0D98                     	;# 
  2592  0D99                     	;# 
  2593  0D9A                     	;# 
  2594  0D9B                     	;# 
  2595  0D9C                     	;# 
  2596  0D9D                     	;# 
  2597  0D9E                     	;# 
  2598  0D9E                     	;# 
  2599  0D9F                     	;# 
  2600  0DA0                     	;# 
  2601  0DA1                     	;# 
  2602  0DA1                     	;# 
  2603  0DA2                     	;# 
  2604  0DA3                     	;# 
  2605  0DA4                     	;# 
  2606  0DA4                     	;# 
  2607  0DA5                     	;# 
  2608  0DA6                     	;# 
  2609  0DA7                     	;# 
  2610  0DA7                     	;# 
  2611  0DA8                     	;# 
  2612  0DA9                     	;# 
  2613  0DAA                     	;# 
  2614  0DAB                     	;# 
  2615  0DAC                     	;# 
  2616  0DAD                     	;# 
  2617  0DAE                     	;# 
  2618  0DAF                     	;# 
  2619  0E0F                     	;# 
  2620  0E10                     	;# 
  2621  0E11                     	;# 
  2622  0E12                     	;# 
  2623  0E13                     	;# 
  2624  0E14                     	;# 
  2625  0E15                     	;# 
  2626  0E16                     	;# 
  2627  0E17                     	;# 
  2628  0E18                     	;# 
  2629  0E19                     	;# 
  2630  0E1A                     	;# 
  2631  0E1B                     	;# 
  2632  0E1C                     	;# 
  2633  0E1D                     	;# 
  2634  0E1E                     	;# 
  2635  0E1F                     	;# 
  2636  0E20                     	;# 
  2637  0E21                     	;# 
  2638  0E22                     	;# 
  2639  0E23                     	;# 
  2640  0E24                     	;# 
  2641  0E25                     	;# 
  2642  0E26                     	;# 
  2643  0E27                     	;# 
  2644  0E28                     	;# 
  2645  0E29                     	;# 
  2646  0E2A                     	;# 
  2647  0E2B                     	;# 
  2648  0E2C                     	;# 
  2649  0E2D                     	;# 
  2650  0E2E                     	;# 
  2651  0E90                     	;# 
  2652  0E91                     	;# 
  2653  0E92                     	;# 
  2654  0E94                     	;# 
  2655  0E95                     	;# 
  2656  0E9C                     	;# 
  2657  0E9D                     	;# 
  2658  0E9E                     	;# 
  2659  0E9F                     	;# 
  2660  0EA0                     	;# 
  2661  0EA1                     	;# 
  2662  0EA2                     	;# 
  2663  0EA3                     	;# 
  2664  0EA4                     	;# 
  2665  0EA5                     	;# 
  2666  0EA6                     	;# 
  2667  0EA7                     	;# 
  2668  0F0F                     	;# 
  2669  0F10                     	;# 
  2670  0F11                     	;# 
  2671  0F12                     	;# 
  2672  0F13                     	;# 
  2673  0F14                     	;# 
  2674  0F15                     	;# 
  2675  0F16                     	;# 
  2676  0F17                     	;# 
  2677  0F18                     	;# 
  2678  0F19                     	;# 
  2679  0F1A                     	;# 
  2680  0F1B                     	;# 
  2681  0F1C                     	;# 
  2682  0F1D                     	;# 
  2683  0F1E                     	;# 
  2684  0F1F                     	;# 
  2685  0F20                     	;# 
  2686  0F21                     	;# 
  2687  0F22                     	;# 
  2688  0F23                     	;# 
  2689  0F24                     	;# 
  2690  0F25                     	;# 
  2691  0F26                     	;# 
  2692  0F27                     	;# 
  2693  0F28                     	;# 
  2694  0F29                     	;# 
  2695  0F2A                     	;# 
  2696  0F2B                     	;# 
  2697  0F2C                     	;# 
  2698  0F2D                     	;# 
  2699  0F2E                     	;# 
  2700  0F2F                     	;# 
  2701  0F30                     	;# 
  2702  0F31                     	;# 
  2703  0F32                     	;# 
  2704  0F33                     	;# 
  2705  0F34                     	;# 
  2706  0F35                     	;# 
  2707  0F36                     	;# 
  2708  0F37                     	;# 
  2709  0FE4                     	;# 
  2710  0FE5                     	;# 
  2711  0FE6                     	;# 
  2712  0FE7                     	;# 
  2713  0FE8                     	;# 
  2714  0FE9                     	;# 
  2715  0FEA                     	;# 
  2716  0FEB                     	;# 
  2717  0FED                     	;# 
  2718  0FEE                     	;# 
  2719  0FEF                     	;# 
  2720  0000                     	;# 
  2721  0001                     	;# 
  2722  0002                     	;# 
  2723  0003                     	;# 
  2724  0004                     	;# 
  2725  0005                     	;# 
  2726  0006                     	;# 
  2727  0007                     	;# 
  2728  0008                     	;# 
  2729  0009                     	;# 
  2730  000A                     	;# 
  2731  000B                     	;# 
  2732  000C                     	;# 
  2733  000D                     	;# 
  2734  000E                     	;# 
  2735  0010                     	;# 
  2736  0011                     	;# 
  2737  0012                     	;# 
  2738  0013                     	;# 
  2739  0014                     	;# 
  2740  0015                     	;# 
  2741  0016                     	;# 
  2742  0016                     	;# 
  2743  0017                     	;# 
  2744  0018                     	;# 
  2745  0019                     	;# 
  2746  001A                     	;# 
  2747  001A                     	;# 
  2748  001B                     	;# 
  2749  001B                     	;# 
  2750  001C                     	;# 
  2751  001D                     	;# 
  2752  001E                     	;# 
  2753  001F                     	;# 
  2754  008C                     	;# 
  2755  008D                     	;# 
  2756  008E                     	;# 
  2757  0090                     	;# 
  2758  0091                     	;# 
  2759  0092                     	;# 
  2760  0093                     	;# 
  2761  0094                     	;# 
  2762  0095                     	;# 
  2763  0096                     	;# 
  2764  0098                     	;# 
  2765  0099                     	;# 
  2766  009A                     	;# 
  2767  009B                     	;# 
  2768  009B                     	;# 
  2769  009C                     	;# 
  2770  009D                     	;# 
  2771  009E                     	;# 
  2772  009F                     	;# 
  2773  010C                     	;# 
  2774  010D                     	;# 
  2775  010E                     	;# 
  2776  0111                     	;# 
  2777  0112                     	;# 
  2778  0113                     	;# 
  2779  0114                     	;# 
  2780  0115                     	;# 
  2781  0116                     	;# 
  2782  0117                     	;# 
  2783  0118                     	;# 
  2784  0119                     	;# 
  2785  011C                     	;# 
  2786  018C                     	;# 
  2787  018D                     	;# 
  2788  018E                     	;# 
  2789  0191                     	;# 
  2790  0191                     	;# 
  2791  0192                     	;# 
  2792  0193                     	;# 
  2793  0193                     	;# 
  2794  0194                     	;# 
  2795  0195                     	;# 
  2796  0196                     	;# 
  2797  0197                     	;# 
  2798  0199                     	;# 
  2799  0199                     	;# 
  2800  0199                     	;# 
  2801  019A                     	;# 
  2802  019A                     	;# 
  2803  019A                     	;# 
  2804  019B                     	;# 
  2805  019B                     	;# 
  2806  019B                     	;# 
  2807  019B                     	;# 
  2808  019B                     	;# 
  2809  019C                     	;# 
  2810  019C                     	;# 
  2811  019C                     	;# 
  2812  019D                     	;# 
  2813  019D                     	;# 
  2814  019D                     	;# 
  2815  019E                     	;# 
  2816  019E                     	;# 
  2817  019E                     	;# 
  2818  019F                     	;# 
  2819  019F                     	;# 
  2820  019F                     	;# 
  2821  019F                     	;# 
  2822  019F                     	;# 
  2823  020C                     	;# 
  2824  020D                     	;# 
  2825  020E                     	;# 
  2826  0211                     	;# 
  2827  0211                     	;# 
  2828  0212                     	;# 
  2829  0212                     	;# 
  2830  0213                     	;# 
  2831  0213                     	;# 
  2832  0214                     	;# 
  2833  0214                     	;# 
  2834  0215                     	;# 
  2835  0215                     	;# 
  2836  0215                     	;# 
  2837  0215                     	;# 
  2838  0216                     	;# 
  2839  0216                     	;# 
  2840  0217                     	;# 
  2841  0217                     	;# 
  2842  028C                     	;# 
  2843  028D                     	;# 
  2844  028E                     	;# 
  2845  0291                     	;# 
  2846  0291                     	;# 
  2847  0292                     	;# 
  2848  0293                     	;# 
  2849  0294                     	;# 
  2850  0298                     	;# 
  2851  0298                     	;# 
  2852  0299                     	;# 
  2853  029A                     	;# 
  2854  029B                     	;# 
  2855  029E                     	;# 
  2856  030C                     	;# 
  2857  030D                     	;# 
  2858  030E                     	;# 
  2859  038C                     	;# 
  2860  038D                     	;# 
  2861  038E                     	;# 
  2862  0391                     	;# 
  2863  0392                     	;# 
  2864  0393                     	;# 
  2865  0394                     	;# 
  2866  0395                     	;# 
  2867  0396                     	;# 
  2868  0397                     	;# 
  2869  0398                     	;# 
  2870  0399                     	;# 
  2871  040E                     	;# 
  2872  0413                     	;# 
  2873  0413                     	;# 
  2874  0414                     	;# 
  2875  0414                     	;# 
  2876  0415                     	;# 
  2877  0416                     	;# 
  2878  0417                     	;# 
  2879  0418                     	;# 
  2880  041A                     	;# 
  2881  041A                     	;# 
  2882  041B                     	;# 
  2883  041B                     	;# 
  2884  041C                     	;# 
  2885  041D                     	;# 
  2886  041E                     	;# 
  2887  041F                     	;# 
  2888  0493                     	;# 
  2889  0494                     	;# 
  2890  0495                     	;# 
  2891  0496                     	;# 
  2892  049A                     	;# 
  2893  049B                     	;# 
  2894  049C                     	;# 
  2895  049D                     	;# 
  2896  058C                     	;# 
  2897  058C                     	;# 
  2898  058D                     	;# 
  2899  058E                     	;# 
  2900  058E                     	;# 
  2901  058F                     	;# 
  2902  0590                     	;# 
  2903  0590                     	;# 
  2904  0591                     	;# 
  2905  0592                     	;# 
  2906  0592                     	;# 
  2907  0593                     	;# 
  2908  0594                     	;# 
  2909  0594                     	;# 
  2910  0595                     	;# 
  2911  0596                     	;# 
  2912  0596                     	;# 
  2913  0597                     	;# 
  2914  0598                     	;# 
  2915  0599                     	;# 
  2916  059A                     	;# 
  2917  059B                     	;# 
  2918  059B                     	;# 
  2919  059C                     	;# 
  2920  059D                     	;# 
  2921  060C                     	;# 
  2922  060C                     	;# 
  2923  060D                     	;# 
  2924  060E                     	;# 
  2925  060F                     	;# 
  2926  060F                     	;# 
  2927  0610                     	;# 
  2928  0611                     	;# 
  2929  0612                     	;# 
  2930  0613                     	;# 
  2931  0614                     	;# 
  2932  0617                     	;# 
  2933  0618                     	;# 
  2934  0619                     	;# 
  2935  061A                     	;# 
  2936  061B                     	;# 
  2937  061C                     	;# 
  2938  0691                     	;# 
  2939  0692                     	;# 
  2940  0693                     	;# 
  2941  0694                     	;# 
  2942  0695                     	;# 
  2943  0696                     	;# 
  2944  0697                     	;# 
  2945  0699                     	;# 
  2946  069A                     	;# 
  2947  0711                     	;# 
  2948  0712                     	;# 
  2949  0713                     	;# 
  2950  0714                     	;# 
  2951  0715                     	;# 
  2952  0718                     	;# 
  2953  0718                     	;# 
  2954  0719                     	;# 
  2955  071A                     	;# 
  2956  071A                     	;# 
  2957  071B                     	;# 
  2958  071C                     	;# 
  2959  071D                     	;# 
  2960  0791                     	;# 
  2961  0791                     	;# 
  2962  0792                     	;# 
  2963  0793                     	;# 
  2964  0793                     	;# 
  2965  0794                     	;# 
  2966  0795                     	;# 
  2967  0795                     	;# 
  2968  0796                     	;# 
  2969  0797                     	;# 
  2970  0797                     	;# 
  2971  0798                     	;# 
  2972  0799                     	;# 
  2973  079A                     	;# 
  2974  080C                     	;# 
  2975  080C                     	;# 
  2976  080D                     	;# 
  2977  080E                     	;# 
  2978  080E                     	;# 
  2979  080F                     	;# 
  2980  0810                     	;# 
  2981  0810                     	;# 
  2982  0811                     	;# 
  2983  0812                     	;# 
  2984  0812                     	;# 
  2985  0813                     	;# 
  2986  0814                     	;# 
  2987  0815                     	;# 
  2988  0816                     	;# 
  2989  0817                     	;# 
  2990  0818                     	;# 
  2991  0819                     	;# 
  2992  081A                     	;# 
  2993  081A                     	;# 
  2994  081B                     	;# 
  2995  081C                     	;# 
  2996  081C                     	;# 
  2997  081D                     	;# 
  2998  088C                     	;# 
  2999  088D                     	;# 
  3000  088E                     	;# 
  3001  088F                     	;# 
  3002  088F                     	;# 
  3003  0890                     	;# 
  3004  0891                     	;# 
  3005  0892                     	;# 
  3006  0893                     	;# 
  3007  0893                     	;# 
  3008  0894                     	;# 
  3009  0895                     	;# 
  3010  0896                     	;# 
  3011  0897                     	;# 
  3012  0897                     	;# 
  3013  0898                     	;# 
  3014  0899                     	;# 
  3015  0D8C                     	;# 
  3016  0D8C                     	;# 
  3017  0D8D                     	;# 
  3018  0D8E                     	;# 
  3019  0D8F                     	;# 
  3020  0D8F                     	;# 
  3021  0D90                     	;# 
  3022  0D91                     	;# 
  3023  0D92                     	;# 
  3024  0D92                     	;# 
  3025  0D93                     	;# 
  3026  0D94                     	;# 
  3027  0D95                     	;# 
  3028  0D95                     	;# 
  3029  0D96                     	;# 
  3030  0D97                     	;# 
  3031  0D98                     	;# 
  3032  0D99                     	;# 
  3033  0D9A                     	;# 
  3034  0D9B                     	;# 
  3035  0D9C                     	;# 
  3036  0D9D                     	;# 
  3037  0D9E                     	;# 
  3038  0D9E                     	;# 
  3039  0D9F                     	;# 
  3040  0DA0                     	;# 
  3041  0DA1                     	;# 
  3042  0DA1                     	;# 
  3043  0DA2                     	;# 
  3044  0DA3                     	;# 
  3045  0DA4                     	;# 
  3046  0DA4                     	;# 
  3047  0DA5                     	;# 
  3048  0DA6                     	;# 
  3049  0DA7                     	;# 
  3050  0DA7                     	;# 
  3051  0DA8                     	;# 
  3052  0DA9                     	;# 
  3053  0DAA                     	;# 
  3054  0DAB                     	;# 
  3055  0DAC                     	;# 
  3056  0DAD                     	;# 
  3057  0DAE                     	;# 
  3058  0DAF                     	;# 
  3059  0E0F                     	;# 
  3060  0E10                     	;# 
  3061  0E11                     	;# 
  3062  0E12                     	;# 
  3063  0E13                     	;# 
  3064  0E14                     	;# 
  3065  0E15                     	;# 
  3066  0E16                     	;# 
  3067  0E17                     	;# 
  3068  0E18                     	;# 
  3069  0E19                     	;# 
  3070  0E1A                     	;# 
  3071  0E1B                     	;# 
  3072  0E1C                     	;# 
  3073  0E1D                     	;# 
  3074  0E1E                     	;# 
  3075  0E1F                     	;# 
  3076  0E20                     	;# 
  3077  0E21                     	;# 
  3078  0E22                     	;# 
  3079  0E23                     	;# 
  3080  0E24                     	;# 
  3081  0E25                     	;# 
  3082  0E26                     	;# 
  3083  0E27                     	;# 
  3084  0E28                     	;# 
  3085  0E29                     	;# 
  3086  0E2A                     	;# 
  3087  0E2B                     	;# 
  3088  0E2C                     	;# 
  3089  0E2D                     	;# 
  3090  0E2E                     	;# 
  3091  0E90                     	;# 
  3092  0E91                     	;# 
  3093  0E92                     	;# 
  3094  0E94                     	;# 
  3095  0E95                     	;# 
  3096  0E9C                     	;# 
  3097  0E9D                     	;# 
  3098  0E9E                     	;# 
  3099  0E9F                     	;# 
  3100  0EA0                     	;# 
  3101  0EA1                     	;# 
  3102  0EA2                     	;# 
  3103  0EA3                     	;# 
  3104  0EA4                     	;# 
  3105  0EA5                     	;# 
  3106  0EA6                     	;# 
  3107  0EA7                     	;# 
  3108  0F0F                     	;# 
  3109  0F10                     	;# 
  3110  0F11                     	;# 
  3111  0F12                     	;# 
  3112  0F13                     	;# 
  3113  0F14                     	;# 
  3114  0F15                     	;# 
  3115  0F16                     	;# 
  3116  0F17                     	;# 
  3117  0F18                     	;# 
  3118  0F19                     	;# 
  3119  0F1A                     	;# 
  3120  0F1B                     	;# 
  3121  0F1C                     	;# 
  3122  0F1D                     	;# 
  3123  0F1E                     	;# 
  3124  0F1F                     	;# 
  3125  0F20                     	;# 
  3126  0F21                     	;# 
  3127  0F22                     	;# 
  3128  0F23                     	;# 
  3129  0F24                     	;# 
  3130  0F25                     	;# 
  3131  0F26                     	;# 
  3132  0F27                     	;# 
  3133  0F28                     	;# 
  3134  0F29                     	;# 
  3135  0F2A                     	;# 
  3136  0F2B                     	;# 
  3137  0F2C                     	;# 
  3138  0F2D                     	;# 
  3139  0F2E                     	;# 
  3140  0F2F                     	;# 
  3141  0F30                     	;# 
  3142  0F31                     	;# 
  3143  0F32                     	;# 
  3144  0F33                     	;# 
  3145  0F34                     	;# 
  3146  0F35                     	;# 
  3147  0F36                     	;# 
  3148  0F37                     	;# 
  3149  0FE4                     	;# 
  3150  0FE5                     	;# 
  3151  0FE6                     	;# 
  3152  0FE7                     	;# 
  3153  0FE8                     	;# 
  3154  0FE9                     	;# 
  3155  0FEA                     	;# 
  3156  0FEB                     	;# 
  3157  0FED                     	;# 
  3158  0FEE                     	;# 
  3159  0FEF                     	;# 
  3160  0000                     	;# 
  3161  0001                     	;# 
  3162  0002                     	;# 
  3163  0003                     	;# 
  3164  0004                     	;# 
  3165  0005                     	;# 
  3166  0006                     	;# 
  3167  0007                     	;# 
  3168  0008                     	;# 
  3169  0009                     	;# 
  3170  000A                     	;# 
  3171  000B                     	;# 
  3172  000C                     	;# 
  3173  000D                     	;# 
  3174  000E                     	;# 
  3175  0010                     	;# 
  3176  0011                     	;# 
  3177  0012                     	;# 
  3178  0013                     	;# 
  3179  0014                     	;# 
  3180  0015                     	;# 
  3181  0016                     	;# 
  3182  0016                     	;# 
  3183  0017                     	;# 
  3184  0018                     	;# 
  3185  0019                     	;# 
  3186  001A                     	;# 
  3187  001A                     	;# 
  3188  001B                     	;# 
  3189  001B                     	;# 
  3190  001C                     	;# 
  3191  001D                     	;# 
  3192  001E                     	;# 
  3193  001F                     	;# 
  3194  008C                     	;# 
  3195  008D                     	;# 
  3196  008E                     	;# 
  3197  0090                     	;# 
  3198  0091                     	;# 
  3199  0092                     	;# 
  3200  0093                     	;# 
  3201  0094                     	;# 
  3202  0095                     	;# 
  3203  0096                     	;# 
  3204  0098                     	;# 
  3205  0099                     	;# 
  3206  009A                     	;# 
  3207  009B                     	;# 
  3208  009B                     	;# 
  3209  009C                     	;# 
  3210  009D                     	;# 
  3211  009E                     	;# 
  3212  009F                     	;# 
  3213  010C                     	;# 
  3214  010D                     	;# 
  3215  010E                     	;# 
  3216  0111                     	;# 
  3217  0112                     	;# 
  3218  0113                     	;# 
  3219  0114                     	;# 
  3220  0115                     	;# 
  3221  0116                     	;# 
  3222  0117                     	;# 
  3223  0118                     	;# 
  3224  0119                     	;# 
  3225  011C                     	;# 
  3226  018C                     	;# 
  3227  018D                     	;# 
  3228  018E                     	;# 
  3229  0191                     	;# 
  3230  0191                     	;# 
  3231  0192                     	;# 
  3232  0193                     	;# 
  3233  0193                     	;# 
  3234  0194                     	;# 
  3235  0195                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0199                     	;# 
  3239  0199                     	;# 
  3240  0199                     	;# 
  3241  019A                     	;# 
  3242  019A                     	;# 
  3243  019A                     	;# 
  3244  019B                     	;# 
  3245  019B                     	;# 
  3246  019B                     	;# 
  3247  019B                     	;# 
  3248  019B                     	;# 
  3249  019C                     	;# 
  3250  019C                     	;# 
  3251  019C                     	;# 
  3252  019D                     	;# 
  3253  019D                     	;# 
  3254  019D                     	;# 
  3255  019E                     	;# 
  3256  019E                     	;# 
  3257  019E                     	;# 
  3258  019F                     	;# 
  3259  019F                     	;# 
  3260  019F                     	;# 
  3261  019F                     	;# 
  3262  019F                     	;# 
  3263  020C                     	;# 
  3264  020D                     	;# 
  3265  020E                     	;# 
  3266  0211                     	;# 
  3267  0211                     	;# 
  3268  0212                     	;# 
  3269  0212                     	;# 
  3270  0213                     	;# 
  3271  0213                     	;# 
  3272  0214                     	;# 
  3273  0214                     	;# 
  3274  0215                     	;# 
  3275  0215                     	;# 
  3276  0215                     	;# 
  3277  0215                     	;# 
  3278  0216                     	;# 
  3279  0216                     	;# 
  3280  0217                     	;# 
  3281  0217                     	;# 
  3282  028C                     	;# 
  3283  028D                     	;# 
  3284  028E                     	;# 
  3285  0291                     	;# 
  3286  0291                     	;# 
  3287  0292                     	;# 
  3288  0293                     	;# 
  3289  0294                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  029A                     	;# 
  3294  029B                     	;# 
  3295  029E                     	;# 
  3296  030C                     	;# 
  3297  030D                     	;# 
  3298  030E                     	;# 
  3299  038C                     	;# 
  3300  038D                     	;# 
  3301  038E                     	;# 
  3302  0391                     	;# 
  3303  0392                     	;# 
  3304  0393                     	;# 
  3305  0394                     	;# 
  3306  0395                     	;# 
  3307  0396                     	;# 
  3308  0397                     	;# 
  3309  0398                     	;# 
  3310  0399                     	;# 
  3311  040E                     	;# 
  3312  0413                     	;# 
  3313  0413                     	;# 
  3314  0414                     	;# 
  3315  0414                     	;# 
  3316  0415                     	;# 
  3317  0416                     	;# 
  3318  0417                     	;# 
  3319  0418                     	;# 
  3320  041A                     	;# 
  3321  041A                     	;# 
  3322  041B                     	;# 
  3323  041B                     	;# 
  3324  041C                     	;# 
  3325  041D                     	;# 
  3326  041E                     	;# 
  3327  041F                     	;# 
  3328  0493                     	;# 
  3329  0494                     	;# 
  3330  0495                     	;# 
  3331  0496                     	;# 
  3332  049A                     	;# 
  3333  049B                     	;# 
  3334  049C                     	;# 
  3335  049D                     	;# 
  3336  058C                     	;# 
  3337  058C                     	;# 
  3338  058D                     	;# 
  3339  058E                     	;# 
  3340  058E                     	;# 
  3341  058F                     	;# 
  3342  0590                     	;# 
  3343  0590                     	;# 
  3344  0591                     	;# 
  3345  0592                     	;# 
  3346  0592                     	;# 
  3347  0593                     	;# 
  3348  0594                     	;# 
  3349  0594                     	;# 
  3350  0595                     	;# 
  3351  0596                     	;# 
  3352  0596                     	;# 
  3353  0597                     	;# 
  3354  0598                     	;# 
  3355  0599                     	;# 
  3356  059A                     	;# 
  3357  059B                     	;# 
  3358  059B                     	;# 
  3359  059C                     	;# 
  3360  059D                     	;# 
  3361  060C                     	;# 
  3362  060C                     	;# 
  3363  060D                     	;# 
  3364  060E                     	;# 
  3365  060F                     	;# 
  3366  060F                     	;# 
  3367  0610                     	;# 
  3368  0611                     	;# 
  3369  0612                     	;# 
  3370  0613                     	;# 
  3371  0614                     	;# 
  3372  0617                     	;# 
  3373  0618                     	;# 
  3374  0619                     	;# 
  3375  061A                     	;# 
  3376  061B                     	;# 
  3377  061C                     	;# 
  3378  0691                     	;# 
  3379  0692                     	;# 
  3380  0693                     	;# 
  3381  0694                     	;# 
  3382  0695                     	;# 
  3383  0696                     	;# 
  3384  0697                     	;# 
  3385  0699                     	;# 
  3386  069A                     	;# 
  3387  0711                     	;# 
  3388  0712                     	;# 
  3389  0713                     	;# 
  3390  0714                     	;# 
  3391  0715                     	;# 
  3392  0718                     	;# 
  3393  0718                     	;# 
  3394  0719                     	;# 
  3395  071A                     	;# 
  3396  071A                     	;# 
  3397  071B                     	;# 
  3398  071C                     	;# 
  3399  071D                     	;# 
  3400  0791                     	;# 
  3401  0791                     	;# 
  3402  0792                     	;# 
  3403  0793                     	;# 
  3404  0793                     	;# 
  3405  0794                     	;# 
  3406  0795                     	;# 
  3407  0795                     	;# 
  3408  0796                     	;# 
  3409  0797                     	;# 
  3410  0797                     	;# 
  3411  0798                     	;# 
  3412  0799                     	;# 
  3413  079A                     	;# 
  3414  080C                     	;# 
  3415  080C                     	;# 
  3416  080D                     	;# 
  3417  080E                     	;# 
  3418  080E                     	;# 
  3419  080F                     	;# 
  3420  0810                     	;# 
  3421  0810                     	;# 
  3422  0811                     	;# 
  3423  0812                     	;# 
  3424  0812                     	;# 
  3425  0813                     	;# 
  3426  0814                     	;# 
  3427  0815                     	;# 
  3428  0816                     	;# 
  3429  0817                     	;# 
  3430  0818                     	;# 
  3431  0819                     	;# 
  3432  081A                     	;# 
  3433  081A                     	;# 
  3434  081B                     	;# 
  3435  081C                     	;# 
  3436  081C                     	;# 
  3437  081D                     	;# 
  3438  088C                     	;# 
  3439  088D                     	;# 
  3440  088E                     	;# 
  3441  088F                     	;# 
  3442  088F                     	;# 
  3443  0890                     	;# 
  3444  0891                     	;# 
  3445  0892                     	;# 
  3446  0893                     	;# 
  3447  0893                     	;# 
  3448  0894                     	;# 
  3449  0895                     	;# 
  3450  0896                     	;# 
  3451  0897                     	;# 
  3452  0897                     	;# 
  3453  0898                     	;# 
  3454  0899                     	;# 
  3455  0D8C                     	;# 
  3456  0D8C                     	;# 
  3457  0D8D                     	;# 
  3458  0D8E                     	;# 
  3459  0D8F                     	;# 
  3460  0D8F                     	;# 
  3461  0D90                     	;# 
  3462  0D91                     	;# 
  3463  0D92                     	;# 
  3464  0D92                     	;# 
  3465  0D93                     	;# 
  3466  0D94                     	;# 
  3467  0D95                     	;# 
  3468  0D95                     	;# 
  3469  0D96                     	;# 
  3470  0D97                     	;# 
  3471  0D98                     	;# 
  3472  0D99                     	;# 
  3473  0D9A                     	;# 
  3474  0D9B                     	;# 
  3475  0D9C                     	;# 
  3476  0D9D                     	;# 
  3477  0D9E                     	;# 
  3478  0D9E                     	;# 
  3479  0D9F                     	;# 
  3480  0DA0                     	;# 
  3481  0DA1                     	;# 
  3482  0DA1                     	;# 
  3483  0DA2                     	;# 
  3484  0DA3                     	;# 
  3485  0DA4                     	;# 
  3486  0DA4                     	;# 
  3487  0DA5                     	;# 
  3488  0DA6                     	;# 
  3489  0DA7                     	;# 
  3490  0DA7                     	;# 
  3491  0DA8                     	;# 
  3492  0DA9                     	;# 
  3493  0DAA                     	;# 
  3494  0DAB                     	;# 
  3495  0DAC                     	;# 
  3496  0DAD                     	;# 
  3497  0DAE                     	;# 
  3498  0DAF                     	;# 
  3499  0E0F                     	;# 
  3500  0E10                     	;# 
  3501  0E11                     	;# 
  3502  0E12                     	;# 
  3503  0E13                     	;# 
  3504  0E14                     	;# 
  3505  0E15                     	;# 
  3506  0E16                     	;# 
  3507  0E17                     	;# 
  3508  0E18                     	;# 
  3509  0E19                     	;# 
  3510  0E1A                     	;# 
  3511  0E1B                     	;# 
  3512  0E1C                     	;# 
  3513  0E1D                     	;# 
  3514  0E1E                     	;# 
  3515  0E1F                     	;# 
  3516  0E20                     	;# 
  3517  0E21                     	;# 
  3518  0E22                     	;# 
  3519  0E23                     	;# 
  3520  0E24                     	;# 
  3521  0E25                     	;# 
  3522  0E26                     	;# 
  3523  0E27                     	;# 
  3524  0E28                     	;# 
  3525  0E29                     	;# 
  3526  0E2A                     	;# 
  3527  0E2B                     	;# 
  3528  0E2C                     	;# 
  3529  0E2D                     	;# 
  3530  0E2E                     	;# 
  3531  0E90                     	;# 
  3532  0E91                     	;# 
  3533  0E92                     	;# 
  3534  0E94                     	;# 
  3535  0E95                     	;# 
  3536  0E9C                     	;# 
  3537  0E9D                     	;# 
  3538  0E9E                     	;# 
  3539  0E9F                     	;# 
  3540  0EA0                     	;# 
  3541  0EA1                     	;# 
  3542  0EA2                     	;# 
  3543  0EA3                     	;# 
  3544  0EA4                     	;# 
  3545  0EA5                     	;# 
  3546  0EA6                     	;# 
  3547  0EA7                     	;# 
  3548  0F0F                     	;# 
  3549  0F10                     	;# 
  3550  0F11                     	;# 
  3551  0F12                     	;# 
  3552  0F13                     	;# 
  3553  0F14                     	;# 
  3554  0F15                     	;# 
  3555  0F16                     	;# 
  3556  0F17                     	;# 
  3557  0F18                     	;# 
  3558  0F19                     	;# 
  3559  0F1A                     	;# 
  3560  0F1B                     	;# 
  3561  0F1C                     	;# 
  3562  0F1D                     	;# 
  3563  0F1E                     	;# 
  3564  0F1F                     	;# 
  3565  0F20                     	;# 
  3566  0F21                     	;# 
  3567  0F22                     	;# 
  3568  0F23                     	;# 
  3569  0F24                     	;# 
  3570  0F25                     	;# 
  3571  0F26                     	;# 
  3572  0F27                     	;# 
  3573  0F28                     	;# 
  3574  0F29                     	;# 
  3575  0F2A                     	;# 
  3576  0F2B                     	;# 
  3577  0F2C                     	;# 
  3578  0F2D                     	;# 
  3579  0F2E                     	;# 
  3580  0F2F                     	;# 
  3581  0F30                     	;# 
  3582  0F31                     	;# 
  3583  0F32                     	;# 
  3584  0F33                     	;# 
  3585  0F34                     	;# 
  3586  0F35                     	;# 
  3587  0F36                     	;# 
  3588  0F37                     	;# 
  3589  0FE4                     	;# 
  3590  0FE5                     	;# 
  3591  0FE6                     	;# 
  3592  0FE7                     	;# 
  3593  0FE8                     	;# 
  3594  0FE9                     	;# 
  3595  0FEA                     	;# 
  3596  0FEB                     	;# 
  3597  0FED                     	;# 
  3598  0FEE                     	;# 
  3599  0FEF                     	;# 
  3600                           
  3601 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  3602  0000                     
  3603 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  3604  0000                     
  3605 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  3606  0000                     
  3607 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  3608  0000                     
  3609 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  3610  0000                     
  3611 ;; Function _I2C_DO_IDLE is unused but had its address taken
  3612  0000                     
  3613 ;; Function _I2C_DO_SEND_ADR_READ is unused but had its address taken
  3614  0000                     
  3615 ;; Function _I2C_DO_SEND_ADR_WRITE is unused but had its address taken
  3616  0000                     
  3617 ;; Function _I2C_DO_TX is unused but had its address taken
  3618  0000                     
  3619 ;; Function _I2C_DO_RX is unused but had its address taken
  3620  0000                     
  3621 ;; Function _I2C_DO_RCEN is unused but had its address taken
  3622  0000                     
  3623 ;; Function _I2C_DO_TX_EMPTY is unused but had its address taken
  3624  0000                     
  3625 ;; Function _I2C_DO_SEND_RESTART_READ is unused but had its address taken
  3626  0000                     
  3627 ;; Function _I2C_DO_SEND_RESTART_WRITE is unused but had its address taken
  3628  0000                     
  3629 ;; Function _I2C_DO_SEND_RESTART is unused but had its address taken
  3630  0000                     
  3631 ;; Function _I2C_DO_SEND_STOP is unused but had its address taken
  3632  0000                     
  3633 ;; Function _I2C_DO_RX_ACK is unused but had its address taken
  3634  0000                     
  3635 ;; Function _I2C_DO_RX_NACK_STOP is unused but had its address taken
  3636  0000                     
  3637 ;; Function _I2C_DO_RX_NACK_RESTART is unused but had its address taken
  3638  0000                     
  3639 ;; Function _I2C_DO_RESET is unused but had its address taken
  3640  0000                     
  3641 ;; Function _I2C_DO_ADDRESS_NACK is unused but had its address taken
  3642  0000                     
  3643 ;; Function _I2C_CallbackReturnStop is unused but had its address taken
  3644  0000                     
  3645 ;; Function _I2C_CallbackReturnReset is unused but had its address taken
  3646  0000                     
  3647                           	psect	idataBANK0
  3648  02D8                     __pidataBANK0:	
  3649                           
  3650                           ;initializer for _Angle
  3651  02D8  340A               	retlw	10
  3652  02D9  3400               	retlw	0
  3653                           
  3654                           	psect	stringtext1
  3655  01F8                     __pstringtext1:	
  3656  01F8                     _fsmStateTable:	
  3657  01F8  3400               	retlw	0
  3658  01F9  3400               	retlw	0
  3659  01FA  3400               	retlw	0
  3660  01FB  3400               	retlw	0
  3661  01FC  3400               	retlw	0
  3662  01FD  3400               	retlw	0
  3663  01FE  3400               	retlw	0
  3664  01FF  3400               	retlw	0
  3665  0200  3400               	retlw	0
  3666  0201  3400               	retlw	0
  3667  0202  3400               	retlw	0
  3668  0203  3400               	retlw	0
  3669  0204  3400               	retlw	0
  3670  0205  3400               	retlw	0
  3671  0206  3400               	retlw	0
  3672  0207  3400               	retlw	0
  3673  0208  3400               	retlw	0
  3674  0209  3400               	retlw	0
  3675  020A  3400               	retlw	0
  3676  020B  3400               	retlw	0
  3677  020C  3400               	retlw	0
  3678  020D  3400               	retlw	0
  3679  020E  3400               	retlw	0
  3680  020F  3400               	retlw	0
  3681  0210  3400               	retlw	0
  3682  0211  3400               	retlw	0
  3683  0212  3400               	retlw	0
  3684  0213  3400               	retlw	0
  3685  0214  3400               	retlw	0
  3686  0215  3400               	retlw	0
  3687  0216  3400               	retlw	0
  3688  0217  3400               	retlw	0
  3689  0218                     __end_of_fsmStateTable:	
  3690                           
  3691                           	psect	nvBANK0
  3692  0055                     __pnvBANK0:	
  3693  0055                     _TMR2_InterruptHandler:	
  3694  0055                     	ds	2
  3695  0057                     _EUSART_ErrorHandler:	
  3696  0057                     	ds	2
  3697  0059                     _EUSART_OverrunErrorHandler:	
  3698  0059                     	ds	2
  3699  005B                     _EUSART_FramingErrorHandler:	
  3700  005B                     	ds	2
  3701  005D                     _EUSART_RxDefaultInterruptHandler:	
  3702  005D                     	ds	2
  3703  000C                     _PORTAbits	set	12
  3704  001B                     _PR2	set	27
  3705  001A                     _TMR2	set	26
  3706  001C                     _T2CONbits	set	28
  3707  001F                     _T2RSTbits	set	31
  3708  001D                     _T2HLTbits	set	29
  3709  001C                     _T2CON	set	28
  3710  001A                     _T2TMR	set	26
  3711  001B                     _T2PR	set	27
  3712  001F                     _T2RST	set	31
  3713  001D                     _T2HLT	set	29
  3714  001E                     _T2CLKCON	set	30
  3715  0011                     _PIR2bits	set	17
  3716  0010                     _PIR1bits	set	16
  3717  000B                     _INTCONbits	set	11
  3718  0095                     _OPTION_REGbits	set	149
  3719  008E                     _TRISC	set	142
  3720  008D                     _TRISB	set	141
  3721  008C                     _TRISA	set	140
  3722  0098                     _OSCTUNE	set	152
  3723  0099                     _OSCCON	set	153
  3724  0090                     _PIE1bits	set	144
  3725  010C                     _LATAbits	set	268
  3726  010E                     _LATC	set	270
  3727  010D                     _LATB	set	269
  3728  010C                     _LATA	set	268
  3729  0116                     _BORCON	set	278
  3730  0199                     _RC1REG	set	409
  3731  019D                     _RC1STAbits	set	413
  3732  019A                     _TX1REG	set	410
  3733  019E                     _TX1STAbits	set	414
  3734  019C                     _SPBRGH	set	412
  3735  019B                     _SPBRGL	set	411
  3736  019E                     _TX1STA	set	414
  3737  019D                     _RC1STA	set	413
  3738  019F                     _BAUD1CON	set	415
  3739  018C                     _ANSELA	set	396
  3740  018D                     _ANSELB	set	397
  3741  018E                     _ANSELC	set	398
  3742  0214                     _SSP1STATbits	set	532
  3743  0216                     _SSP1CON2bits	set	534
  3744  0211                     _SSP1BUF	set	529
  3745  0215                     _SSP1CON1bits	set	533
  3746  0212                     _SSP1ADD	set	530
  3747  0216                     _SSP1CON2	set	534
  3748  0215                     _SSP1CON1	set	533
  3749  0214                     _SSP1STAT	set	532
  3750  020E                     _WPUC	set	526
  3751  020C                     _WPUA	set	524
  3752  020D                     _WPUB	set	525
  3753  029E                     _CCPTMRSbits	set	670
  3754  028E                     _ODCONC	set	654
  3755  028D                     _ODCONB	set	653
  3756  028C                     _ODCONA	set	652
  3757  030E                     _SLRCONC	set	782
  3758  030D                     _SLRCONB	set	781
  3759  030C                     _SLRCONA	set	780
  3760  038E                     _INLVLC	set	910
  3761  038D                     _INLVLB	set	909
  3762  038C                     _INLVLA	set	908
  3763  0617                     _PWM3DCL	set	1559
  3764  0618                     _PWM3DCH	set	1560
  3765  0619                     _PWM3CON	set	1561
  3766  0E20                     _SSPCLKPPS	set	3616
  3767  0E21                     _SSPDATPPS	set	3617
  3768  0E24                     _RXPPS	set	3620
  3769  0E92                     _RA2PPS	set	3730
  3770  0E9C                     _RB4PPS	set	3740
  3771  0E9F                     _RB7PPS	set	3743
  3772  0E9E                     _RB6PPS	set	3742
  3773                           
  3774                           ; #config settings
  3775  0000                     
  3776                           	psect	cinit
  3777  0026                     start_initialization:	
  3778  0026                     __initialization:	
  3779                           
  3780                           ; Initialize objects allocated to BANK0
  3781  0026  3182  22D8  3180   	fcall	__pidataBANK0	;fetch initializer
  3782  0029  00E3               	movwf	__pdataBANK0& (0+127)
  3783  002A  3182  22D9  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3784  002D  00E4               	movwf	(__pdataBANK0+1)& (0+127)
  3785                           
  3786                           ; Clear objects allocated to COMMON
  3787  002E  01FD               	clrf	__pbssCOMMON& (0+127)
  3788                           
  3789                           ; Clear objects allocated to BANK0
  3790  002F  3020               	movlw	low __pbssBANK0
  3791  0030  0084               	movwf	4
  3792  0031  3000               	movlw	high __pbssBANK0
  3793  0032  0085               	movwf	5
  3794  0033  3035               	movlw	53
  3795  0034  3182  229C         	fcall	clear_ram0
  3796  0036                     end_of_initialization:	
  3797                           ;End of C runtime variable initialization code
  3798                           
  3799  0036                     __end_of__initialization:	
  3800  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3801  0037  0020               	movlb	0
  3802  0038  3180  28F8         	ljmp	_main	;jump to C main() function
  3803                           
  3804                           	psect	bssCOMMON
  3805  007D                     __pbssCOMMON:	
  3806  007D                     _eusartRxTail:	
  3807  007D                     	ds	1
  3808                           
  3809                           	psect	bssBANK0
  3810  0020                     __pbssBANK0:	
  3811  0020                     _I2C_Status:	
  3812  0020                     	ds	29
  3813  003D                     _eusartRxStatusBuffer:	
  3814  003D                     	ds	8
  3815  0045                     _eusartRxBuffer:	
  3816  0045                     	ds	8
  3817  004D                     _Vitesse:	
  3818  004D                     	ds	2
  3819  004F                     _PosUart:	
  3820  004F                     	ds	1
  3821  0050                     _Type:	
  3822  0050                     	ds	1
  3823  0051                     _Data:	
  3824  0051                     	ds	1
  3825  0052                     _eusartRxLastError:	
  3826  0052                     	ds	1
  3827  0053                     _eusartRxCount:	
  3828  0053                     	ds	1
  3829  0054                     _eusartRxHead:	
  3830  0054                     	ds	1
  3831                           
  3832                           	psect	dataBANK0
  3833  0063                     __pdataBANK0:	
  3834  0063                     _Angle:	
  3835  0063                     	ds	2
  3836                           
  3837                           	psect	clrtext
  3838  029C                     clear_ram0:	
  3839                           ;	Called with FSR0 containing the base address, and
  3840                           ;	WREG with the size to clear
  3841                           
  3842  029C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3843  029D                     clrloop0:	
  3844  029D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3845  029E  3101               	addfsr 0,1
  3846  029F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3847  02A0  2A9D               	goto	clrloop0	;have we reached the end yet?
  3848  02A1  3400               	retlw	0	;all done for this memory range, return
  3849                           
  3850                           	psect	cstackCOMMON
  3851  0070                     __pcstackCOMMON:	
  3852  0070                     ?_TMR2_ISR:	
  3853  0070                     ?_I2C_Initialize:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856  0070                     ?_PIN_MANAGER_Initialize:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859  0070                     ?_OSCILLATOR_Initialize:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862  0070                     ?_PWM3_Initialize:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865  0070                     ?_TMR2_Initialize:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868  0070                     ?_EUSART_Initialize:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871  0070                     ?_EUSART_Receive_ISR:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886  0070                     ?_EUSART_DefaultErrorHandler:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0070                     ?_EUSART_RxDataHandler:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0070                     ??_EUSART_RxDataHandler:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ?_TMR2_DefaultInterruptHandler:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0070                     ??_TMR2_DefaultInterruptHandler:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0070                     ?_INTERRUPT_InterruptManager:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0070                     ?_SYSTEM_Initialize:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0070                     ?_EUSART_Write:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0070                     ??_EUSART_Write:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913  0070                     ?_TMR2_Start:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0070                     ?_TMR2_StartTimer:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0070                     ?_TMR2_Counter8BitSet:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0070                     ?_TMR2_WriteTimer:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0070                     ?_MyTimer2ISR:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0070                     ?_MyUART_ISR:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0070                     ?_main:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  0070                     ?___lwdiv:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  0070                     EUSART_Write@txData:	
  3938                           ; 2 bytes @ 0x0
  3939                           
  3940  0070                     ___lwdiv@divisor:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943                           
  3944                           ; 2 bytes @ 0x0
  3945  0070                     	ds	1
  3946  0071                     ??_EUSART_Receive_ISR:	
  3947  0071                     ??_EUSART_DefaultErrorHandler:	
  3948                           ; 1 bytes @ 0x1
  3949                           
  3950  0071                     ??_MyUART_ISR:	
  3951                           ; 1 bytes @ 0x1
  3952                           
  3953                           
  3954                           ; 1 bytes @ 0x1
  3955  0071                     	ds	1
  3956  0072                     ___lwdiv@dividend:	
  3957                           
  3958                           ; 2 bytes @ 0x2
  3959  0072                     	ds	2
  3960  0074                     ??___lwdiv:	
  3961                           
  3962                           ; 1 bytes @ 0x4
  3963  0074                     	ds	1
  3964  0075                     MyUART_ISR@c:	
  3965  0075                     ___lwdiv@quotient:	
  3966                           ; 1 bytes @ 0x5
  3967                           
  3968                           
  3969                           ; 2 bytes @ 0x5
  3970  0075                     	ds	2
  3971  0077                     ___lwdiv@counter:	
  3972                           
  3973                           ; 1 bytes @ 0x7
  3974  0077                     	ds	1
  3975  0078                     ?_PWM3_LoadDutyValue:	
  3976  0078                     PWM3_LoadDutyValue@dutyValue:	
  3977                           ; 1 bytes @ 0x8
  3978                           
  3979                           
  3980                           ; 2 bytes @ 0x8
  3981  0078                     	ds	2
  3982  007A                     ??_PWM3_LoadDutyValue:	
  3983                           
  3984                           ; 1 bytes @ 0xA
  3985  007A                     	ds	2
  3986  007C                     ??_TMR2_ISR:	
  3987  007C                     ??_INTERRUPT_InterruptManager:	
  3988                           ; 1 bytes @ 0xC
  3989                           
  3990  007C                     ??_MyTimer2ISR:	
  3991                           ; 1 bytes @ 0xC
  3992                           
  3993                           
  3994                           ; 1 bytes @ 0xC
  3995  007C                     	ds	1
  3996                           
  3997                           	psect	cstackBANK0
  3998  005F                     __pcstackBANK0:	
  3999  005F                     ??_I2C_Initialize:	
  4000  005F                     ??_PIN_MANAGER_Initialize:	
  4001                           ; 1 bytes @ 0x0
  4002                           
  4003  005F                     ??_OSCILLATOR_Initialize:	
  4004                           ; 1 bytes @ 0x0
  4005                           
  4006  005F                     ??_PWM3_Initialize:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009  005F                     ?_EUSART_SetRxInterruptHandler:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012  005F                     ?_EUSART_SetFramingErrorHandler:	
  4013                           ; 1 bytes @ 0x0
  4014                           
  4015  005F                     ?_EUSART_SetOverrunErrorHandler:	
  4016                           ; 1 bytes @ 0x0
  4017                           
  4018  005F                     ?_EUSART_SetErrorHandler:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021  005F                     ?_TMR2_SetInterruptHandler:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  005F                     ??_TMR2_Start:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  005F                     ??_TMR2_StartTimer:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  005F                     ??_TMR2_Counter8BitSet:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  005F                     TMR2_Counter8BitSet@timerVal:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036  005F                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039  005F                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4040                           ; 2 bytes @ 0x0
  4041                           
  4042  005F                     EUSART_SetErrorHandler@interruptHandler:	
  4043                           ; 2 bytes @ 0x0
  4044                           
  4045  005F                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4046                           ; 2 bytes @ 0x0
  4047                           
  4048  005F                     TMR2_SetInterruptHandler@InterruptHandler:	
  4049                           ; 2 bytes @ 0x0
  4050                           
  4051                           
  4052                           ; 2 bytes @ 0x0
  4053  005F                     	ds	1
  4054  0060                     ??_TMR2_WriteTimer:	
  4055  0060                     TMR2_WriteTimer@timerVal:	
  4056                           ; 1 bytes @ 0x1
  4057                           
  4058                           
  4059                           ; 1 bytes @ 0x1
  4060  0060                     	ds	1
  4061  0061                     ??_TMR2_Initialize:	
  4062  0061                     ??_EUSART_Initialize:	
  4063                           ; 1 bytes @ 0x2
  4064                           
  4065  0061                     ??_EUSART_SetRxInterruptHandler:	
  4066                           ; 1 bytes @ 0x2
  4067                           
  4068  0061                     ??_EUSART_SetFramingErrorHandler:	
  4069                           ; 1 bytes @ 0x2
  4070                           
  4071  0061                     ??_EUSART_SetOverrunErrorHandler:	
  4072                           ; 1 bytes @ 0x2
  4073                           
  4074  0061                     ??_EUSART_SetErrorHandler:	
  4075                           ; 1 bytes @ 0x2
  4076                           
  4077  0061                     ??_TMR2_SetInterruptHandler:	
  4078                           ; 1 bytes @ 0x2
  4079                           
  4080  0061                     ??_SYSTEM_Initialize:	
  4081                           ; 1 bytes @ 0x2
  4082                           
  4083  0061                     ??_main:	
  4084                           ; 1 bytes @ 0x2
  4085                           
  4086                           
  4087                           ; 1 bytes @ 0x2
  4088  0061                     	ds	2
  4089                           
  4090                           	psect	maintext
  4091  00F8                     __pmaintext:	
  4092 ;;
  4093 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4094 ;;
  4095 ;; *************** function _main *****************
  4096 ;; Defined at:
  4097 ;;		line 115 in file "main.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : B1F/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;Total ram usage:        2 bytes
  4116 ;; Hardware stack levels required when called:    7
  4117 ;; This function calls:
  4118 ;;		_EUSART_SetRxInterruptHandler
  4119 ;;		_SYSTEM_Initialize
  4120 ;;		_TMR2_SetInterruptHandler
  4121 ;;		_TMR2_StartTimer
  4122 ;;		_TMR2_WriteTimer
  4123 ;; This function is called by:
  4124 ;;		Startup code after reset
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           
  4129                           ;psect for function _main
  4130  00F8                     _main:	
  4131                           
  4132                           ;main.c: 116: SYSTEM_Initialize();
  4133                           
  4134                           ;incstack = 0
  4135                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  4136  00F8  3182  225A  3180   	fcall	_SYSTEM_Initialize
  4137                           
  4138                           ;main.c: 121: TMR2_SetInterruptHandler(MyTimer2ISR);
  4139  00FB  30C7               	movlw	low _MyTimer2ISR
  4140  00FC  0020               	movlb	0	; select bank0
  4141  00FD  00DF               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4142  00FE  3001               	movlw	high _MyTimer2ISR
  4143  00FF  00E0               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4144  0100  3182  22A8  3180   	fcall	_TMR2_SetInterruptHandler
  4145                           
  4146                           ;main.c: 122: TMR2_WriteTimer(255);
  4147  0103  30FF               	movlw	255
  4148  0104  3182  22A2  3180   	fcall	_TMR2_WriteTimer
  4149                           
  4150                           ;main.c: 123: TMR2_StartTimer();
  4151  0107  3182  22CF  3180   	fcall	_TMR2_StartTimer
  4152                           
  4153                           ;main.c: 125: EUSART_SetRxInterruptHandler(MyUART_ISR);
  4154  010A  303A               	movlw	low _MyUART_ISR
  4155  010B  0020               	movlb	0	; select bank0
  4156  010C  00DF               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4157  010D  3000               	movlw	high _MyUART_ISR
  4158  010E  00E0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4159  010F  3182  22AE  3180   	fcall	_EUSART_SetRxInterruptHandler
  4160                           
  4161                           ;main.c: 127: (INTCONbits.PEIE = 1);
  4162  0112  170B               	bsf	11,6	;volatile
  4163                           
  4164                           ;main.c: 128: (INTCONbits.GIE = 1);
  4165  0113  178B               	bsf	11,7	;volatile
  4166  0114                     l2365:	
  4167                           ;main.c: 131: do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4168                           
  4169                           ;main.c: 130: while (1) {
  4170                           
  4171  0114  1003               	clrc
  4172  0115  0022               	movlb	2	; select bank2
  4173  0116  1E8C               	btfss	12,5	;volatile
  4174  0117  1403               	setc
  4175  0118  1C03               	btfss	3,0
  4176  0119  291D               	goto	u940
  4177  011A  0022               	movlb	2	; select bank2
  4178  011B  168C               	bsf	12,5	;volatile
  4179  011C  291F               	goto	l2367
  4180  011D                     u940:	
  4181  011D  0022               	movlb	2	; select bank2
  4182  011E  128C               	bcf	12,5	;volatile
  4183  011F                     l2367:	
  4184                           
  4185                           ;main.c: 132: _delay((unsigned long)((500)*(4000000/4000.0)));
  4186  011F  3003               	movlw	3
  4187  0120  0020               	movlb	0	; select bank0
  4188  0121  00E2               	movwf	??_main+1
  4189  0122  308A               	movlw	138
  4190  0123  00E1               	movwf	??_main
  4191  0124  3055               	movlw	85
  4192  0125                     u967:	
  4193  0125  0B89               	decfsz	9,f
  4194  0126  2925               	goto	u967
  4195  0127  0BE1               	decfsz	??_main,f
  4196  0128  2925               	goto	u967
  4197  0129  0BE2               	decfsz	??_main+1,f
  4198  012A  2925               	goto	u967
  4199  012B  3200               	nop2
  4200  012C  2914               	goto	l2365
  4201  012D                     __end_of_main:	
  4202                           
  4203                           	psect	text1
  4204  02A2                     __ptext1:	
  4205 ;; *************** function _TMR2_WriteTimer *****************
  4206 ;; Defined at:
  4207 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  timerVal        1    wreg     unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  timerVal        1    1[BANK0 ] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        1 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    5
  4228 ;; This function calls:
  4229 ;;		_TMR2_Counter8BitSet
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _TMR2_WriteTimer
  4237  02A2                     _TMR2_WriteTimer:	
  4238                           
  4239                           ;incstack = 0
  4240                           ; Regs used in _TMR2_WriteTimer: [wreg+status,2+status,0+pclath+cstack]
  4241                           ;TMR2_WriteTimer@timerVal stored from wreg
  4242  02A2  0020               	movlb	0	; select bank0
  4243  02A3  00E0               	movwf	TMR2_WriteTimer@timerVal
  4244                           
  4245                           ;tmr2.c: 152: TMR2_Counter8BitSet(timerVal);
  4246  02A4  0860               	movf	TMR2_WriteTimer@timerVal,w
  4247  02A5  3182  22C6         	fcall	_TMR2_Counter8BitSet
  4248  02A7  0008               	return
  4249  02A8                     __end_of_TMR2_WriteTimer:	
  4250                           
  4251                           	psect	text2
  4252  02C6                     __ptext2:	
  4253 ;; *************** function _TMR2_Counter8BitSet *****************
  4254 ;; Defined at:
  4255 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  timerVal        1    wreg     unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  timerVal        1    0[BANK0 ] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;Total ram usage:        1 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    4
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_TMR2_WriteTimer
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           
  4284                           ;psect for function _TMR2_Counter8BitSet
  4285  02C6                     _TMR2_Counter8BitSet:	
  4286                           
  4287                           ;incstack = 0
  4288                           ; Regs used in _TMR2_Counter8BitSet: [wreg]
  4289                           ;TMR2_Counter8BitSet@timerVal stored from wreg
  4290  02C6  0020               	movlb	0	; select bank0
  4291  02C7  00DF               	movwf	TMR2_Counter8BitSet@timerVal
  4292                           
  4293                           ;tmr2.c: 147: TMR2 = timerVal;
  4294  02C8  085F               	movf	TMR2_Counter8BitSet@timerVal,w
  4295  02C9  009A               	movwf	26	;volatile
  4296  02CA  0008               	return
  4297  02CB                     __end_of_TMR2_Counter8BitSet:	
  4298                           
  4299                           	psect	text3
  4300  02CF                     __ptext3:	
  4301 ;; *************** function _TMR2_StartTimer *****************
  4302 ;; Defined at:
  4303 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;Total ram usage:        0 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    5
  4324 ;; This function calls:
  4325 ;;		_TMR2_Start
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _TMR2_StartTimer
  4333  02CF                     _TMR2_StartTimer:	
  4334                           
  4335                           ;tmr2.c: 116: TMR2_Start();
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
  4339  02CF  3182  22D2         	fcall	_TMR2_Start
  4340  02D1  0008               	return
  4341  02D2                     __end_of_TMR2_StartTimer:	
  4342                           
  4343                           	psect	text4
  4344  02D2                     __ptext4:	
  4345 ;; *************** function _TMR2_Start *****************
  4346 ;; Defined at:
  4347 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		None
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;Total ram usage:        0 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    4
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_TMR2_StartTimer
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _TMR2_Start
  4377  02D2                     _TMR2_Start:	
  4378                           
  4379                           ;tmr2.c: 111: T2CONbits.TMR2ON = 1;
  4380                           
  4381                           ;incstack = 0
  4382                           ; Regs used in _TMR2_Start: []
  4383  02D2  0020               	movlb	0	; select bank0
  4384  02D3  179C               	bsf	28,7	;volatile
  4385  02D4  0008               	return
  4386  02D5                     __end_of_TMR2_Start:	
  4387                           
  4388                           	psect	text5
  4389  025A                     __ptext5:	
  4390 ;; *************** function _SYSTEM_Initialize *****************
  4391 ;; Defined at:
  4392 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    6
  4413 ;; This function calls:
  4414 ;;		_EUSART_Initialize
  4415 ;;		_I2C_Initialize
  4416 ;;		_OSCILLATOR_Initialize
  4417 ;;		_PIN_MANAGER_Initialize
  4418 ;;		_PWM3_Initialize
  4419 ;;		_TMR2_Initialize
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function _SYSTEM_Initialize
  4427  025A                     _SYSTEM_Initialize:	
  4428                           
  4429                           ;mcc.c: 52: I2C_Initialize();
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4433  025A  3182  2283  3182   	fcall	_I2C_Initialize
  4434                           
  4435                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  4436  025D  3180  20BD  3182   	fcall	_PIN_MANAGER_Initialize
  4437                           
  4438                           ;mcc.c: 54: OSCILLATOR_Initialize();
  4439  0260  3182  2295  3182   	fcall	_OSCILLATOR_Initialize
  4440                           
  4441                           ;mcc.c: 55: PWM3_Initialize();
  4442  0263  3182  2278  3182   	fcall	_PWM3_Initialize
  4443                           
  4444                           ;mcc.c: 56: TMR2_Initialize();
  4445  0266  3182  2245  3182   	fcall	_TMR2_Initialize
  4446                           
  4447                           ;mcc.c: 57: EUSART_Initialize();
  4448  0269  3181  2161         	fcall	_EUSART_Initialize
  4449  026B  0008               	return
  4450  026C                     __end_of_SYSTEM_Initialize:	
  4451                           
  4452                           	psect	text6
  4453  0245                     __ptext6:	
  4454 ;; *************** function _TMR2_Initialize *****************
  4455 ;; Defined at:
  4456 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, pclath, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    5
  4477 ;; This function calls:
  4478 ;;		_TMR2_SetInterruptHandler
  4479 ;; This function is called by:
  4480 ;;		_SYSTEM_Initialize
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           
  4485                           ;psect for function _TMR2_Initialize
  4486  0245                     _TMR2_Initialize:	
  4487                           
  4488                           ;tmr2.c: 69: T2CLKCON = 0x00;
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4492  0245  0020               	movlb	0	; select bank0
  4493  0246  019E               	clrf	30	;volatile
  4494                           
  4495                           ;tmr2.c: 72: T2HLT = 0x00;
  4496  0247  019D               	clrf	29	;volatile
  4497                           
  4498                           ;tmr2.c: 75: T2RST = 0x00;
  4499  0248  019F               	clrf	31	;volatile
  4500                           
  4501                           ;tmr2.c: 78: T2PR = 0x9B;
  4502  0249  309B               	movlw	155
  4503  024A  009B               	movwf	27	;volatile
  4504                           
  4505                           ;tmr2.c: 81: T2TMR = 0x00;
  4506  024B  019A               	clrf	26	;volatile
  4507                           
  4508                           ;tmr2.c: 84: PIR1bits.TMR2IF = 0;
  4509  024C  1090               	bcf	16,1	;volatile
  4510                           
  4511                           ;tmr2.c: 87: PIE1bits.TMR2IE = 1;
  4512  024D  0021               	movlb	1	; select bank1
  4513  024E  1490               	bsf	16,1	;volatile
  4514                           
  4515                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  4516  024F  30DA               	movlw	low _TMR2_DefaultInterruptHandler
  4517  0250  0020               	movlb	0	; select bank0
  4518  0251  00DF               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4519  0252  3002               	movlw	high _TMR2_DefaultInterruptHandler
  4520  0253  00E0               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4521  0254  3182  22A8         	fcall	_TMR2_SetInterruptHandler
  4522                           
  4523                           ;tmr2.c: 93: T2CON = 0xF0;
  4524  0256  30F0               	movlw	240
  4525  0257  0020               	movlb	0	; select bank0
  4526  0258  009C               	movwf	28	;volatile
  4527  0259  0008               	return
  4528  025A                     __end_of_TMR2_Initialize:	
  4529                           
  4530                           	psect	text7
  4531  02A8                     __ptext7:	
  4532 ;; *************** function _TMR2_SetInterruptHandler *****************
  4533 ;; Defined at:
  4534 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4537 ;;		 -> MyTimer2ISR(1), TMR2_DefaultInterruptHandler(1), 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;Total ram usage:        2 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    4
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_TMR2_Initialize
  4560 ;;		_main
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           
  4565                           ;psect for function _TMR2_SetInterruptHandler
  4566  02A8                     _TMR2_SetInterruptHandler:	
  4567                           
  4568                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  4572  02A8  0020               	movlb	0	; select bank0
  4573  02A9  0860               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  4574  02AA  00D6               	movwf	_TMR2_InterruptHandler+1
  4575  02AB  085F               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  4576  02AC  00D5               	movwf	_TMR2_InterruptHandler
  4577  02AD  0008               	return
  4578  02AE                     __end_of_TMR2_SetInterruptHandler:	
  4579                           
  4580                           	psect	text8
  4581  0278                     __ptext8:	
  4582 ;; *************** function _PWM3_Initialize *****************
  4583 ;; Defined at:
  4584 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    4
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_SYSTEM_Initialize
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           
  4613                           ;psect for function _PWM3_Initialize
  4614  0278                     _PWM3_Initialize:	
  4615                           
  4616                           ;pwm3.c: 62: PWM3CON = 0x80;
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  4620  0278  3080               	movlw	128
  4621  0279  002C               	movlb	12	; select bank12
  4622  027A  0099               	movwf	25	;volatile
  4623                           
  4624                           ;pwm3.c: 65: PWM3DCH = 0x0F;
  4625  027B  300F               	movlw	15
  4626  027C  0098               	movwf	24	;volatile
  4627                           
  4628                           ;pwm3.c: 68: PWM3DCL = 0x40;
  4629  027D  3040               	movlw	64
  4630  027E  0097               	movwf	23	;volatile
  4631                           
  4632                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0;
  4633  027F  30CF               	movlw	-49
  4634  0280  0025               	movlb	5	; select bank5
  4635  0281  059E               	andwf	30,f	;volatile
  4636  0282  0008               	return
  4637  0283                     __end_of_PWM3_Initialize:	
  4638                           
  4639                           	psect	text9
  4640  00BD                     __ptext9:	
  4641 ;; *************** function _PIN_MANAGER_Initialize *****************
  4642 ;; Defined at:
  4643 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;Total ram usage:        0 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    4
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_SYSTEM_Initialize
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function _PIN_MANAGER_Initialize
  4673  00BD                     _PIN_MANAGER_Initialize:	
  4674                           
  4675                           ;pin_manager.c: 60: LATA = 0x00;
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4679  00BD  0022               	movlb	2	; select bank2
  4680  00BE  018C               	clrf	12	;volatile
  4681                           
  4682                           ;pin_manager.c: 61: LATB = 0x00;
  4683  00BF  018D               	clrf	13	;volatile
  4684                           
  4685                           ;pin_manager.c: 62: LATC = 0x00;
  4686  00C0  018E               	clrf	14	;volatile
  4687                           
  4688                           ;pin_manager.c: 67: TRISA = 0x13;
  4689  00C1  3013               	movlw	19
  4690  00C2  0021               	movlb	1	; select bank1
  4691  00C3  008C               	movwf	12	;volatile
  4692                           
  4693                           ;pin_manager.c: 68: TRISB = 0x70;
  4694  00C4  3070               	movlw	112
  4695  00C5  008D               	movwf	13	;volatile
  4696                           
  4697                           ;pin_manager.c: 69: TRISC = 0xFF;
  4698  00C6  30FF               	movlw	255
  4699  00C7  008E               	movwf	14	;volatile
  4700                           
  4701                           ;pin_manager.c: 74: ANSELC = 0x8E;
  4702  00C8  308E               	movlw	142
  4703  00C9  0023               	movlb	3	; select bank3
  4704  00CA  008E               	movwf	14	;volatile
  4705                           
  4706                           ;pin_manager.c: 75: ANSELB = 0x00;
  4707  00CB  018D               	clrf	13	;volatile
  4708                           
  4709                           ;pin_manager.c: 76: ANSELA = 0x01;
  4710  00CC  3001               	movlw	1
  4711  00CD  008C               	movwf	12	;volatile
  4712                           
  4713                           ;pin_manager.c: 81: WPUB = 0x00;
  4714  00CE  0024               	movlb	4	; select bank4
  4715  00CF  018D               	clrf	13	;volatile
  4716                           
  4717                           ;pin_manager.c: 82: WPUA = 0x00;
  4718  00D0  018C               	clrf	12	;volatile
  4719                           
  4720                           ;pin_manager.c: 83: WPUC = 0x00;
  4721  00D1  018E               	clrf	14	;volatile
  4722                           
  4723                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 1;
  4724  00D2  0021               	movlb	1	; select bank1
  4725  00D3  1795               	bsf	21,7	;volatile
  4726                           
  4727                           ;pin_manager.c: 89: ODCONA = 0x00;
  4728  00D4  0025               	movlb	5	; select bank5
  4729  00D5  018C               	clrf	12	;volatile
  4730                           
  4731                           ;pin_manager.c: 90: ODCONB = 0x00;
  4732  00D6  018D               	clrf	13	;volatile
  4733                           
  4734                           ;pin_manager.c: 91: ODCONC = 0x00;
  4735  00D7  018E               	clrf	14	;volatile
  4736                           
  4737                           ;pin_manager.c: 96: SLRCONA = 0x37;
  4738  00D8  3037               	movlw	55
  4739  00D9  0026               	movlb	6	; select bank6
  4740  00DA  008C               	movwf	12	;volatile
  4741                           
  4742                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  4743  00DB  30F0               	movlw	240
  4744  00DC  008D               	movwf	13	;volatile
  4745                           
  4746                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  4747  00DD  30FF               	movlw	255
  4748  00DE  008E               	movwf	14	;volatile
  4749                           
  4750                           ;pin_manager.c: 103: INLVLA = 0x3F;
  4751  00DF  303F               	movlw	63
  4752  00E0  0027               	movlb	7	; select bank7
  4753  00E1  008C               	movwf	12	;volatile
  4754                           
  4755                           ;pin_manager.c: 104: INLVLB = 0xF0;
  4756  00E2  30F0               	movlw	240
  4757  00E3  008D               	movwf	13	;volatile
  4758                           
  4759                           ;pin_manager.c: 105: INLVLC = 0xFF;
  4760  00E4  30FF               	movlw	255
  4761  00E5  008E               	movwf	14	;volatile
  4762                           
  4763                           ;pin_manager.c: 114: RXPPS = 0x0D;
  4764  00E6  300D               	movlw	13
  4765  00E7  003C               	movlb	28	; select bank28
  4766  00E8  00A4               	movwf	36	;volatile
  4767                           
  4768                           ;pin_manager.c: 115: SSPDATPPS = 0x0C;
  4769  00E9  300C               	movlw	12
  4770  00EA  00A1               	movwf	33	;volatile
  4771                           
  4772                           ;pin_manager.c: 116: RB6PPS = 0x10;
  4773  00EB  3010               	movlw	16
  4774  00EC  003D               	movlb	29	; select bank29
  4775  00ED  009E               	movwf	30	;volatile
  4776                           
  4777                           ;pin_manager.c: 117: RB7PPS = 0x12;
  4778  00EE  3012               	movlw	18
  4779  00EF  009F               	movwf	31	;volatile
  4780                           
  4781                           ;pin_manager.c: 118: RB4PPS = 0x11;
  4782  00F0  3011               	movlw	17
  4783  00F1  009C               	movwf	28	;volatile
  4784                           
  4785                           ;pin_manager.c: 119: RA2PPS = 0x0E;
  4786  00F2  300E               	movlw	14
  4787  00F3  0092               	movwf	18	;volatile
  4788                           
  4789                           ;pin_manager.c: 120: SSPCLKPPS = 0x0E;
  4790  00F4  300E               	movlw	14
  4791  00F5  003C               	movlb	28	; select bank28
  4792  00F6  00A0               	movwf	32	;volatile
  4793  00F7  0008               	return
  4794  00F8                     __end_of_PIN_MANAGER_Initialize:	
  4795                           
  4796                           	psect	text10
  4797  0295                     __ptext10:	
  4798 ;; *************** function _OSCILLATOR_Initialize *****************
  4799 ;; Defined at:
  4800 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    4
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_SYSTEM_Initialize
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _OSCILLATOR_Initialize
  4830  0295                     _OSCILLATOR_Initialize:	
  4831                           
  4832                           ;mcc.c: 63: OSCCON = 0x6A;
  4833                           
  4834                           ;incstack = 0
  4835                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4836  0295  306A               	movlw	106
  4837  0296  0021               	movlb	1	; select bank1
  4838  0297  0099               	movwf	25	;volatile
  4839                           
  4840                           ;mcc.c: 65: OSCTUNE = 0x00;
  4841  0298  0198               	clrf	24	;volatile
  4842                           
  4843                           ;mcc.c: 67: BORCON = 0x00;
  4844  0299  0022               	movlb	2	; select bank2
  4845  029A  0196               	clrf	22	;volatile
  4846  029B  0008               	return
  4847  029C                     __end_of_OSCILLATOR_Initialize:	
  4848                           
  4849                           	psect	text11
  4850  0283                     __ptext11:	
  4851 ;; *************** function _I2C_Initialize *****************
  4852 ;; Defined at:
  4853 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    4
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_SYSTEM_Initialize
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _I2C_Initialize
  4883  0283                     _I2C_Initialize:	
  4884                           
  4885                           ;i2c_master.c: 169: SSP1STAT = 0x80;
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4889  0283  3080               	movlw	128
  4890  0284  0024               	movlb	4	; select bank4
  4891  0285  0094               	movwf	20	;volatile
  4892                           
  4893                           ;i2c_master.c: 170: SSP1CON1 = 0x08;
  4894  0286  3008               	movlw	8
  4895  0287  0095               	movwf	21	;volatile
  4896                           
  4897                           ;i2c_master.c: 171: SSP1CON2 = 0x00;
  4898  0288  0196               	clrf	22	;volatile
  4899                           
  4900                           ;i2c_master.c: 172: SSP1ADD = 0x09;
  4901  0289  3009               	movlw	9
  4902  028A  0092               	movwf	18	;volatile
  4903                           
  4904                           ;i2c_master.c: 173: SSP1CON1bits.SSPEN = 0;
  4905  028B  1295               	bcf	21,5	;volatile
  4906  028C  0008               	return
  4907  028D                     __end_of_I2C_Initialize:	
  4908                           
  4909                           	psect	text12
  4910  0161                     __ptext12:	
  4911 ;; *************** function _EUSART_Initialize *****************
  4912 ;; Defined at:
  4913 ;;		line 83 in file "mcc_generated_files/eusart.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    5
  4934 ;; This function calls:
  4935 ;;		_EUSART_SetErrorHandler
  4936 ;;		_EUSART_SetFramingErrorHandler
  4937 ;;		_EUSART_SetOverrunErrorHandler
  4938 ;;		_EUSART_SetRxInterruptHandler
  4939 ;; This function is called by:
  4940 ;;		_SYSTEM_Initialize
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _EUSART_Initialize
  4946  0161                     _EUSART_Initialize:	
  4947                           
  4948                           ;eusart.c: 86: PIE1bits.RCIE = 0;
  4949                           
  4950                           ;incstack = 0
  4951                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4952  0161  0021               	movlb	1	; select bank1
  4953  0162  1290               	bcf	16,5	;volatile
  4954                           
  4955                           ;eusart.c: 87: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4956  0163  3094               	movlw	low _EUSART_Receive_ISR
  4957  0164  0020               	movlb	0	; select bank0
  4958  0165  00DF               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4959  0166  3001               	movlw	high _EUSART_Receive_ISR
  4960  0167  00E0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4961  0168  3182  22AE  3181   	fcall	_EUSART_SetRxInterruptHandler
  4962                           
  4963                           ;eusart.c: 91: BAUD1CON = 0x09;
  4964  016B  3009               	movlw	9
  4965  016C  0023               	movlb	3	; select bank3
  4966  016D  009F               	movwf	31	;volatile
  4967                           
  4968                           ;eusart.c: 94: RC1STA = 0x90;
  4969  016E  3090               	movlw	144
  4970  016F  009D               	movwf	29	;volatile
  4971                           
  4972                           ;eusart.c: 97: TX1STA = 0x24;
  4973  0170  3024               	movlw	36
  4974  0171  009E               	movwf	30	;volatile
  4975                           
  4976                           ;eusart.c: 100: SPBRGL = 0x67;
  4977  0172  3067               	movlw	103
  4978  0173  009B               	movwf	27	;volatile
  4979                           
  4980                           ;eusart.c: 103: SPBRGH = 0x00;
  4981  0174  019C               	clrf	28	;volatile
  4982                           
  4983                           ;eusart.c: 106: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  4984  0175  30DB               	movlw	low _EUSART_DefaultFramingErrorHandler
  4985  0176  0020               	movlb	0	; select bank0
  4986  0177  00DF               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4987  0178  3002               	movlw	high _EUSART_DefaultFramingErrorHandler
  4988  0179  00E0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4989  017A  3182  22BA  3181   	fcall	_EUSART_SetFramingErrorHandler
  4990                           
  4991                           ;eusart.c: 107: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  4992  017D  30CB               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4993  017E  0020               	movlb	0	; select bank0
  4994  017F  00DF               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4995  0180  3002               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4996  0181  00E0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4997  0182  3182  22B4  3181   	fcall	_EUSART_SetOverrunErrorHandler
  4998                           
  4999                           ;eusart.c: 108: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  5000  0185  30D5               	movlw	low _EUSART_DefaultErrorHandler
  5001  0186  0020               	movlb	0	; select bank0
  5002  0187  00DF               	movwf	EUSART_SetErrorHandler@interruptHandler
  5003  0188  3002               	movlw	high _EUSART_DefaultErrorHandler
  5004  0189  00E0               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5005  018A  3182  22C0         	fcall	_EUSART_SetErrorHandler
  5006                           
  5007                           ;eusart.c: 110: eusartRxLastError.status = 0;
  5008  018C  0020               	movlb	0	; select bank0
  5009  018D  01D2               	clrf	_eusartRxLastError	;volatile
  5010                           
  5011                           ;eusart.c: 113: eusartRxHead = 0;
  5012  018E  01D4               	clrf	_eusartRxHead	;volatile
  5013                           
  5014                           ;eusart.c: 114: eusartRxTail = 0;
  5015  018F  01FD               	clrf	_eusartRxTail	;volatile
  5016                           
  5017                           ;eusart.c: 115: eusartRxCount = 0;
  5018  0190  01D3               	clrf	_eusartRxCount	;volatile
  5019                           
  5020                           ;eusart.c: 118: PIE1bits.RCIE = 1;
  5021  0191  0021               	movlb	1	; select bank1
  5022  0192  1690               	bsf	16,5	;volatile
  5023  0193  0008               	return
  5024  0194                     __end_of_EUSART_Initialize:	
  5025                           
  5026                           	psect	text13
  5027  02AE                     __ptext13:	
  5028 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5029 ;; Defined at:
  5030 ;;		line 234 in file "mcc_generated_files/eusart.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5033 ;;		 -> MyUART_ISR(1), EUSART_Receive_ISR(1), 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;Total ram usage:        2 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    4
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_EUSART_Initialize
  5056 ;;		_main
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _EUSART_SetRxInterruptHandler
  5062  02AE                     _EUSART_SetRxInterruptHandler:	
  5063                           
  5064                           ;eusart.c: 235: EUSART_RxDefaultInterruptHandler = interruptHandler;
  5065                           
  5066                           ;incstack = 0
  5067                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5068  02AE  0020               	movlb	0	; select bank0
  5069  02AF  0860               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  5070  02B0  00DE               	movwf	_EUSART_RxDefaultInterruptHandler+1
  5071  02B1  085F               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  5072  02B2  00DD               	movwf	_EUSART_RxDefaultInterruptHandler
  5073  02B3  0008               	return
  5074  02B4                     __end_of_EUSART_SetRxInterruptHandler:	
  5075                           
  5076                           	psect	text14
  5077  02B4                     __ptext14:	
  5078 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5079 ;; Defined at:
  5080 ;;		line 225 in file "mcc_generated_files/eusart.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5083 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;Total ram usage:        2 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    4
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_EUSART_Initialize
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function _EUSART_SetOverrunErrorHandler
  5111  02B4                     _EUSART_SetOverrunErrorHandler:	
  5112                           
  5113                           ;eusart.c: 226: EUSART_OverrunErrorHandler = interruptHandler;
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5117  02B4  0020               	movlb	0	; select bank0
  5118  02B5  0860               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5119  02B6  00DA               	movwf	_EUSART_OverrunErrorHandler+1
  5120  02B7  085F               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5121  02B8  00D9               	movwf	_EUSART_OverrunErrorHandler
  5122  02B9  0008               	return
  5123  02BA                     __end_of_EUSART_SetOverrunErrorHandler:	
  5124                           
  5125                           	psect	text15
  5126  02BA                     __ptext15:	
  5127 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5128 ;; Defined at:
  5129 ;;		line 221 in file "mcc_generated_files/eusart.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5132 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;Total ram usage:        2 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    4
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_EUSART_Initialize
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _EUSART_SetFramingErrorHandler
  5160  02BA                     _EUSART_SetFramingErrorHandler:	
  5161                           
  5162                           ;eusart.c: 222: EUSART_FramingErrorHandler = interruptHandler;
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5166  02BA  0020               	movlb	0	; select bank0
  5167  02BB  0860               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5168  02BC  00DC               	movwf	_EUSART_FramingErrorHandler+1
  5169  02BD  085F               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5170  02BE  00DB               	movwf	_EUSART_FramingErrorHandler
  5171  02BF  0008               	return
  5172  02C0                     __end_of_EUSART_SetFramingErrorHandler:	
  5173                           
  5174                           	psect	text16
  5175  02C0                     __ptext16:	
  5176 ;; *************** function _EUSART_SetErrorHandler *****************
  5177 ;; Defined at:
  5178 ;;		line 229 in file "mcc_generated_files/eusart.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5181 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;Total ram usage:        2 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    4
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_EUSART_Initialize
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           
  5208                           ;psect for function _EUSART_SetErrorHandler
  5209  02C0                     _EUSART_SetErrorHandler:	
  5210                           
  5211                           ;eusart.c: 230: EUSART_ErrorHandler = interruptHandler;
  5212                           
  5213                           ;incstack = 0
  5214                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5215  02C0  0020               	movlb	0	; select bank0
  5216  02C1  0860               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5217  02C2  00D8               	movwf	_EUSART_ErrorHandler+1
  5218  02C3  085F               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5219  02C4  00D7               	movwf	_EUSART_ErrorHandler
  5220  02C5  0008               	return
  5221  02C6                     __end_of_EUSART_SetErrorHandler:	
  5222                           
  5223                           	psect	intentry
  5224  0004                     __pintentry:	
  5225 ;; *************** function _INTERRUPT_InterruptManager *****************
  5226 ;; Defined at:
  5227 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;		None
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5245 ;;Total ram usage:        1 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    3
  5248 ;; This function calls:
  5249 ;;		Absolute function
  5250 ;;		_EUSART_Receive_ISR
  5251 ;;		_MyUART_ISR
  5252 ;;		_TMR2_ISR
  5253 ;; This function is called by:
  5254 ;;		Interrupt level 1
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258  0004                     _INTERRUPT_InterruptManager:	
  5259                           
  5260                           ;incstack = 0
  5261  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5262                           
  5263                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5264  0005  3180               	pagesel	$
  5265  0006  0020               	movlb	0	; select bank0
  5266  0007  087F               	movf	127,w
  5267  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
  5268                           
  5269                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  5270  0009  1F0B               	btfss	11,6	;volatile
  5271  000A  281F               	goto	i1l123
  5272                           
  5273                           ;interrupt_manager.c: 56: {
  5274                           ;interrupt_manager.c: 57: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  5275  000B  0021               	movlb	1	; select bank1
  5276  000C  1E90               	btfss	16,5	;volatile
  5277  000D  2817               	goto	i1l118
  5278  000E  0020               	movlb	0	; select bank0
  5279  000F  1E90               	btfss	16,5	;volatile
  5280  0010  2817               	goto	i1l118
  5281                           
  5282                           ;interrupt_manager.c: 58: {
  5283                           ;interrupt_manager.c: 59: EUSART_RxDefaultInterruptHandler();
  5284  0011  085E               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5285  0012  008A               	movwf	10
  5286  0013  085D               	movf	_EUSART_RxDefaultInterruptHandler,w
  5287  0014  000A               	callw
  5288  0015  3180               	pagesel	$
  5289                           
  5290                           ;interrupt_manager.c: 60: }
  5291  0016  281F               	goto	i1l123
  5292  0017                     i1l118:	
  5293                           
  5294                           ;interrupt_manager.c: 61: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  5295  0017  0021               	movlb	1	; select bank1
  5296  0018  1C90               	btfss	16,1	;volatile
  5297  0019  281F               	goto	i1l123
  5298  001A  0020               	movlb	0	; select bank0
  5299  001B  1C90               	btfss	16,1	;volatile
  5300  001C  281F               	goto	i1l123
  5301                           
  5302                           ;interrupt_manager.c: 62: {
  5303                           ;interrupt_manager.c: 63: TMR2_ISR();
  5304  001D  3182  226C         	fcall	_TMR2_ISR
  5305  001F                     i1l123:	
  5306                           ;interrupt_manager.c: 70: else
  5307                           ;interrupt_manager.c: 71: {
  5308                           
  5309                           ;interrupt_manager.c: 68: }
  5310                           ;interrupt_manager.c: 69: }
  5311                           
  5312                           ;interrupt_manager.c: 65: else
  5313                           ;interrupt_manager.c: 66: {
  5314                           
  5315                           ;interrupt_manager.c: 64: }
  5316                           
  5317  001F  087C               	movf	??_INTERRUPT_InterruptManager,w
  5318  0020  0020               	movlb	0	; select bank0
  5319  0021  00FF               	movwf	127
  5320  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5321  0023  0009               	retfie
  5322  0024                     __end_of_INTERRUPT_InterruptManager:	
  5323                           
  5324                           	psect	text18
  5325  026C                     __ptext18:	
  5326 ;; *************** function _TMR2_ISR *****************
  5327 ;; Defined at:
  5328 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0, pclath, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    2
  5349 ;; This function calls:
  5350 ;;		Absolute function
  5351 ;;		_MyTimer2ISR
  5352 ;;		_TMR2_DefaultInterruptHandler
  5353 ;; This function is called by:
  5354 ;;		_INTERRUPT_InterruptManager
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _TMR2_ISR
  5360  026C                     _TMR2_ISR:	
  5361                           
  5362                           ;tmr2.c: 169: PIR1bits.TMR2IF = 0;
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  5366  026C  0020               	movlb	0	; select bank0
  5367  026D  1090               	bcf	16,1	;volatile
  5368                           
  5369                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
  5370  026E  0855               	movf	_TMR2_InterruptHandler,w
  5371  026F  0456               	iorwf	_TMR2_InterruptHandler+1,w
  5372  0270  1903               	btfsc	3,2
  5373  0271  0008               	return
  5374                           
  5375                           ;tmr2.c: 172: {
  5376                           ;tmr2.c: 173: TMR2_InterruptHandler();
  5377  0272  0856               	movf	_TMR2_InterruptHandler+1,w
  5378  0273  008A               	movwf	10
  5379  0274  0855               	movf	_TMR2_InterruptHandler,w
  5380  0275  000A               	callw
  5381  0276  3182               	pagesel	$
  5382  0277  0008               	return
  5383  0278                     __end_of_TMR2_ISR:	
  5384                           
  5385                           	psect	text19
  5386  01C7                     __ptext19:	
  5387 ;; *************** function _MyTimer2ISR *****************
  5388 ;; Defined at:
  5389 ;;		line 54 in file "main.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0, pclath, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    1
  5410 ;; This function calls:
  5411 ;;		_EUSART_Write
  5412 ;;		_PWM3_LoadDutyValue
  5413 ;;		___lwdiv
  5414 ;; This function is called by:
  5415 ;;		_main
  5416 ;;		_TMR2_ISR
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _MyTimer2ISR
  5422  01C7                     _MyTimer2ISR:	
  5423                           
  5424                           ;main.c: 58: PWM3_LoadDutyValue((uint8_t)(Angle/3)+31);
  5425                           
  5426                           ;incstack = 0
  5427                           ; Regs used in _MyTimer2ISR: [wreg+status,2+status,0+pclath+cstack]
  5428  01C7  3003               	movlw	3
  5429  01C8  00F0               	movwf	___lwdiv@divisor
  5430  01C9  3000               	movlw	0
  5431  01CA  00F1               	movwf	___lwdiv@divisor+1
  5432  01CB  0020               	movlb	0	; select bank0
  5433  01CC  0864               	movf	_Angle+1,w
  5434  01CD  00F3               	movwf	___lwdiv@dividend+1
  5435  01CE  0863               	movf	_Angle,w
  5436  01CF  00F2               	movwf	___lwdiv@dividend
  5437  01D0  3181  212D  3181   	fcall	___lwdiv
  5438  01D3  0870               	movf	?___lwdiv,w
  5439  01D4  3E1F               	addlw	31
  5440  01D5  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
  5441  01D6  3000               	movlw	0
  5442  01D7  1803               	skipnc
  5443  01D8  3001               	movlw	1
  5444  01D9  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
  5445  01DA  3182  222F  3181   	fcall	_PWM3_LoadDutyValue
  5446                           
  5447                           ;main.c: 59: if(PORTAbits.RA4) {
  5448  01DD  0020               	movlb	0	; select bank0
  5449  01DE  1E0C               	btfss	12,4	;volatile
  5450  01DF  29EC               	goto	i1l2245
  5451                           
  5452                           ;main.c: 60: EUSART_Write('B');
  5453  01E0  3042               	movlw	66
  5454  01E1  3182  228D  3181   	fcall	_EUSART_Write
  5455                           
  5456                           ;main.c: 61: EUSART_Write('1');
  5457  01E4  3031               	movlw	49
  5458  01E5  3182  228D  3181   	fcall	_EUSART_Write
  5459                           
  5460                           ;main.c: 62: EUSART_Write('s');
  5461  01E8  3073               	movlw	115
  5462  01E9  3182  228D         	fcall	_EUSART_Write
  5463                           
  5464                           ;main.c: 64: } else {
  5465  01EB  0008               	return
  5466  01EC                     i1l2245:	
  5467                           
  5468                           ;main.c: 65: EUSART_Write('B');
  5469  01EC  3042               	movlw	66
  5470  01ED  3182  228D  3181   	fcall	_EUSART_Write
  5471                           
  5472                           ;main.c: 66: EUSART_Write('0');
  5473  01F0  3030               	movlw	48
  5474  01F1  3182  228D  3181   	fcall	_EUSART_Write
  5475                           
  5476                           ;main.c: 67: EUSART_Write('r');
  5477  01F4  3072               	movlw	114
  5478  01F5  3182  228D         	fcall	_EUSART_Write
  5479  01F7  0008               	return
  5480  01F8                     __end_of_MyTimer2ISR:	
  5481                           
  5482                           	psect	text20
  5483  02DA                     __ptext20:	
  5484 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5485 ;; Defined at:
  5486 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		None
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;Total ram usage:        0 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_TMR2_Initialize
  5510 ;;		_TMR2_ISR
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _TMR2_DefaultInterruptHandler
  5516  02DA                     _TMR2_DefaultInterruptHandler:	
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5520  02DA  0008               	return
  5521  02DB                     __end_of_TMR2_DefaultInterruptHandler:	
  5522                           
  5523                           	psect	text21
  5524  012D                     __ptext21:	
  5525 ;; *************** function ___lwdiv *****************
  5526 ;; Defined at:
  5527 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  divisor         2    0[COMMON] unsigned int 
  5530 ;;  dividend        2    2[COMMON] unsigned int 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  quotient        2    5[COMMON] unsigned int 
  5533 ;;  counter         1    7[COMMON] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  2    0[COMMON] unsigned int 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;Total ram usage:        8 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_MyTimer2ISR
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           
  5557                           ;psect for function ___lwdiv
  5558  012D                     ___lwdiv:	
  5559                           
  5560                           ;incstack = 0
  5561                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5562  012D  01F5               	clrf	___lwdiv@quotient
  5563  012E  01F6               	clrf	___lwdiv@quotient+1
  5564  012F  0870               	movf	___lwdiv@divisor,w
  5565  0130  0471               	iorwf	___lwdiv@divisor+1,w
  5566  0131  1903               	btfsc	3,2
  5567  0132  295C               	goto	i1l2121
  5568  0133  01F7               	clrf	___lwdiv@counter
  5569  0134  0AF7               	incf	___lwdiv@counter,f
  5570  0135                     i1l2109:	
  5571  0135  1BF1               	btfsc	___lwdiv@divisor+1,7
  5572  0136  2941               	goto	i1l2111
  5573  0137  3001               	movlw	1
  5574  0138                     u68_25:	
  5575  0138  35F0               	lslf	___lwdiv@divisor,f
  5576  0139  0DF1               	rlf	___lwdiv@divisor+1,f
  5577  013A  0B89               	decfsz	9,f
  5578  013B  2938               	goto	u68_25
  5579  013C  3001               	movlw	1
  5580  013D  00F4               	movwf	??___lwdiv
  5581  013E  0874               	movf	??___lwdiv,w
  5582  013F  07F7               	addwf	___lwdiv@counter,f
  5583  0140  2935               	goto	i1l2109
  5584  0141                     i1l2111:	
  5585  0141  3001               	movlw	1
  5586  0142                     u70_25:	
  5587  0142  35F5               	lslf	___lwdiv@quotient,f
  5588  0143  0DF6               	rlf	___lwdiv@quotient+1,f
  5589  0144  0B89               	decfsz	9,f
  5590  0145  2942               	goto	u70_25
  5591  0146  0871               	movf	___lwdiv@divisor+1,w
  5592  0147  0273               	subwf	___lwdiv@dividend+1,w
  5593  0148  1D03               	skipz
  5594  0149  294C               	goto	u71_25
  5595  014A  0870               	movf	___lwdiv@divisor,w
  5596  014B  0272               	subwf	___lwdiv@dividend,w
  5597  014C                     u71_25:	
  5598  014C  1C03               	skipc
  5599  014D  2953               	goto	i1l2117
  5600  014E  0870               	movf	___lwdiv@divisor,w
  5601  014F  02F2               	subwf	___lwdiv@dividend,f
  5602  0150  0871               	movf	___lwdiv@divisor+1,w
  5603  0151  3BF3               	subwfb	___lwdiv@dividend+1,f
  5604  0152  1475               	bsf	___lwdiv@quotient,0
  5605  0153                     i1l2117:	
  5606  0153  3001               	movlw	1
  5607  0154                     u72_25:	
  5608  0154  36F1               	lsrf	___lwdiv@divisor+1,f
  5609  0155  0CF0               	rrf	___lwdiv@divisor,f
  5610  0156  0B89               	decfsz	9,f
  5611  0157  2954               	goto	u72_25
  5612  0158  3001               	movlw	1
  5613  0159  02F7               	subwf	___lwdiv@counter,f
  5614  015A  1D03               	btfss	3,2
  5615  015B  2941               	goto	i1l2111
  5616  015C                     i1l2121:	
  5617  015C  0876               	movf	___lwdiv@quotient+1,w
  5618  015D  00F1               	movwf	?___lwdiv+1
  5619  015E  0875               	movf	___lwdiv@quotient,w
  5620  015F  00F0               	movwf	?___lwdiv
  5621  0160  0008               	return
  5622  0161                     __end_of___lwdiv:	
  5623                           
  5624                           	psect	text22
  5625  022F                     __ptext22:	
  5626 ;; *************** function _PWM3_LoadDutyValue *****************
  5627 ;; Defined at:
  5628 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  dutyValue       2    8[COMMON] unsigned int 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;		None
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;Total ram usage:        4 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_MyTimer2ISR
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           
  5656                           ;psect for function _PWM3_LoadDutyValue
  5657  022F                     _PWM3_LoadDutyValue:	
  5658                           
  5659                           ;pwm3.c: 77: PWM3DCH = (dutyValue & 0x03FC)>>2;
  5660                           
  5661                           ;incstack = 0
  5662                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5663  022F  0879               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5664  0230  00FB               	movwf	??_PWM3_LoadDutyValue+1
  5665  0231  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
  5666  0232  00FA               	movwf	??_PWM3_LoadDutyValue
  5667  0233  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
  5668  0234  0CFA               	rrf	??_PWM3_LoadDutyValue,f
  5669  0235  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
  5670  0236  0CFA               	rrf	??_PWM3_LoadDutyValue,f
  5671  0237  087A               	movf	??_PWM3_LoadDutyValue,w
  5672  0238  002C               	movlb	12	; select bank12
  5673  0239  0098               	movwf	24	;volatile
  5674                           
  5675                           ;pwm3.c: 80: PWM3DCL = (dutyValue & 0x0003)<<6;
  5676  023A  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
  5677  023B  3903               	andlw	3
  5678  023C  00FA               	movwf	??_PWM3_LoadDutyValue
  5679  023D  3005               	movlw	5
  5680  023E                     u66_25:	
  5681  023E  35FA               	lslf	??_PWM3_LoadDutyValue,f
  5682  023F  3EFF               	addlw	-1
  5683  0240  1D03               	skipz
  5684  0241  2A3E               	goto	u66_25
  5685  0242  357A               	lslf	??_PWM3_LoadDutyValue,w
  5686  0243  0097               	movwf	23	;volatile
  5687  0244  0008               	return
  5688  0245                     __end_of_PWM3_LoadDutyValue:	
  5689                           
  5690                           	psect	text23
  5691  0194                     __ptext23:	
  5692 ;; *************** function _EUSART_Receive_ISR *****************
  5693 ;; Defined at:
  5694 ;;		line 173 in file "mcc_generated_files/eusart.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;Total ram usage:        0 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    2
  5715 ;; This function calls:
  5716 ;;		Absolute function
  5717 ;;		_EUSART_DefaultErrorHandler
  5718 ;;		_EUSART_DefaultFramingErrorHandler
  5719 ;;		_EUSART_DefaultOverrunErrorHandler
  5720 ;;		_EUSART_RxDataHandler
  5721 ;; This function is called by:
  5722 ;;		_EUSART_Initialize
  5723 ;;		_INTERRUPT_InterruptManager
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           
  5728                           ;psect for function _EUSART_Receive_ISR
  5729  0194                     _EUSART_Receive_ISR:	
  5730                           
  5731                           ;eusart.c: 176: eusartRxStatusBuffer[eusartRxHead].status = 0;
  5732                           
  5733                           ;incstack = 0
  5734                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5735  0194  0020               	movlb	0	; select bank0
  5736  0195  0854               	movf	_eusartRxHead,w	;volatile
  5737  0196  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5738  0197  0086               	movwf	6
  5739  0198  0187               	clrf	7
  5740  0199  0181               	clrf	1
  5741                           
  5742                           ;eusart.c: 178: if(RC1STAbits.FERR){
  5743  019A  0023               	movlb	3	; select bank3
  5744  019B  1D1D               	btfss	29,2	;volatile
  5745  019C  29A8               	goto	i1l2263
  5746                           
  5747                           ;eusart.c: 179: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5748  019D  0020               	movlb	0	; select bank0
  5749  019E  0854               	movf	_eusartRxHead,w	;volatile
  5750  019F  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5751  01A0  0086               	movwf	6
  5752  01A1  0187               	clrf	7
  5753  01A2  1481               	bsf	1,1
  5754                           
  5755                           ;eusart.c: 180: EUSART_FramingErrorHandler();
  5756  01A3  085C               	movf	_EUSART_FramingErrorHandler+1,w
  5757  01A4  008A               	movwf	10
  5758  01A5  085B               	movf	_EUSART_FramingErrorHandler,w
  5759  01A6  000A               	callw
  5760  01A7  3181               	pagesel	$
  5761  01A8                     i1l2263:	
  5762                           
  5763                           ;eusart.c: 181: }
  5764                           ;eusart.c: 183: if(RC1STAbits.OERR){
  5765  01A8  0023               	movlb	3	; select bank3
  5766  01A9  1C9D               	btfss	29,1	;volatile
  5767  01AA  29B6               	goto	i1l2269
  5768                           
  5769                           ;eusart.c: 184: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5770  01AB  0020               	movlb	0	; select bank0
  5771  01AC  0854               	movf	_eusartRxHead,w	;volatile
  5772  01AD  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5773  01AE  0086               	movwf	6
  5774  01AF  0187               	clrf	7
  5775  01B0  1501               	bsf	1,2
  5776                           
  5777                           ;eusart.c: 185: EUSART_OverrunErrorHandler();
  5778  01B1  085A               	movf	_EUSART_OverrunErrorHandler+1,w
  5779  01B2  008A               	movwf	10
  5780  01B3  0859               	movf	_EUSART_OverrunErrorHandler,w
  5781  01B4  000A               	callw
  5782  01B5  3181               	pagesel	$
  5783  01B6                     i1l2269:	
  5784                           
  5785                           ;eusart.c: 186: }
  5786                           ;eusart.c: 188: if(eusartRxStatusBuffer[eusartRxHead].status){
  5787  01B6  0020               	movlb	0	; select bank0
  5788  01B7  0854               	movf	_eusartRxHead,w	;volatile
  5789  01B8  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5790  01B9  0086               	movwf	6
  5791  01BA  0187               	clrf	7
  5792  01BB  0801               	movf	1,w
  5793  01BC  1903               	btfsc	3,2
  5794  01BD  29C4               	goto	i1l2273
  5795                           
  5796                           ;eusart.c: 189: EUSART_ErrorHandler();
  5797  01BE  0858               	movf	_EUSART_ErrorHandler+1,w
  5798  01BF  008A               	movwf	10
  5799  01C0  0857               	movf	_EUSART_ErrorHandler,w
  5800  01C1  000A               	callw
  5801  01C2  3181               	pagesel	$
  5802                           
  5803                           ;eusart.c: 190: } else {
  5804  01C3  0008               	return
  5805  01C4                     i1l2273:	
  5806                           
  5807                           ;eusart.c: 191: EUSART_RxDataHandler();
  5808  01C4  3182  2218         	fcall	_EUSART_RxDataHandler
  5809  01C6  0008               	return
  5810  01C7                     __end_of_EUSART_Receive_ISR:	
  5811                           
  5812                           	psect	text24
  5813  003A                     __ptext24:	
  5814 ;; *************** function _MyUART_ISR *****************
  5815 ;; Defined at:
  5816 ;;		line 72 in file "main.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;		None
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  c               1    5[COMMON] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;Total ram usage:        5 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    1
  5837 ;; This function calls:
  5838 ;;		_EUSART_Write
  5839 ;; This function is called by:
  5840 ;;		_main
  5841 ;;		_INTERRUPT_InterruptManager
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _MyUART_ISR
  5847  003A                     _MyUART_ISR:	
  5848                           
  5849                           ;main.c: 73: unsigned char c = RC1REG;
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _MyUART_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5853  003A  0023               	movlb	3	; select bank3
  5854  003B  0819               	movf	25,w	;volatile
  5855  003C  00F1               	movwf	??_MyUART_ISR
  5856  003D  0871               	movf	??_MyUART_ISR,w
  5857  003E  00F5               	movwf	MyUART_ISR@c
  5858                           
  5859                           ;main.c: 74: if(c) {
  5860  003F  0875               	movf	MyUART_ISR@c,w
  5861  0040  1903               	btfsc	3,2
  5862  0041  0008               	return
  5863  0042  28B0               	goto	i1l2321
  5864  0043                     i1l2285:	
  5865                           ;main.c: 76: case S_Idle:
  5866                           
  5867                           ;main.c: 75: switch(PosUart) {
  5868                           
  5869                           
  5870                           ;main.c: 77: if(c == 'V' || c == 'A' || c == 'P') {
  5871  0043  3056               	movlw	86
  5872  0044  0675               	xorwf	MyUART_ISR@c,w
  5873  0045  1903               	btfsc	3,2
  5874  0046  284F               	goto	i1l2291
  5875  0047  3041               	movlw	65
  5876  0048  0675               	xorwf	MyUART_ISR@c,w
  5877  0049  1903               	btfsc	3,2
  5878  004A  284F               	goto	i1l2291
  5879  004B  3050               	movlw	80
  5880  004C  0675               	xorwf	MyUART_ISR@c,w
  5881  004D  1D03               	btfss	3,2
  5882  004E  0008               	return
  5883  004F                     i1l2291:	
  5884                           
  5885                           ;main.c: 78: Type = c;
  5886  004F  0875               	movf	MyUART_ISR@c,w
  5887  0050  00F1               	movwf	??_MyUART_ISR
  5888  0051  0871               	movf	??_MyUART_ISR,w
  5889  0052  0020               	movlb	0	; select bank0
  5890  0053  00D0               	movwf	_Type
  5891                           
  5892                           ;main.c: 79: PosUart = S_Data;
  5893  0054  01CF               	clrf	_PosUart
  5894  0055  0ACF               	incf	_PosUart,f
  5895                           
  5896                           ;main.c: 80: }
  5897                           ;main.c: 81: break;
  5898  0056  0008               	return
  5899  0057                     i1l2295:	
  5900                           ;main.c: 82: case S_Data:
  5901                           
  5902                           
  5903                           ;main.c: 83: Data = c;
  5904  0057  0875               	movf	MyUART_ISR@c,w
  5905  0058  00F1               	movwf	??_MyUART_ISR
  5906  0059  0871               	movf	??_MyUART_ISR,w
  5907  005A  00D1               	movwf	_Data
  5908                           
  5909                           ;main.c: 84: PosUart = S_Check;
  5910  005B  3002               	movlw	2
  5911  005C  00F1               	movwf	??_MyUART_ISR
  5912  005D  0871               	movf	??_MyUART_ISR,w
  5913  005E  00CF               	movwf	_PosUart
  5914                           
  5915                           ;main.c: 85: break;
  5916  005F  0008               	return
  5917  0060                     i1l2297:	
  5918                           ;main.c: 86: case S_Check:
  5919                           
  5920                           
  5921                           ;main.c: 87: if((Type+Data)%256 == c) {
  5922  0060  0850               	movf	_Type,w
  5923  0061  0751               	addwf	_Data,w
  5924  0062  00F1               	movwf	??_MyUART_ISR
  5925  0063  01F2               	clrf	??_MyUART_ISR+1
  5926  0064  0DF2               	rlf	??_MyUART_ISR+1,f
  5927  0065  30FF               	movlw	255
  5928  0066  0571               	andwf	??_MyUART_ISR,w
  5929  0067  00F3               	movwf	??_MyUART_ISR+2
  5930  0068  3000               	movlw	0
  5931  0069  0572               	andwf	??_MyUART_ISR+1,w
  5932  006A  00F4               	movwf	??_MyUART_ISR+3
  5933  006B  0875               	movf	MyUART_ISR@c,w
  5934  006C  0673               	xorwf	??_MyUART_ISR+2,w
  5935  006D  0474               	iorwf	??_MyUART_ISR+3,w
  5936  006E  1D03               	skipz
  5937  006F  28A0               	goto	i1l2313
  5938                           
  5939                           ;main.c: 88: if(Type == 'V') {
  5940  0070  3056               	movlw	86
  5941  0071  0650               	xorwf	_Type,w
  5942  0072  1D03               	btfss	3,2
  5943  0073  287C               	goto	i1l2303
  5944                           
  5945                           ;main.c: 89: Vitesse = Data;
  5946  0074  0851               	movf	_Data,w
  5947  0075  00F1               	movwf	??_MyUART_ISR
  5948  0076  01F2               	clrf	??_MyUART_ISR+1
  5949  0077  0871               	movf	??_MyUART_ISR,w
  5950  0078  00CD               	movwf	_Vitesse
  5951  0079  0872               	movf	??_MyUART_ISR+1,w
  5952  007A  00CE               	movwf	_Vitesse+1
  5953                           
  5954                           ;main.c: 90: } else if(Type == 'A') {
  5955  007B  28AB               	goto	i1l2315
  5956  007C                     i1l2303:	
  5957  007C  3041               	movlw	65
  5958  007D  0650               	xorwf	_Type,w
  5959  007E  1D03               	btfss	3,2
  5960  007F  2888               	goto	i1l2307
  5961                           
  5962                           ;main.c: 91: Angle = Data;
  5963  0080  0851               	movf	_Data,w
  5964  0081  00F1               	movwf	??_MyUART_ISR
  5965  0082  01F2               	clrf	??_MyUART_ISR+1
  5966  0083  0871               	movf	??_MyUART_ISR,w
  5967  0084  00E3               	movwf	_Angle
  5968  0085  0872               	movf	??_MyUART_ISR+1,w
  5969  0086  00E4               	movwf	_Angle+1
  5970                           
  5971                           ;main.c: 92: } else if(Type == 'P') {
  5972  0087  28AB               	goto	i1l2315
  5973  0088                     i1l2307:	
  5974  0088  3050               	movlw	80
  5975  0089  0650               	xorwf	_Type,w
  5976  008A  1D03               	btfss	3,2
  5977  008B  2896               	goto	i1l2311
  5978                           
  5979                           ;main.c: 93: EUSART_Write('P');
  5980  008C  3050               	movlw	80
  5981  008D  3182  228D  3180   	fcall	_EUSART_Write
  5982                           
  5983                           ;main.c: 94: EUSART_Write('+');
  5984  0090  302B               	movlw	43
  5985  0091  3182  228D  3180   	fcall	_EUSART_Write
  5986                           
  5987                           ;main.c: 95: EUSART_Write('{');
  5988  0094  307B               	movlw	123
  5989  0095  28A9               	goto	L1
  5990  0096                     i1l2311:	
  5991                           ;main.c: 96: } else {
  5992                           
  5993                           
  5994                           ;main.c: 97: EUSART_Write('$');
  5995  0096  3024               	movlw	36
  5996  0097  3182  228D  3180   	fcall	_EUSART_Write
  5997                           
  5998                           ;main.c: 98: EUSART_Write('M');
  5999  009A  304D               	movlw	77
  6000  009B  3182  228D  3180   	fcall	_EUSART_Write
  6001                           
  6002                           ;main.c: 99: EUSART_Write('q');
  6003  009E  3071               	movlw	113
  6004  009F  28A9               	goto	L1
  6005  00A0                     i1l2313:	
  6006                           ;main.c: 100: }
  6007                           ;main.c: 101: } else {
  6008                           
  6009                           
  6010                           ;main.c: 102: EUSART_Write('$');
  6011  00A0  3024               	movlw	36
  6012  00A1  3182  228D  3180   	fcall	_EUSART_Write
  6013                           
  6014                           ;main.c: 103: EUSART_Write('C');
  6015  00A4  3043               	movlw	67
  6016  00A5  3182  228D  3180   	fcall	_EUSART_Write
  6017                           
  6018                           ;main.c: 104: EUSART_Write('g');
  6019  00A8  3067               	movlw	103
  6020  00A9                     L1:	
  6021  00A9  3182  228D         	fcall	_EUSART_Write
  6022  00AB                     i1l2315:	
  6023                           
  6024                           ;main.c: 105: }
  6025                           ;main.c: 106: PosUart = S_Idle;
  6026  00AB  0020               	movlb	0	; select bank0
  6027  00AC  01CF               	clrf	_PosUart
  6028                           
  6029                           ;main.c: 107: break;
  6030  00AD  0008               	return
  6031  00AE                     i1l2317:	
  6032                           ;main.c: 108: default:
  6033                           
  6034                           
  6035                           ;main.c: 109: PosUart = S_Idle;
  6036  00AE  01CF               	clrf	_PosUart
  6037                           
  6038                           ;main.c: 111: }
  6039                           
  6040                           ;main.c: 110: break;
  6041  00AF  0008               	return
  6042  00B0                     i1l2321:	
  6043  00B0  0020               	movlb	0	; select bank0
  6044  00B1  084F               	movf	_PosUart,w
  6045                           
  6046                           ; Switch size 1, requested type "space"
  6047                           ; Number of cases is 3, Range of values is 0 to 2
  6048                           ; switch strategies available:
  6049                           ; Name         Instructions Cycles
  6050                           ; simple_byte           10     6 (average)
  6051                           ; direct_byte           12     6 (fixed)
  6052                           ; jumptable            260     6 (fixed)
  6053                           ;	Chosen strategy is simple_byte
  6054  00B2  3A00               	xorlw	0	; case 0
  6055  00B3  1903               	skipnz
  6056  00B4  2843               	goto	i1l2285
  6057  00B5  3A01               	xorlw	1	; case 1
  6058  00B6  1903               	skipnz
  6059  00B7  2857               	goto	i1l2295
  6060  00B8  3A03               	xorlw	3	; case 2
  6061  00B9  1903               	skipnz
  6062  00BA  2860               	goto	i1l2297
  6063  00BB  28AE               	goto	i1l2317
  6064  00BC  0008               	return
  6065  00BD                     __end_of_MyUART_ISR:	
  6066                           
  6067                           	psect	text25
  6068  028D                     __ptext25:	
  6069 ;; *************** function _EUSART_Write *****************
  6070 ;; Defined at:
  6071 ;;		line 162 in file "mcc_generated_files/eusart.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  txData          1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  txData          1    0[COMMON] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;Total ram usage:        1 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_MyTimer2ISR
  6095 ;;		_MyUART_ISR
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function _EUSART_Write
  6101  028D                     _EUSART_Write:	
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in _EUSART_Write: [wreg]
  6105                           ;EUSART_Write@txData stored from wreg
  6106  028D  00F0               	movwf	EUSART_Write@txData
  6107  028E                     i1l635:	
  6108                           ;eusart.c: 165: {
  6109                           
  6110                           ;eusart.c: 164: while(0 == PIR1bits.TXIF)
  6111                           
  6112  028E  0020               	movlb	0	; select bank0
  6113  028F  1E10               	btfss	16,4	;volatile
  6114  0290  2A8E               	goto	i1l635
  6115                           
  6116                           ;eusart.c: 166: }
  6117                           ;eusart.c: 168: TX1REG = txData;
  6118  0291  0870               	movf	EUSART_Write@txData,w
  6119  0292  0023               	movlb	3	; select bank3
  6120  0293  009A               	movwf	26	;volatile
  6121  0294  0008               	return
  6122  0295                     __end_of_EUSART_Write:	
  6123                           
  6124                           	psect	text26
  6125  02CB                     __ptext26:	
  6126 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6127 ;; Defined at:
  6128 ;;		line 209 in file "mcc_generated_files/eusart.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		None
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;Total ram usage:        0 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_EUSART_Initialize
  6152 ;;		_EUSART_Receive_ISR
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6158  02CB                     _EUSART_DefaultOverrunErrorHandler:	
  6159                           
  6160                           ;eusart.c: 212: RC1STAbits.CREN = 0;
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6164  02CB  0023               	movlb	3	; select bank3
  6165  02CC  121D               	bcf	29,4	;volatile
  6166                           
  6167                           ;eusart.c: 213: RC1STAbits.CREN = 1;
  6168  02CD  161D               	bsf	29,4	;volatile
  6169  02CE  0008               	return
  6170  02CF                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  6171                           
  6172                           	psect	text27
  6173  02DB                     __ptext27:	
  6174 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6175 ;; Defined at:
  6176 ;;		line 207 in file "mcc_generated_files/eusart.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		None
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;Total ram usage:        0 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_EUSART_Initialize
  6200 ;;		_EUSART_Receive_ISR
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6206  02DB                     _EUSART_DefaultFramingErrorHandler:	
  6207                           
  6208                           ;incstack = 0
  6209                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6210  02DB  0008               	return
  6211  02DC                     __end_of_EUSART_DefaultFramingErrorHandler:	
  6212                           
  6213                           	psect	text28
  6214  02D5                     __ptext28:	
  6215 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6216 ;; Defined at:
  6217 ;;		line 217 in file "mcc_generated_files/eusart.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;Total ram usage:        0 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    1
  6238 ;; This function calls:
  6239 ;;		_EUSART_RxDataHandler
  6240 ;; This function is called by:
  6241 ;;		_EUSART_Initialize
  6242 ;;		_EUSART_Receive_ISR
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           
  6247                           ;psect for function _EUSART_DefaultErrorHandler
  6248  02D5                     _EUSART_DefaultErrorHandler:	
  6249                           
  6250                           ;eusart.c: 218: EUSART_RxDataHandler();
  6251                           
  6252                           ;incstack = 0
  6253                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6254  02D5  3182  2218         	fcall	_EUSART_RxDataHandler
  6255  02D7  0008               	return
  6256  02D8                     __end_of_EUSART_DefaultErrorHandler:	
  6257                           
  6258                           	psect	text29
  6259  0218                     __ptext29:	
  6260 ;; *************** function _EUSART_RxDataHandler *****************
  6261 ;; Defined at:
  6262 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;		None
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;Total ram usage:        1 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; This function calls:
  6283 ;;		Nothing
  6284 ;; This function is called by:
  6285 ;;		_EUSART_Receive_ISR
  6286 ;;		_EUSART_DefaultErrorHandler
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           
  6291                           ;psect for function _EUSART_RxDataHandler
  6292  0218                     _EUSART_RxDataHandler:	
  6293                           
  6294                           ;eusart.c: 199: eusartRxBuffer[eusartRxHead++] = RC1REG;
  6295                           
  6296                           ;incstack = 0
  6297                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6298  0218  0023               	movlb	3	; select bank3
  6299  0219  0819               	movf	25,w	;volatile
  6300  021A  00F0               	movwf	??_EUSART_RxDataHandler
  6301  021B  0020               	movlb	0	; select bank0
  6302  021C  0854               	movf	_eusartRxHead,w
  6303  021D  3E45               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6304  021E  0086               	movwf	6
  6305  021F  0187               	clrf	7
  6306  0220  0870               	movf	??_EUSART_RxDataHandler,w
  6307  0221  0081               	movwf	1
  6308  0222  3001               	movlw	1
  6309  0223  00F0               	movwf	??_EUSART_RxDataHandler
  6310  0224  0870               	movf	??_EUSART_RxDataHandler,w
  6311  0225  07D4               	addwf	_eusartRxHead,f	;volatile
  6312                           
  6313                           ;eusart.c: 200: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6314  0226  3008               	movlw	8
  6315  0227  0254               	subwf	_eusartRxHead,w	;volatile
  6316  0228  1803               	btfsc	3,0
  6317                           
  6318                           ;eusart.c: 201: {
  6319                           ;eusart.c: 202: eusartRxHead = 0;
  6320  0229  01D4               	clrf	_eusartRxHead	;volatile
  6321                           
  6322                           ;eusart.c: 203: }
  6323                           ;eusart.c: 204: eusartRxCount++;
  6324  022A  3001               	movlw	1
  6325  022B  00F0               	movwf	??_EUSART_RxDataHandler
  6326  022C  0870               	movf	??_EUSART_RxDataHandler,w
  6327  022D  07D3               	addwf	_eusartRxCount,f	;volatile
  6328  022E  0008               	return
  6329  022F                     __end_of_EUSART_RxDataHandler:	
  6330  007E                     btemp	set	126	;btemp
  6331  007E                     int$flags	set	126
  6332  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        2
    BSS         54
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      4      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1868$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_RX$1874$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX_EMPTY$1880$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_RX_EMPTY$1886$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S443$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyTimer2ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyTimer2ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyUART_ISR(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    S443$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S443$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S443$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), Absolute function(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), Absolute function(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E12103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyUART_ISR(), EUSART_Receive_ISR(), Absolute function(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S85$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _MyTimer2ISR->_PWM3_LoadDutyValue
    _PWM3_LoadDutyValue->___lwdiv
    _MyUART_ISR->_EUSART_Write
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_EUSART_SetRxInterruptHandler
    _main->_TMR2_SetInterruptHandler
    _main->_TMR2_WriteTimer
    _TMR2_WriteTimer->_TMR2_Counter8BitSet
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1034
                                              2 BANK0      2     2      0
       _EUSART_SetRxInterruptHandler
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_WriteTimer                                      1     1      0      44
                                              1 BANK0      1     1      0
                _TMR2_Counter8BitSet
 ---------------------------------------------------------------------------------
 (2) _TMR2_Counter8BitSet                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     468
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     633
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                         _MyUART_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0     456
                   Absolute function *
                        _MyTimer2ISR *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MyTimer2ISR                                          0     0      0     456
                       _EUSART_Write
                 _PWM3_LoadDutyValue
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _PWM3_LoadDutyValue                                   4     2      2     120
                                              8 COMMON     4     2      2
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _MyUART_ISR                                           5     5      0     177
                                              1 COMMON     5     5      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_SetRxInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR2_WriteTimer
     _TMR2_Counter8BitSet

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _MyUART_ISR *
     _EUSART_Write
   _TMR2_ISR *
     Absolute function(Fake) *
     _MyTimer2ISR *
       _EUSART_Write
       _PWM3_LoadDutyValue
         ___lwdiv (ARG)
       ___lwdiv
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      53      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      53      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 25 09:24:22 2020

                ?_EUSART_SetRxInterruptHandler 005F                                    MyUART_ISR@c 0075  
             __end_of_TMR2_SetInterruptHandler 02AE                                    __CFG_CP$OFF 0000  
                                  __CFG_LVP$ON 0000                                            _PR2 001B  
                                          u940 011D                                            u967 0125  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 005F  
                              _TMR2_Initialize 0245                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 _I2C_DO_RESET 0000                                   __CFG_ZCD$OFF 0000  
                                         l2365 0114                                           l2367 011F  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _T2PR 001B  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _Data 0051                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _Type 0050  
                                         _main 00F8                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0024  
                                __CFG_MCLRE$ON 0000                            _TMR2_Counter8BitSet 02C6  
                                __CFG_PLLEN$ON 0000                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                                  _I2C_DO_RX_ACK 0000  
                __end_of_OSCILLATOR_Initialize 029C                                          ?_main 0070  
                                __CFG_WDTE$OFF 0000                                          _T2CON 001C  
                                        _T2HLT 001D                                __end_of___lwdiv 0161  
                                        i1l123 001F                                          _T2TMR 001A  
                                        i1l118 0017                                          _T2RST 001F  
                                        i1l635 028E                                          u70_25 0142  
                                        u71_25 014C                                          u72_25 0154  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u66_25 023E  
                                        u68_25 0138                                          _RXPPS 0E24  
                                        _Angle 0063                           ?_TMR2_Counter8BitSet 0070  
                             __end_of_TMR2_ISR 0278                                    ?_TMR2_Start 0070  
                                   _MyUART_ISR 003A                        __end_of_PWM3_Initialize 0283  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                _TMR2_StartTimer 02CF  
                                _fsmStateTable 01F8                                __initialization 0026  
                                ??_MyTimer2ISR 007C                                   __end_of_main 012D  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 025A  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0061                       _TMR2_SetInterruptHandler 02A8  
                                       ??_main 0061                                _TMR2_WriteTimer 02A2  
                        ??_TMR2_Counter8BitSet 005F      __end_of_EUSART_DefaultFramingErrorHandler 02DC  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 02DB  
                   _EUSART_OverrunErrorHandler 0059                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RA2PPS 0E92                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB6PPS 0E9E  
                                       i1l2111 0141                                         i1l2121 015C  
                                       _RB7PPS 0E9F                                         i1l2117 0153  
                                       i1l2109 0135                                         i1l2311 0096  
                                       i1l2303 007C                                         i1l2313 00A0  
                                       i1l2321 00B0                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l2307 0088  
                                       i1l2315 00AB                                         _ODCONC 028E  
                                       i1l2317 00AE                                         i1l2245 01EC  
                                       i1l2263 01A8                                         i1l2273 01C4  
                                       i1l2291 004F                                         i1l2285 0043  
                                       i1l2269 01B6                                         i1l2295 0057  
                                       i1l2297 0060                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                 __CFG_PWRTE$OFF 0000  
                  __size_of_PWM3_LoadDutyValue 0016                                 __CFG_STVREN$ON 0000  
                                    ??___lwdiv 0074                            __size_of_TMR2_Start 0003  
                      __size_of_I2C_Initialize 000A                            __end_of_MyTimer2ISR 01F8  
                          _I2C_DO_ADDRESS_NACK 0000                        __end_of_TMR2_StartTimer 02D2  
     TMR2_SetInterruptHandler@InterruptHandler 005F                                    ?_MyUART_ISR 0070  
                             ?_PWM3_Initialize 0070                              _SYSTEM_Initialize 025A  
                      __end_of__initialization 0036                             ?_SYSTEM_Initialize 0070  
                      _rdBlkRegCompleteHandler 0000                                 __pcstackCOMMON 0070  
                                 __pidataBANK0 02D8                         _I2C_CallbackReturnStop 0000  
                          ??_SYSTEM_Initialize 0061                                      ?_TMR2_ISR 0070  
                      __end_of_TMR2_WriteTimer 02A8                               ?_TMR2_Initialize 0070  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 003D  
              ??_EUSART_SetOverrunErrorHandler 0061                      __end_of_SYSTEM_Initialize 026C  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0295  
                  __size_of_EUSART_Receive_ISR 0033                            _I2C_DO_RX_NACK_STOP 0000  
                        _rd1RegCompleteHandler 0000                          _wr1RegCompleteHandler 0000  
                                   __pmaintext 00F8                                    _MyTimer2ISR 01C7  
                              _I2C_DO_TX_EMPTY 0000                                __CFG_PPS1WAY$ON 0000  
                                   ??_TMR2_ISR 007C                                     __pintentry 0004  
                          __size_of_MyUART_ISR 0083                   ??_EUSART_DefaultErrorHandler 0071  
                                _eusartRxCount 0053                                __CFG_WDTCCS$SWC 0000  
                __size_of_EUSART_RxDataHandler 0017                                        _OSCTUNE 0098  
                                      _PWM3DCH 0618                                        _PWM3DCL 0617  
                                      _PWM3CON 0619                                        _SSP1ADD 0212  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                                        _SSP1BUF 0211  
                                 ??_TMR2_Start 005F                       ??_EUSART_SetErrorHandler 0061  
                             ?_TMR2_StartTimer 0070                                      _I2C_DO_RX 0000  
                                    _I2C_DO_TX 0000            __size_of_EUSART_DefaultErrorHandler 0003  
                   ??_TMR2_SetInterruptHandler 0061                                        _PosUart 004F  
                                      _Vitesse 004D                                        ___lwdiv 012D  
                             ?_TMR2_WriteTimer 0070                             __end_of_TMR2_Start 02D5  
                               _I2C_Initialize 0283                                        __ptext1 02A2  
                                      __ptext2 02C6                                        __ptext3 02CF  
                                      __ptext4 02D2                                        __ptext5 025A  
                                      __ptext6 0245                                        __ptext7 02A8  
                                      __ptext8 0278                                        __ptext9 00BD  
                        _OSCILLATOR_Initialize 0295                                      _T2CONbits 001C  
                     ??_PIN_MANAGER_Initialize 005F                                      _T2HLTbits 001D  
                   __size_of_SYSTEM_Initialize 0012                                        clrloop0 029D  
                         end_of_initialization 0036                                      _T2RSTbits 001F  
        __end_of_EUSART_SetOverrunErrorHandler 02BA         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 02B4                              _EUSART_Initialize 0161  
                           ?_EUSART_Initialize 0070                         __end_of_I2C_Initialize 028D  
                  __end_of_TMR2_Counter8BitSet 02CB                            ??_EUSART_Initialize 0061  
                                    _PORTAbits 000C                                      _SSPDATPPS 0E21  
                                    _SSPCLKPPS 0E20                               __CFG_FOSC$INTOSC 0000  
                        __size_of_EUSART_Write 0008                                   ??_MyUART_ISR 0071  
              __size_of_EUSART_SetErrorHandler 0006                        TMR2_WriteTimer@timerVal 0060  
                    __end_of_EUSART_Initialize 0194                                    _I2C_DO_IDLE 0000  
                                  _I2C_DO_RCEN 0000                     __end_of_PWM3_LoadDutyValue 0245  
                     _I2C_DO_SEND_RESTART_READ 0000                                ?_I2C_Initialize 0070  
         __end_of_TMR2_DefaultInterruptHandler 02DB          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 02DA                        _I2C_CallbackReturnReset 0000  
           __end_of_EUSART_DefaultErrorHandler 02D8                     _EUSART_DefaultErrorHandler 02D5  
                                 _EUSART_Write 028D                              __size_of_TMR2_ISR 000C  
                           __end_of_MyUART_ISR 00BD                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 0026                __size_of_PIN_MANAGER_Initialize 003B  
 EUSART_SetRxInterruptHandler@interruptHandler 005F                         _I2C_DO_RX_NACK_RESTART 0000  
               ?_EUSART_SetOverrunErrorHandler 005F                       __size_of_PWM3_Initialize 000B  
                   _EUSART_FramingErrorHandler 005B                                   ?_MyTimer2ISR 0070  
                       _EUSART_SetErrorHandler 02C0                                    _CCPTMRSbits 029E  
                                  __pdataBANK0 0063                  ?_TMR2_DefaultInterruptHandler 0070  
                             _I2C_DO_SEND_STOP 0000                          _I2C_DO_SEND_ADR_WRITE 0000  
                                  __pbssCOMMON 007D                                      ___latbits 0002  
                                __pcstackBANK0 005F                       __size_of_TMR2_Initialize 0015  
                   __end_of_EUSART_Receive_ISR 01C7                     __size_of_EUSART_Initialize 0033  
                    _I2C_DO_SEND_RESTART_WRITE 0000               _EUSART_RxDefaultInterruptHandler 005D  
                                    __pnvBANK0 0055                          _rd2RegCompleteHandler 0000  
                        __end_of_fsmStateTable 0218                   __end_of_EUSART_RxDataHandler 022F  
                             ___lwdiv@dividend 0072                         _PIN_MANAGER_Initialize 00BD  
                        _wr2RegCompleteHandler 0000                                       ?___lwdiv 0070  
                                 _eusartRxHead 0054                                   _eusartRxTail 007D  
                 ??_INTERRUPT_InterruptManager 007C                                       _BAUD1CON 019F  
                             ___lwdiv@quotient 0075                                       _T2CLKCON 001E  
                               _eusartRxBuffer 0045                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 005F                                      clear_ram0 029C  
                                     _PIE1bits 0090                              _eusartRxLastError 0052  
                     __size_of_TMR2_StartTimer 0003            __size_of_INTERRUPT_InterruptManager 0020  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 0061  
                                     _PIR2bits 0011                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
    __end_of_EUSART_DefaultOverrunErrorHandler 02CF     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 02CB                                       _TMR2_ISR 026C  
                                     _SSP1STAT 0214                              ??_PWM3_Initialize 005F  
               ??_TMR2_DefaultInterruptHandler 0070              __size_of_TMR2_SetInterruptHandler 0006  
                     __size_of_TMR2_WriteTimer 0006                      ?_TMR2_SetInterruptHandler 005F  
                                   _I2C_Status 0020                              ??_TMR2_Initialize 0061  
                             ??_I2C_Initialize 005F                        ??_OSCILLATOR_Initialize 005F  
                          _EUSART_ErrorHandler 0057                           _I2C_DO_SEND_ADR_READ 0000  
                         __size_of_MyTimer2ISR 0031                    ?_EUSART_DefaultErrorHandler 0070  
                             __size_of___lwdiv 0034                             _PWM3_LoadDutyValue 022F  
                              ___lwdiv@divisor 0070                           _EUSART_RxDataHandler 0218  
                 __size_of_TMR2_Counter8BitSet 0005                                ___lwdiv@counter 0077  
                                     __ptext10 0295                                       __ptext11 0283  
                                     __ptext20 02DA                                       __ptext12 0161  
                                     __ptext21 012D                                       __ptext13 02AE  
                                     __ptext22 022F                                       __ptext14 02B4  
                                     __ptext23 0194                                       __ptext15 02BA  
                                     __ptext24 003A                                       __ptext16 02C0  
                                     __ptext25 028D                                       __ptext26 02CB  
                                     __ptext18 026C                                       __ptext27 02DB  
                                     __ptext19 01C7                                       __ptext28 02D5  
                                     __ptext29 0218                            ?_PWM3_LoadDutyValue 0078  
                                 _SSP1CON1bits 0215                                   _SSP1CON2bits 0216  
                                __size_of_main 0035                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 005F                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 005F                           ??_PWM3_LoadDutyValue 007A  
                                     int$flags 007E                              ??_TMR2_StartTimer 005F  
           __end_of_INTERRUPT_InterruptManager 0024                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 02C0         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 02BA                                   _SSP1STATbits 0214  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                  TMR2_Counter8BitSet@timerVal 005F                                       intlevel1 0000  
                            ??_TMR2_WriteTimer 0060                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 02C6                              __CFG_CLKOUTEN$OFF 0000  
                          _I2C_DO_SEND_RESTART 0000           __end_of_EUSART_SetRxInterruptHandler 02B4  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 02AE  
                           _EUSART_Receive_ISR 0194  EUSART_SetFramingErrorHandler@interruptHandler 005F  
                  PWM3_LoadDutyValue@dutyValue 0078                                  __pstringtext1 01F8  
                          ?_EUSART_Receive_ISR 0070                                     _TX1STAbits 019E  
                                   _TMR2_Start 02D2                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 00F8                           ??_EUSART_Receive_ISR 0071  
                        _TMR2_InterruptHandler 0055                                _PWM3_Initialize 0278  
